<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>YangJun-Ux BLOG</title>
    <link>https://yangjun-ux.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>@데이터 사이언스, @머신러닝, @AI 개발자, @SeoulNationalUniversity</description>
    <pubDate>Thu, 23 Apr 2020 10:31:25 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Programmers 문제풀이연습  - KAKAO - 캐시</title>
      <link>https://yangjun-ux.github.io/2020/04/23/kakao_cache/</link>
      <guid>https://yangjun-ux.github.io/2020/04/23/kakao_cache/</guid>
      <pubDate>Thu, 23 Apr 2020 10:26:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습&lt;/h3&gt;&lt;h4 id=&quot;KAKAO-캐시&quot;&gt;&lt;a href=&quot;#KAKAO-캐시&quot; class=&quot;headerlink&quot; title=&quot;KAKAO - 캐시&quot;&gt;&lt;/a&gt;KAKAO - 캐시&lt;/h4&gt;&lt;p&gt;어피치에게 시달리는 제이지를 도와, DB 캐시를 적용할 때 캐시 크기에 따른 실행시간 측정 프로그램을 작성하시오.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습"><a href="#Programmers-코딩테스트-연습" class="headerlink" title="Programmers  코딩테스트 연습"></a>Programmers  코딩테스트 연습</h3><h4 id="KAKAO-캐시"><a href="#KAKAO-캐시" class="headerlink" title="KAKAO - 캐시"></a>KAKAO - 캐시</h4><p>어피치에게 시달리는 제이지를 도와, DB 캐시를 적용할 때 캐시 크기에 따른 실행시간 측정 프로그램을 작성하시오.</p><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><h2 id="2018-KAKAO-BLIND-RECRUITMENT-캐시"><a href="#2018-KAKAO-BLIND-RECRUITMENT-캐시" class="headerlink" title="2018 KAKAO BLIND RECRUITMENT - 캐시"></a>2018 KAKAO BLIND RECRUITMENT - 캐시</h2><blockquote><h2 id="캐시"><a href="#캐시" class="headerlink" title="캐시"></a>캐시</h2><h3 id="지도개발팀에서-근무하는-제이지는-지도에서-도시-이름을-검색하면-해당-도시와-관련된-맛집-게시물들을-데이터베이스에서-읽어-보여주는-서비스를-개발하고-있다"><a href="#지도개발팀에서-근무하는-제이지는-지도에서-도시-이름을-검색하면-해당-도시와-관련된-맛집-게시물들을-데이터베이스에서-읽어-보여주는-서비스를-개발하고-있다" class="headerlink" title="지도개발팀에서 근무하는 제이지는 지도에서 도시 이름을 검색하면 해당 도시와 관련된 맛집 게시물들을 데이터베이스에서 읽어 보여주는 서비스를 개발하고 있다."></a>지도개발팀에서 근무하는 제이지는 지도에서 도시 이름을 검색하면 해당 도시와 관련된 맛집 게시물들을 데이터베이스에서 읽어 보여주는 서비스를 개발하고 있다.</h3></blockquote><blockquote><ul><li>이 프로그램의 테스팅 업무를 담당하고 있는 어피치는 서비스를 오픈하기 전 각 로직에 대한 성능 측정을 수행하였는데, 제이지가 작성한 부분 중 데이터베이스에서 게시물을 가져오는 부분의 실행시간이 너무 오래 걸린다는 것을 알게 되었다.<br>어피치는 제이지에게 해당 로직을 개선하라고 닦달하기 시작하였고, 제이지는 DB 캐시를 적용하여 성능 개선을 시도하고 있지만 캐시 크기를 얼마로 해야 효율적인지 몰라 난감한 상황이다.<h3 id="어피치에게-시달리는-제이지를-도와-DB-캐시를-적용할-때-캐시-크기에-따른-실행시간-측정-프로그램을-작성하시오"><a href="#어피치에게-시달리는-제이지를-도와-DB-캐시를-적용할-때-캐시-크기에-따른-실행시간-측정-프로그램을-작성하시오" class="headerlink" title="어피치에게 시달리는 제이지를 도와, DB 캐시를 적용할 때 캐시 크기에 따른 실행시간 측정 프로그램을 작성하시오."></a>어피치에게 시달리는 제이지를 도와, DB 캐시를 적용할 때 캐시 크기에 따른 실행시간 측정 프로그램을 작성하시오.</h3></li></ul></blockquote><blockquote><h3 id="입력형식"><a href="#입력형식" class="headerlink" title="입력형식"></a>입력형식</h3></blockquote><ul><li>캐시 크기(cacheSize)와 도시이름 배열(cities)을 입력받는다.</li><li>cacheSize는 정수이며, 범위는 0 ≦ cacheSize ≦ 30 이다.</li><li>cities는 도시 이름으로 이뤄진 문자열 배열로, 최대 도시 수는 100,000개이다.</li><li>각 도시 이름은 공백, 숫자, 특수문자 등이 없는 영문자로 구성되며, 대소문자 구분을 하지 않는다. 도시 이름은 최대 20자로 이루어져 있다.</li></ul><blockquote><h3 id="출력형식"><a href="#출력형식" class="headerlink" title="출력형식"></a>출력형식</h3></blockquote><ul><li>입력된 도시이름 배열을 순서대로 처리할 때, 총 실행시간을 출력한다.</li></ul><blockquote><h3 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h3></blockquote><ul><li>캐시 교체 알고리즘은 LRU(Least Recently Used)를 사용한다.</li><li>cache hit일 경우 실행시간은 1이다.</li><li>cache miss일 경우 실행시간은 5이다.</li></ul><h3 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h3><table><thead><tr><th>캐시크기</th><th>도시이름(cities)</th><th>실행시간</th></tr></thead><tbody><tr><td>3</td><td>[Jeju, Pangyo, Seoul, NewYork, LA, Jeju, Pangyo, Seoul, NewYork, LA]</td><td>50</td></tr><tr><td>3</td><td>[Jeju, Pangyo, Seoul, Jeju, Pangyo, Seoul, Jeju, Pangyo, Seoul]</td><td>21</td></tr><tr><td>2</td><td>[Jeju, Pangyo, Seoul, NewYork, LA, SanFrancisco, Seoul, Rome, Paris, Jeju, NewYork, Rome]</td><td>60</td></tr><tr><td>5</td><td>[Jeju, Pangyo, Seoul, NewYork, LA, SanFrancisco, Seoul, Rome, Paris, Jeju, NewYork, Rome]</td><td>52</td></tr><tr><td>2</td><td>[Jeju, Pangyo, NewYork, newyork]</td><td>16</td></tr><tr><td>0</td><td>[Jeju, Pangyo, Seoul, NewYork, LA]</td><td>25</td></tr></tbody></table><h3 id="코드설명"><a href="#코드설명" class="headerlink" title="코드설명"></a>코드설명</h3><p>문제는 단순하다. 캐시(임시저장공간)이 있고, 들어와야하는 데이터들이 있다. 처음에 들어온 데이터는 캐시를 하나씩 차지하고, 이후 캐시에 있는 데이터랑 같은 도시명이 입력되면 캐시에 있는 데이터를 활용하게 된다.  </p><p>먼저 도시명은 대소문자 구별을 하지 않으므로, 전부 소문자로 바꿔준다.<br>일단 캐시사이즈가 0인 경우, 저장될 수 있는 데이터가 하나도 없으므로 도시마다 5초씩 걸린다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if cacheSize &#x3D;&#x3D; 0:</span><br><span class="line">        return 5 * len(cities)</span><br></pre></td></tr></table></figure><p>첫 번째 도시는 캐시에 아무 것도 없을 때 입력되므로, 무조건 5초가 걸린다(cache miss 이므로).<br>cacheSize가 도시 수보다 많으면, 전부 다 Cache에 저장이 가능하며 이 경우 캐시엔 계속 쌓이기만 한다.<br>cacheSize가 도시 수보다 많은 경우 첫 번째 도시 이후의 도시 명이 입력됐을 때, 캐시랑 일치하면 1초추가, 잁치하지 않으면 캐시에 저장 및 5초 추가를 하는 코드이다</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">elif cacheSize &gt; len(cities):</span><br><span class="line">        for x in cities[idx:]:</span><br><span class="line">            if x not in ls_1:</span><br><span class="line">                ls_1.append(x)</span><br><span class="line">                time +&#x3D; 5</span><br><span class="line">            else:</span><br><span class="line">                ls_1.append(x)</span><br><span class="line">                ls_1.remove(x)</span><br><span class="line">                time +&#x3D; 1</span><br><span class="line">        return time</span><br></pre></td></tr></table></figure><p>이런 예외사항들을 제외하면 캐시의 크기에 따라서 도시명이 입력되면 캐시의 정보가 바뀌게 되고, 이를 구현해 줄 코드가 따로 필요하다.<br>ls_1 이 캐시 저장소이다. cacheSize가 1이 되면 멈추는 while문이 먼저 돌면서 도시 명이 캐시에 없으면 idx를 1올리고, 도시명을 캐시에 추가하고, 시간을 5초 추가한다. 도시 명이 캐시에 있으면 사용된 캐시는 가장 나중으로 들어가야하기 때문에 append 해주고, 원래 있던 도시명은 remove 한다.  시간은 1초 추가한다. 이를 캐시 저장소 자리가 1개 남을 때 까지 반복해준다.<br>남은 1자리는 for문을 활용하여 처리한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">while cacheSize !&#x3D; 1:</span><br><span class="line">     if cities[idx] not in ls_1:</span><br><span class="line">         ls_1.append(cities[idx])</span><br><span class="line">         idx +&#x3D; 1</span><br><span class="line">         cacheSize -&#x3D; 1</span><br><span class="line">         time +&#x3D; 5</span><br><span class="line">     else:</span><br><span class="line">         ls_1.append(cities[idx])</span><br><span class="line">         ls_1.remove(cities[idx])</span><br><span class="line">         idx +&#x3D; 1</span><br><span class="line">         time +&#x3D; 1</span><br><span class="line">for x in cities[idx:]:</span><br><span class="line">    if x not in ls_1:</span><br><span class="line">        ls_1.append(x)</span><br><span class="line">        ls_1.remove(ls_1[0])</span><br><span class="line">        time +&#x3D; 5</span><br><span class="line">    else:</span><br><span class="line">        ls_1.append(x)</span><br><span class="line">        ls_1.remove(x)</span><br><span class="line">        time +&#x3D; 1</span><br><span class="line">return time</span><br></pre></td></tr></table></figure><p>코드가 좀 길고 효율성이 떨어지는 것 같아 걱정이지만 이게 최선인 것 같다…</p><h3 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(cacheSize, cities)</span>:</span></span><br><span class="line">    ls_1 = []</span><br><span class="line">    ls_1.append(cities[<span class="number">0</span>])</span><br><span class="line">    idx = <span class="number">1</span></span><br><span class="line">    time = <span class="number">5</span></span><br><span class="line">    cities_low = []</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cities:</span><br><span class="line">        x = x.lower()</span><br><span class="line">        cities_low.append(x)</span><br><span class="line">    cities = cities_low</span><br><span class="line">    <span class="keyword">if</span> cacheSize == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span> * len(cities)</span><br><span class="line">    <span class="keyword">elif</span> cacheSize &gt; len(cities):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> cities[idx:]:</span><br><span class="line">            <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> ls_1:</span><br><span class="line">                ls_1.append(x)</span><br><span class="line">                time += <span class="number">5</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ls_1.append(x)</span><br><span class="line">                ls_1.remove(x)</span><br><span class="line">                time += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> time</span><br><span class="line">    <span class="keyword">while</span> cacheSize != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">if</span> cities[idx] <span class="keyword">not</span> <span class="keyword">in</span> ls_1:</span><br><span class="line">            ls_1.append(cities[idx])</span><br><span class="line">            idx += <span class="number">1</span></span><br><span class="line">            cacheSize -= <span class="number">1</span></span><br><span class="line">            time += <span class="number">5</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ls_1.append(cities[idx])</span><br><span class="line">            ls_1.remove(cities[idx])</span><br><span class="line">            idx += <span class="number">1</span></span><br><span class="line">            time += <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cities[idx:]:</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> ls_1:</span><br><span class="line">            ls_1.append(x)</span><br><span class="line">            ls_1.remove(ls_1[<span class="number">0</span>])</span><br><span class="line">            time += <span class="number">5</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ls_1.append(x)</span><br><span class="line">            ls_1.remove(x)</span><br><span class="line">            time += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> time</span><br></pre></td></tr></table></figure><h3 id="정답확인"><a href="#정답확인" class="headerlink" title="정답확인"></a>정답확인</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">3</span>, [<span class="string">"Jeju"</span>, <span class="string">"Pangyo"</span>, <span class="string">"Seoul"</span>, <span class="string">"NewYork"</span>, <span class="string">"LA"</span>, <span class="string">'Jeju'</span>, <span class="string">'Pangyo'</span>, <span class="string">'Seoul'</span>, <span class="string">'NewYork'</span>, <span class="string">'LA'</span>])</span><br></pre></td></tr></table></figure><pre><code>50</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">3</span>, [<span class="string">'Jeju'</span>, <span class="string">'Pangyo'</span>, <span class="string">'Seoul'</span>, <span class="string">'Jeju'</span>, <span class="string">'Pangyo'</span>, <span class="string">'Seoul'</span>, <span class="string">'Jeju'</span>, <span class="string">'Pangyo'</span>, <span class="string">'Seoul'</span>])</span><br></pre></td></tr></table></figure><pre><code>25</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">2</span>, [<span class="string">'Jeju'</span>, <span class="string">'Pangyo'</span>, <span class="string">'Seoul'</span>, <span class="string">'NewYork'</span>, <span class="string">'LA'</span>, <span class="string">'SanFrancisco'</span>, <span class="string">'Seoul'</span>, <span class="string">'Rome'</span>, <span class="string">'Paris'</span>, <span class="string">'Jeju'</span>, <span class="string">'NewYork'</span>, <span class="string">'Rome'</span>])</span><br></pre></td></tr></table></figure><pre><code>60</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">5</span>, [<span class="string">'Jeju'</span>, <span class="string">'Pangyo'</span>, <span class="string">'Seoul'</span>, <span class="string">'NewYork'</span>, <span class="string">'LA'</span>, <span class="string">'SanFrancisco'</span>, <span class="string">'Seoul'</span>, <span class="string">'Rome'</span>, <span class="string">'Paris'</span>, <span class="string">'Jeju'</span>, <span class="string">'NewYork'</span>, <span class="string">'Rome'</span>])</span><br></pre></td></tr></table></figure><pre><code>52</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">2</span> , [<span class="string">'Jeju'</span>, <span class="string">'Pangyo'</span>, <span class="string">'NewYork'</span>, <span class="string">'newyork'</span>])</span><br></pre></td></tr></table></figure><pre><code>16</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">0</span> , [<span class="string">'Jeju'</span>, <span class="string">'Pangyo'</span>, <span class="string">'Seoul'</span>, <span class="string">'NewYork'</span>, <span class="string">'LA'</span>])</span><br></pre></td></tr></table></figure><pre><code>25</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/04/23/kakao_cache/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - KAKAO 오픈채팅방</title>
      <link>https://yangjun-ux.github.io/2020/04/21/kakao_openchat/</link>
      <guid>https://yangjun-ux.github.io/2020/04/21/kakao_openchat/</guid>
      <pubDate>Tue, 21 Apr 2020 11:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습&lt;/h3&gt;&lt;h4 id=&quot;KAKAO-오픈채팅방&quot;&gt;&lt;a href=&quot;#KAKAO-오픈채팅방&quot; class=&quot;headerlink&quot; title=&quot;KAKAO - 오픈채팅방&quot;&gt;&lt;/a&gt;KAKAO - 오픈채팅방&lt;/h4&gt;&lt;p&gt;채팅방에 들어오고 나가거나, 닉네임을 변경한 기록이 담긴 문자열 배열 record가 매개변수로 주어질 때, 모든 기록이 처리된 후, 최종적으로 방을 개설한 사람이 보게 되는 메시지를 문자열 배열 형태로 return 하도록 solution 함수를 완성하라.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습"><a href="#Programmers-코딩테스트-연습" class="headerlink" title="Programmers  코딩테스트 연습"></a>Programmers  코딩테스트 연습</h3><h4 id="KAKAO-오픈채팅방"><a href="#KAKAO-오픈채팅방" class="headerlink" title="KAKAO - 오픈채팅방"></a>KAKAO - 오픈채팅방</h4><p>채팅방에 들어오고 나가거나, 닉네임을 변경한 기록이 담긴 문자열 배열 record가 매개변수로 주어질 때, 모든 기록이 처리된 후, 최종적으로 방을 개설한 사람이 보게 되는 메시지를 문자열 배열 형태로 return 하도록 solution 함수를 완성하라.</p><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><h2 id="2019-KAKAO-BLIND-RECRUITMENT-오픈채팅방"><a href="#2019-KAKAO-BLIND-RECRUITMENT-오픈채팅방" class="headerlink" title="2019 KAKAO BLIND RECRUITMENT - 오픈채팅방"></a>2019 KAKAO BLIND RECRUITMENT - 오픈채팅방</h2><blockquote><h2 id="오픈채팅방"><a href="#오픈채팅방" class="headerlink" title="오픈채팅방"></a>오픈채팅방</h2><h3 id="카카오톡-오픈채팅방에서는-친구가-아닌-사람들과-대화를-할-수-있는데-본래-닉네임이-아닌-가상의-닉네임을-사용하여-채팅방에-들어갈-수-있다"><a href="#카카오톡-오픈채팅방에서는-친구가-아닌-사람들과-대화를-할-수-있는데-본래-닉네임이-아닌-가상의-닉네임을-사용하여-채팅방에-들어갈-수-있다" class="headerlink" title="카카오톡 오픈채팅방에서는 친구가 아닌 사람들과 대화를 할 수 있는데, 본래 닉네임이 아닌 가상의 닉네임을 사용하여 채팅방에 들어갈 수 있다."></a>카카오톡 오픈채팅방에서는 친구가 아닌 사람들과 대화를 할 수 있는데, 본래 닉네임이 아닌 가상의 닉네임을 사용하여 채팅방에 들어갈 수 있다.</h3></blockquote><blockquote><h3 id="신입사원인-김크루는-카카오톡-오픈-채팅방을-개설한-사람을-위해-다양한-사람들이-들어오고-나가는-것을-지켜볼-수-있는-관리자창을-만들기로-했다-채팅방에-누군가-들어오면-다음-메시지가-출력된다"><a href="#신입사원인-김크루는-카카오톡-오픈-채팅방을-개설한-사람을-위해-다양한-사람들이-들어오고-나가는-것을-지켜볼-수-있는-관리자창을-만들기로-했다-채팅방에-누군가-들어오면-다음-메시지가-출력된다" class="headerlink" title="신입사원인 김크루는 카카오톡 오픈 채팅방을 개설한 사람을 위해, 다양한 사람들이 들어오고, 나가는 것을 지켜볼 수 있는 관리자창을 만들기로 했다. 채팅방에 누군가 들어오면 다음 메시지가 출력된다."></a>신입사원인 김크루는 카카오톡 오픈 채팅방을 개설한 사람을 위해, 다양한 사람들이 들어오고, 나가는 것을 지켜볼 수 있는 관리자창을 만들기로 했다. 채팅방에 누군가 들어오면 다음 메시지가 출력된다.</h3></blockquote><blockquote><p><code>[닉네임]님이 들어왔습니다.</code></p></blockquote><blockquote><h3 id="채팅방에서-누군가-나가면-다음-메시지가-출력된다"><a href="#채팅방에서-누군가-나가면-다음-메시지가-출력된다" class="headerlink" title="채팅방에서 누군가 나가면 다음 메시지가 출력된다."></a>채팅방에서 누군가 나가면 다음 메시지가 출력된다.</h3></blockquote><blockquote><p><code>[닉네임]님이 나갔습니다.</code></p></blockquote><blockquote><h3 id="채팅방에서-닉네임을-변경하는-방법은-다음과-같이-두-가지이다"><a href="#채팅방에서-닉네임을-변경하는-방법은-다음과-같이-두-가지이다" class="headerlink" title="채팅방에서 닉네임을 변경하는 방법은 다음과 같이 두 가지이다."></a>채팅방에서 닉네임을 변경하는 방법은 다음과 같이 두 가지이다.</h3></blockquote><blockquote><ul><li>채팅방을 나간 후, 새로운 닉네임으로 다시 들어간다.</li><li>채팅방에서 닉네임을 변경한다.<br>닉네임을 변경할 때는 기존에 채팅방에 출력되어 있던 메시지의 닉네임도 전부 변경된다.</li></ul></blockquote><blockquote><h3 id="예를-들어-채팅방에-Muzi와-Prodo라는-닉네임을-사용하는-사람이-순서대로-들어오면-채팅방에는-다음과-같이-메시지가-출력된다"><a href="#예를-들어-채팅방에-Muzi와-Prodo라는-닉네임을-사용하는-사람이-순서대로-들어오면-채팅방에는-다음과-같이-메시지가-출력된다" class="headerlink" title="예를 들어, 채팅방에 Muzi와 Prodo라는 닉네임을 사용하는 사람이 순서대로 들어오면 채팅방에는 다음과 같이 메시지가 출력된다."></a>예를 들어, 채팅방에 Muzi와 Prodo라는 닉네임을 사용하는 사람이 순서대로 들어오면 채팅방에는 다음과 같이 메시지가 출력된다.</h3></blockquote><blockquote><p><code>Muzi님이 들어왔습니다.</code><br><code>Prodo님이 들어왔습니다.</code></p></blockquote><blockquote><h3 id="채팅방에-있던-사람이-나가면-채팅방에는-다음과-같이-메시지가-남는다"><a href="#채팅방에-있던-사람이-나가면-채팅방에는-다음과-같이-메시지가-남는다" class="headerlink" title="채팅방에 있던 사람이 나가면 채팅방에는 다음과 같이 메시지가 남는다."></a>채팅방에 있던 사람이 나가면 채팅방에는 다음과 같이 메시지가 남는다.</h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Muzi님이 들어왔습니다.</span><br><span class="line">Prodo님이 들어왔습니다.</span><br><span class="line">Muzi님이 나갔습니다.</span><br></pre></td></tr></table></figure><blockquote><h3 id="Muzi가-나간후-다시-들어올-때-Prodo-라는-닉네임으로-들어올-경우-기존에-채팅방에-남아있던-Muzi도-Prodo로-다음과-같이-변경된다"><a href="#Muzi가-나간후-다시-들어올-때-Prodo-라는-닉네임으로-들어올-경우-기존에-채팅방에-남아있던-Muzi도-Prodo로-다음과-같이-변경된다" class="headerlink" title="Muzi가 나간후 다시 들어올 때, Prodo 라는 닉네임으로 들어올 경우 기존에 채팅방에 남아있던 Muzi도 Prodo로 다음과 같이 변경된다."></a>Muzi가 나간후 다시 들어올 때, Prodo 라는 닉네임으로 들어올 경우 기존에 채팅방에 남아있던 Muzi도 Prodo로 다음과 같이 변경된다.</h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Prodo님이 들어왔습니다.</span><br><span class="line">Prodo님이 들어왔습니다.</span><br><span class="line">Prodo님이 나갔습니다.</span><br><span class="line">Prodo님이 들어왔습니다.</span><br></pre></td></tr></table></figure><blockquote><h3 id="채팅방은-중복-닉네임을-허용하기-때문에-현재-채팅방에는-Prodo라는-닉네임을-사용하는-사람이-두-명이-있다-이제-채팅방에-두-번째로-들어왔던-Prodo가-Ryan으로-닉네임을-변경하면-채팅방-메시지는-다음과-같이-변경된다"><a href="#채팅방은-중복-닉네임을-허용하기-때문에-현재-채팅방에는-Prodo라는-닉네임을-사용하는-사람이-두-명이-있다-이제-채팅방에-두-번째로-들어왔던-Prodo가-Ryan으로-닉네임을-변경하면-채팅방-메시지는-다음과-같이-변경된다" class="headerlink" title="채팅방은 중복 닉네임을 허용하기 때문에, 현재 채팅방에는 Prodo라는 닉네임을 사용하는 사람이 두 명이 있다. 이제, 채팅방에 두 번째로 들어왔던 Prodo가 Ryan으로 닉네임을 변경하면 채팅방 메시지는 다음과 같이 변경된다."></a>채팅방은 중복 닉네임을 허용하기 때문에, 현재 채팅방에는 Prodo라는 닉네임을 사용하는 사람이 두 명이 있다. 이제, 채팅방에 두 번째로 들어왔던 Prodo가 Ryan으로 닉네임을 변경하면 채팅방 메시지는 다음과 같이 변경된다.</h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Prodo님이 들어왔습니다.</span><br><span class="line">Ryan님이 들어왔습니다.</span><br><span class="line">Prodo님이 나갔습니다.</span><br><span class="line">Prodo님이 들어왔습니다.</span><br></pre></td></tr></table></figure><blockquote><h3 id="채팅방에-들어오고-나가거나-닉네임을-변경한-기록이-담긴-문자열-배열-record가-매개변수로-주어질-때-모든-기록이-처리된-후-최종적으로-방을-개설한-사람이-보게-되는-메시지를-문자열-배열-형태로-return-하도록-solution-함수를-완성하라"><a href="#채팅방에-들어오고-나가거나-닉네임을-변경한-기록이-담긴-문자열-배열-record가-매개변수로-주어질-때-모든-기록이-처리된-후-최종적으로-방을-개설한-사람이-보게-되는-메시지를-문자열-배열-형태로-return-하도록-solution-함수를-완성하라" class="headerlink" title="채팅방에 들어오고 나가거나, 닉네임을 변경한 기록이 담긴 문자열 배열 record가 매개변수로 주어질 때, 모든 기록이 처리된 후, 최종적으로 방을 개설한 사람이 보게 되는 메시지를 문자열 배열 형태로 return 하도록 solution 함수를 완성하라."></a>채팅방에 들어오고 나가거나, 닉네임을 변경한 기록이 담긴 문자열 배열 record가 매개변수로 주어질 때, 모든 기록이 처리된 후, 최종적으로 방을 개설한 사람이 보게 되는 메시지를 문자열 배열 형태로 return 하도록 solution 함수를 완성하라.</h3></blockquote><h3 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h3><ul><li>record는 다음과 같은 문자열이 담긴 배열이며, 길이는 1 이상 100,000 이하이다.</li><li>다음은 record에 담긴 문자열에 대한 설명이다.</li><li>모든 유저는 [유저 아이디]로 구분한다.</li><li>[유저 아이디] 사용자가 [닉네임]으로 채팅방에 입장 - Enter [유저 아이디] [닉네임] (ex. Enter uid1234 Muzi)</li><li>[유저 아이디] 사용자가 채팅방에서 퇴장 - Leave [유저 아이디] (ex. Leave uid1234)</li><li>[유저 아이디] 사용자가 닉네임을 [닉네임]으로 변경 - Change [유저 아이디] [닉네임] (ex. Change uid1234 Muzi)</li><li>첫 단어는 Enter, Leave, Change 중 하나이다.</li><li>각 단어는 공백으로 구분되어 있으며, 알파벳 대문자, 소문자, 숫자로만 이루어져있다.</li><li>유저 아이디와 닉네임은 알파벳 대문자, 소문자를 구별한다.</li><li>유저 아이디와 닉네임의 길이는 1 이상 10 이하이다.</li><li>채팅방에서 나간 유저가 닉네임을 변경하는 등 잘못 된 입력은 주어지지 않는다.</li></ul><h3 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h3><ul><li>1번</li></ul><table><thead><tr><th>매개변수</th><th>값</th></tr></thead><tbody><tr><td>입력</td><td>[“Enter uid1234 Muzi”, “Enter uid4567 Prodo”,”Leave uid1234”,”Enter uid1234 Prodo”,”Change uid4567 Ryan”]</td></tr><tr><td>출력</td><td>[“Prodo님이 들어왔습니다.”, “Ryan님이 들어왔습니다.”, “Prodo님이 나갔습니다.”, “Prodo님이 들어왔습니다.”]</td></tr></tbody></table><h3 id="코드설명"><a href="#코드설명" class="headerlink" title="코드설명"></a>코드설명</h3><p>이 문제는 총 3단계의 과정으로 해결할 수 있다.<br>일단 입력에서 주어진 <code>&quot;Enter uid1234 Muzi&quot;</code>를 살펴보자.<br>문제를 읽어보면 알겠지만 결국 유저가 설정한 마지막 닉네임으로 이전의 모든 닉네임이 변경되는 것이고, 그 기준은 입력 중간에 있는 유저 아이디 값이다.<br><strong>따라서 이를 딕셔너리 타입으로 만들어 유저아이디를 키로, 닉네임을 값으로 만들면 된다.</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ls_1 &#x3D; []</span><br><span class="line">for x in record:</span><br><span class="line">    x &#x3D; x.split(&quot; &quot;)</span><br><span class="line">    ls_1.append(x)</span><br><span class="line">dict_1 &#x3D; &#123;&#125;</span><br><span class="line">for y in ls_1:</span><br><span class="line">    if y[0] !&#x3D; &quot;Leave&quot;:</span><br><span class="line">        dict_1[y[1]] &#x3D; y[2]</span><br></pre></td></tr></table></figure><p>ls_1 리스트에 record 값을 띄어쓰기 기준으로 나눈 x를 넣어준 뒤, ls_1을 하나씩 받아온다.<br>Enter일 떄(입장할 때) 닉네임이 바뀌며, Leave일 때는 닉네임 변화가 없으므로<br><strong>Enter 일 때, 같은 아이디 값의 닉네임 값을 딕셔너리에 저장해준다</strong><br>그 밑에 코드는 Enter를 들어왔습니다로 Leave를 나갔습니다로 바꿔주는 코드이다.<br>물론 Enter, Leave의 기준은 유저 아이디이고, 위에 코드에서 유저가 최종적으로 바꾼 닉네임 값이 저장되어 있으므로 이를 사용한다.</p><h3 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(record)</span>:</span></span><br><span class="line">    ls_1 = []</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> record:</span><br><span class="line">        x = x.split(<span class="string">" "</span>)</span><br><span class="line">        ls_1.append(x)</span><br><span class="line">    dict_1 = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> ls_1:</span><br><span class="line">        <span class="keyword">if</span> y[<span class="number">0</span>] != <span class="string">"Leave"</span>:</span><br><span class="line">            dict_1[y[<span class="number">1</span>]] = y[<span class="number">2</span>]</span><br><span class="line">    answer = []</span><br><span class="line">    <span class="keyword">for</span> z <span class="keyword">in</span> ls_1:</span><br><span class="line">        <span class="keyword">if</span> z[<span class="number">0</span>] == <span class="string">"Enter"</span>:</span><br><span class="line">            answer.append(dict_1[z[<span class="number">1</span>]] + <span class="string">"님이 들어왔습니다."</span>)</span><br><span class="line">        <span class="keyword">elif</span> z[<span class="number">0</span>] == <span class="string">"Leave"</span>:</span><br><span class="line">            answer.append(dict_1[z[<span class="number">1</span>]] + <span class="string">"님이 나갔습니다."</span>)</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><h3 id="정답확인"><a href="#정답확인" class="headerlink" title="정답확인"></a>정답확인</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution([<span class="string">"Enter uid1234 Muzi"</span>, <span class="string">"Enter uid4567 Prodo"</span>,<span class="string">"Leave uid1234"</span>,<span class="string">"Enter uid1234 Prodo"</span>,<span class="string">"Change uid4567 Ryan"</span>])</span><br></pre></td></tr></table></figure><pre><code>[&apos;Prodo님이 들어왔습니다.&apos;, &apos;Ryan님이 들어왔습니다.&apos;, &apos;Prodo님이 나갔습니다.&apos;, &apos;Prodo님이 들어왔습니다.&apos;]</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/04/21/kakao_openchat/#disqus_thread</comments>
    </item>
    
    <item>
      <title>회귀분석 프로젝트 - Dacon 온도추정 경진대회</title>
      <link>https://yangjun-ux.github.io/2020/04/18/final_blog/</link>
      <guid>https://yangjun-ux.github.io/2020/04/18/final_blog/</guid>
      <pubDate>Sat, 18 Apr 2020 10:16:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Dacon-온도추정-경진대회&quot;&gt;&lt;a href=&quot;#Dacon-온도추정-경진대회&quot; class=&quot;headerlink&quot; title=&quot;Dacon 온도추정 경진대회&quot;&gt;&lt;/a&gt;Dacon 온도추정 경진대회&lt;/h3&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Dacon-온도추정-경진대회"><a href="#Dacon-온도추정-경진대회" class="headerlink" title="Dacon 온도추정 경진대회"></a>Dacon 온도추정 경진대회</h3><a id="more"></a><blockquote><h1 id="회귀분석-프로젝트"><a href="#회귀분석-프로젝트" class="headerlink" title="회귀분석 프로젝트"></a>회귀분석 프로젝트</h1></blockquote><blockquote><h1 id="회귀분석-프로젝트-온도-추정-경진대회"><a href="#회귀분석-프로젝트-온도-추정-경진대회" class="headerlink" title="회귀분석 프로젝트 : 온도 추정 경진대회"></a>회귀분석 프로젝트 : 온도 추정 경진대회</h1></blockquote><ul><li><h3 id="데이콘-온도추정-경진대회-데이터-활용"><a href="#데이콘-온도추정-경진대회-데이터-활용" class="headerlink" title="데이콘 온도추정 경진대회 데이터 활용"></a>데이콘 온도추정 경진대회 데이터 활용</h3></li></ul><img src="/2020/04/18/final_blog/dacon.png" class><blockquote><h3 id="목차"><a href="#목차" class="headerlink" title="목차"></a>목차</h3></blockquote><ul><li><strong>데이터 설명</strong></li><li><strong>분석과정</strong></li><li><strong>데이터 전처리</strong></li><li><strong>KFold 검증</strong><ul><li>Y00 ~ Y17</li></ul></li><li><strong>Lasso, Ridge, EN 정규화</strong><ul><li>Y18</li></ul></li><li><strong>전체 데이터를 활용한 Y18모델</strong></li><li><strong>+) 머신러닝 활용</strong></li></ul><blockquote><h3 id="목표-성능"><a href="#목표-성능" class="headerlink" title="목표 성능"></a>목표 성능</h3></blockquote><ul><li>test MSE 3.5 이하로 만들기 -&gt; 3.94</li><li>최종순위 20등 이내 -&gt; 40위</li></ul><blockquote><h2 id="데이터-설명"><a href="#데이터-설명" class="headerlink" title="데이터 설명"></a>데이터 설명</h2></blockquote><ul><li>대전지역에서 측정한 실내외 19곳의 센서데이터와 주변 지역의 기상청 공공데이터를 semi-비식별화하여 제공합니다. <ul><li>센서는 온도를 측정하였습니다. </li><li>모든 데이터는 시간 순으로 정렬 되어 있으며 10분 단위 데이터 입니다. </li><li>예측 대상(target variable)은 Y18입니다. </li></ul></li></ul><img src="/2020/04/18/final_blog/proj.png" class><img src="/2020/04/18/final_blog/data.png" class><img src="/2020/04/18/final_blog/data2.png" class><blockquote><h3 id="train-csv"><a href="#train-csv" class="headerlink" title="train.csv"></a>train.csv</h3><pre><code>- 30일 간의 기상청 데이터 (X00~X39) 및 센서데이터 (Y00~Y17)- 이후 3일 간의 기상청 데이터 (X00~X39) 및 센서데이터 (Y18)</code></pre><h3 id="test-csv"><a href="#test-csv" class="headerlink" title="test.csv"></a>test.csv</h3><pre><code>- train.csv 기간 이후 80일 간의 기상청 데이터 (X00~X39)</code></pre><h3 id="sample-submission-csv"><a href="#sample-submission-csv" class="headerlink" title="sample_submission.csv"></a>sample_submission.csv</h3><pre><code>- 제출 양식 예시</code></pre></blockquote><ul><li><strong>각 위치에서 기온, 누적강수량, 풍속, 풍향, 해면기압, 현지기압, 일사량, 습도 모두 측정</strong></li></ul><blockquote><h2 id="분석과정"><a href="#분석과정" class="headerlink" title="분석과정"></a>분석과정</h2></blockquote><p><code>id</code> : 시간(10분 단위)<br><code>X00 ~ X39</code> : 기상청 관측 데이터<br><code>&#39;X00&#39;,&#39;X07&#39;,&#39;X28&#39;,&#39;X31&#39;,&#39;X32&#39;</code> : 기온<br><code>&quot;X01&quot;,&quot;X06&quot;,&quot;X22&quot;,&quot;X27&quot;,&quot;X29&quot;</code> : 현지기압 (실제 위치에서의 기압)<br><code>&quot;X02&quot;,&quot;X03&quot;,&quot;X18&quot;,&quot;X24&quot;,&quot;X26&quot;</code> : 풍속<br><code>&quot;X04&quot;,&quot;X10&quot;,&quot;X21&quot;,&quot;X36&quot;,&quot;X39&quot;</code> : 일일 누적강수량<br><code>&quot;X05&quot;,&quot;X08&quot;,&quot;X09&quot;,&quot;X23&quot;,&quot;X33&quot;</code> : 해면기압 (높이를 같다고 가정했을 때 기압)<br><code>&quot;X11&quot;,&quot;X34&quot;</code> : 일일 누적일사량 - X14, X16, X19는 고장<br><code>&quot;X12&quot;,&quot;X20&quot;,&quot;X30&quot;,&quot;X37&quot;,&quot;X38&quot;</code> : 습도<br><code>&#39;Y00&#39;,&#39;Y01&#39;,&#39;Y02&#39;,&#39;Y03&#39;,&#39;Y04&#39;,&#39;Y05&#39;,&#39;Y06&#39;,&#39;Y07&#39;,&#39;Y08&#39;,&#39;Y09&#39;,&#39;Y10&#39;,&#39;Y11&#39;,&#39;Y12&#39;,&#39;Y13&#39;,&#39;Y14&#39;,&#39;Y15&#39;,&#39;Y16&#39;,&#39;Y17&#39;</code> : 센서(기온)</p><blockquote><h2 id="필요한-패키지-import"><a href="#필요한-패키지-import" class="headerlink" title="필요한 패키지 import"></a>필요한 패키지 import</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> KFold</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestRegressor</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error, accuracy_score, make_scorer</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Lasso, Ridge</span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure><blockquote><h2 id="데이터-불러오기"><a href="#데이터-불러오기" class="headerlink" title="데이터 불러오기"></a>데이터 불러오기</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df= pd.read_csv(<span class="string">'datas/train.csv'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>...</th>      <th>Y09</th>      <th>Y10</th>      <th>Y11</th>      <th>Y12</th>      <th>Y13</th>      <th>Y14</th>      <th>Y15</th>      <th>Y16</th>      <th>Y17</th>      <th>Y18</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>0</td>      <td>9.7</td>      <td>988.8</td>      <td>1.2</td>      <td>0.6</td>      <td>0.0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.2</td>      <td>1009.9</td>      <td>...</td>      <td>7.0</td>      <td>7.5</td>      <td>7.0</td>      <td>9.0</td>      <td>10.0</td>      <td>9.5</td>      <td>9.0</td>      <td>8.0</td>      <td>9.0</td>      <td>NaN</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>9.3</td>      <td>988.9</td>      <td>1.7</td>      <td>1.9</td>      <td>0.0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.1</td>      <td>1010.0</td>      <td>...</td>      <td>6.5</td>      <td>7.5</td>      <td>7.0</td>      <td>8.5</td>      <td>10.0</td>      <td>9.5</td>      <td>9.0</td>      <td>7.5</td>      <td>9.0</td>      <td>NaN</td>    </tr>    <tr>      <td>2</td>      <td>2</td>      <td>9.4</td>      <td>989.0</td>      <td>1.1</td>      <td>2.3</td>      <td>0.0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.1</td>      <td>1010.1</td>      <td>...</td>      <td>6.5</td>      <td>7.5</td>      <td>6.5</td>      <td>8.0</td>      <td>9.5</td>      <td>9.5</td>      <td>8.5</td>      <td>7.5</td>      <td>8.5</td>      <td>NaN</td>    </tr>    <tr>      <td>3</td>      <td>3</td>      <td>9.4</td>      <td>988.9</td>      <td>1.5</td>      <td>0.7</td>      <td>0.0</td>      <td>1009.2</td>      <td>989.6</td>      <td>12.0</td>      <td>1010.0</td>      <td>...</td>      <td>6.0</td>      <td>7.0</td>      <td>6.0</td>      <td>8.0</td>      <td>9.5</td>      <td>9.0</td>      <td>8.5</td>      <td>7.5</td>      <td>8.5</td>      <td>NaN</td>    </tr>    <tr>      <td>4</td>      <td>4</td>      <td>9.2</td>      <td>988.9</td>      <td>0.8</td>      <td>1.7</td>      <td>0.0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.0</td>      <td>1010.1</td>      <td>...</td>      <td>6.0</td>      <td>7.0</td>      <td>6.0</td>      <td>7.5</td>      <td>9.5</td>      <td>9.0</td>      <td>8.5</td>      <td>7.5</td>      <td>8.5</td>      <td>NaN</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4747</td>      <td>4747</td>      <td>19.9</td>      <td>987.6</td>      <td>0.9</td>      <td>0.8</td>      <td>0.0</td>      <td>1006.9</td>      <td>987.7</td>      <td>21.7</td>      <td>1007.5</td>      <td>...</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>21.5</td>    </tr>    <tr>      <td>4748</td>      <td>4748</td>      <td>19.9</td>      <td>987.6</td>      <td>0.5</td>      <td>0.7</td>      <td>0.0</td>      <td>1006.8</td>      <td>987.7</td>      <td>21.6</td>      <td>1007.5</td>      <td>...</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>21.5</td>    </tr>    <tr>      <td>4749</td>      <td>4749</td>      <td>19.7</td>      <td>987.7</td>      <td>0.9</td>      <td>0.6</td>      <td>0.0</td>      <td>1006.9</td>      <td>987.6</td>      <td>21.4</td>      <td>1007.4</td>      <td>...</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>21.5</td>    </tr>    <tr>      <td>4750</td>      <td>4750</td>      <td>19.4</td>      <td>987.7</td>      <td>0.9</td>      <td>0.8</td>      <td>0.0</td>      <td>1006.9</td>      <td>987.8</td>      <td>21.3</td>      <td>1007.6</td>      <td>...</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>21.5</td>    </tr>    <tr>      <td>4751</td>      <td>4751</td>      <td>19.1</td>      <td>987.6</td>      <td>1.0</td>      <td>0.3</td>      <td>0.0</td>      <td>1006.8</td>      <td>987.8</td>      <td>21.2</td>      <td>1007.5</td>      <td>...</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>21.0</td>    </tr>  </tbody></table><p>4752 rows × 60 columns</p></div><blockquote><h2 id="데이터-종류에-따라-나누기"><a href="#데이터-종류에-따라-나누기" class="headerlink" title="데이터 종류에 따라 나누기"></a>데이터 종류에 따라 나누기</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">temperature_name = [<span class="string">'X00'</span>,<span class="string">'X07'</span>,<span class="string">'X28'</span>,<span class="string">'X31'</span>,<span class="string">'X32'</span>] <span class="comment"># 기온</span></span><br><span class="line">localpress_name  = [<span class="string">"X01"</span>,<span class="string">"X06"</span>,<span class="string">"X22"</span>,<span class="string">"X27"</span>,<span class="string">"X29"</span>] <span class="comment">#현지기압</span></span><br><span class="line">speed_name       = [<span class="string">"X02"</span>,<span class="string">"X03"</span>,<span class="string">"X18"</span>,<span class="string">"X24"</span>,<span class="string">"X26"</span>] <span class="comment">#풍속</span></span><br><span class="line">water_name       = [<span class="string">"X04"</span>,<span class="string">"X10"</span>,<span class="string">"X21"</span>,<span class="string">"X36"</span>,<span class="string">"X39"</span>] <span class="comment">#일일 누적강수량</span></span><br><span class="line">press_name       = [<span class="string">"X05"</span>,<span class="string">"X08"</span>,<span class="string">"X09"</span>,<span class="string">"X23"</span>,<span class="string">"X33"</span>] <span class="comment">#해면기압</span></span><br><span class="line">sun_name         = [<span class="string">"X11"</span>,<span class="string">"X34"</span>] <span class="comment">#일일 누적일사량</span></span><br><span class="line">humidity_name    = [<span class="string">"X12"</span>,<span class="string">"X20"</span>,<span class="string">"X30"</span>,<span class="string">"X37"</span>,<span class="string">"X38"</span>] <span class="comment">#습도</span></span><br><span class="line">direction_name   = [<span class="string">"X13"</span>,<span class="string">"X15"</span>,<span class="string">"X17"</span>,<span class="string">"X25"</span>,<span class="string">"X35"</span>] <span class="comment">#풍향</span></span><br><span class="line">sensor_name = [<span class="string">'Y00'</span>,<span class="string">'Y01'</span>,<span class="string">'Y02'</span>,<span class="string">'Y03'</span>,<span class="string">'Y04'</span>,<span class="string">'Y05'</span>,<span class="string">'Y06'</span>,<span class="string">'Y07'</span>,<span class="string">'Y08'</span>,<span class="string">'Y09'</span>,<span class="string">'Y10'</span>,<span class="string">'Y11'</span>,<span class="string">'Y12'</span>,<span class="string">'Y13'</span>,<span class="string">'Y14'</span>,<span class="string">'Y15'</span>,<span class="string">'Y16'</span>,<span class="string">'Y17'</span>]</span><br></pre></td></tr></table></figure><blockquote><h2 id="시간-컬럼-추가"><a href="#시간-컬럼-추가" class="headerlink" title="시간 컬럼 추가"></a>시간 컬럼 추가</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hour= pd.Series((df.index%<span class="number">144</span>/<span class="number">6</span>).astype(int))</span><br><span class="line">df[<span class="string">'hour'</span>] = hour</span><br></pre></td></tr></table></figure><blockquote><h2 id="데이터-전처리"><a href="#데이터-전처리" class="headerlink" title="데이터 전처리"></a>데이터 전처리</h2></blockquote><ul><li><h3 id="풍향"><a href="#풍향" class="headerlink" title="풍향"></a>풍향</h3><ul><li>북동(0), 남동(1), 남서(2), 북서(3)로 <strong>카테고리 변수</strong>로 변경</li></ul></li><li><h3 id="강수량"><a href="#강수량" class="headerlink" title="강수량"></a>강수량</h3><ul><li>현재 데이터는 누적강수량 데이터로 측정시각 이전에 내린 강수량의 합이다.</li><li>현재 온도에 미래의 강수량이 영향을 주지 못하므로, 온도 측정 시각의 누적강수량에서 이전 온도 측정 시각의 누적강수량을 빼서 계산하였다.</li><li>실수형 데이터로 예측모델을 만든 결과보다 카테고리형 데이터로 예측모델을 만들었을 경우 성능이 더 좋아 <strong>카테고리 변수</strong>로 바꾸었다.</li><li>강수량에 따라 0, 1, 2, 3으로 나눈 모델과 강수가 있었을 경우 1, 없었을 경우 0으로 나눈 모델 중 후자가 더 성능이 좋았다.</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> direction_name:</span><br><span class="line">    df[x] = df[x].apply(<span class="keyword">lambda</span> x: <span class="number">0</span> <span class="keyword">if</span> x &lt; <span class="number">90</span> <span class="keyword">else</span> <span class="number">1</span> <span class="keyword">if</span> x &lt; <span class="number">180</span> <span class="keyword">else</span> <span class="number">2</span> <span class="keyword">if</span> x &lt; <span class="number">270</span> <span class="keyword">else</span> <span class="number">3</span>)</span><br><span class="line"><span class="comment"># 북동 : 0 / 남동 : 1 / 남서 : 2 / 북서 : 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> water_name:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(x)):</span><br><span class="line">        df[x].loc[i] = df[x].loc[i] - df[x].loc[i<span class="number">-1</span>]</span><br><span class="line">        </span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> water_name:</span><br><span class="line">    df[x] = df[x].apply(<span class="keyword">lambda</span> x: <span class="number">0</span> <span class="keyword">if</span> x == <span class="number">0</span> <span class="keyword">else</span> <span class="number">1</span>)</span><br></pre></td></tr></table></figure><blockquote><h2 id="이전-30일의-데이터-Y18이-없음"><a href="#이전-30일의-데이터-Y18이-없음" class="headerlink" title="이전 30일의 데이터 - Y18이 없음"></a>이전 30일의 데이터 - Y18이 없음</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 = df.loc[:<span class="number">4319</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.dropna(axis=<span class="number">1</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>...</th>      <th>Y09</th>      <th>Y10</th>      <th>Y11</th>      <th>Y12</th>      <th>Y13</th>      <th>Y14</th>      <th>Y15</th>      <th>Y16</th>      <th>Y17</th>      <th>hour</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>0</td>      <td>9.7</td>      <td>988.8</td>      <td>1.2</td>      <td>0.6</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.2</td>      <td>1009.9</td>      <td>...</td>      <td>7.0</td>      <td>7.5</td>      <td>7.0</td>      <td>9.0</td>      <td>10.0</td>      <td>9.5</td>      <td>9.0</td>      <td>8.0</td>      <td>9.0</td>      <td>0</td>    </tr>    <tr>      <td>1</td>      <td>1</td>      <td>9.3</td>      <td>988.9</td>      <td>1.7</td>      <td>1.9</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.1</td>      <td>1010.0</td>      <td>...</td>      <td>6.5</td>      <td>7.5</td>      <td>7.0</td>      <td>8.5</td>      <td>10.0</td>      <td>9.5</td>      <td>9.0</td>      <td>7.5</td>      <td>9.0</td>      <td>0</td>    </tr>    <tr>      <td>2</td>      <td>2</td>      <td>9.4</td>      <td>989.0</td>      <td>1.1</td>      <td>2.3</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.1</td>      <td>1010.1</td>      <td>...</td>      <td>6.5</td>      <td>7.5</td>      <td>6.5</td>      <td>8.0</td>      <td>9.5</td>      <td>9.5</td>      <td>8.5</td>      <td>7.5</td>      <td>8.5</td>      <td>0</td>    </tr>    <tr>      <td>3</td>      <td>3</td>      <td>9.4</td>      <td>988.9</td>      <td>1.5</td>      <td>0.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.6</td>      <td>12.0</td>      <td>1010.0</td>      <td>...</td>      <td>6.0</td>      <td>7.0</td>      <td>6.0</td>      <td>8.0</td>      <td>9.5</td>      <td>9.0</td>      <td>8.5</td>      <td>7.5</td>      <td>8.5</td>      <td>0</td>    </tr>    <tr>      <td>4</td>      <td>4</td>      <td>9.2</td>      <td>988.9</td>      <td>0.8</td>      <td>1.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.0</td>      <td>1010.1</td>      <td>...</td>      <td>6.0</td>      <td>7.0</td>      <td>6.0</td>      <td>7.5</td>      <td>9.5</td>      <td>9.0</td>      <td>8.5</td>      <td>7.5</td>      <td>8.5</td>      <td>0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4315</td>      <td>4315</td>      <td>19.5</td>      <td>987.8</td>      <td>1.7</td>      <td>0.4</td>      <td>0</td>      <td>1007.8</td>      <td>988.0</td>      <td>21.3</td>      <td>1007.8</td>      <td>...</td>      <td>19.5</td>      <td>20.0</td>      <td>19.0</td>      <td>20.5</td>      <td>20.5</td>      <td>20.0</td>      <td>20.0</td>      <td>20.5</td>      <td>20.0</td>      <td>23</td>    </tr>    <tr>      <td>4316</td>      <td>4316</td>      <td>19.3</td>      <td>987.7</td>      <td>2.1</td>      <td>0.9</td>      <td>0</td>      <td>1007.8</td>      <td>988.1</td>      <td>21.3</td>      <td>1008.0</td>      <td>...</td>      <td>19.5</td>      <td>20.0</td>      <td>19.0</td>      <td>20.5</td>      <td>20.5</td>      <td>20.0</td>      <td>19.5</td>      <td>20.5</td>      <td>19.5</td>      <td>23</td>    </tr>    <tr>      <td>4317</td>      <td>4317</td>      <td>19.5</td>      <td>987.8</td>      <td>0.9</td>      <td>1.3</td>      <td>0</td>      <td>1007.8</td>      <td>988.3</td>      <td>21.2</td>      <td>1008.1</td>      <td>...</td>      <td>19.5</td>      <td>20.0</td>      <td>19.0</td>      <td>20.0</td>      <td>20.0</td>      <td>19.5</td>      <td>19.5</td>      <td>20.0</td>      <td>19.0</td>      <td>23</td>    </tr>    <tr>      <td>4318</td>      <td>4318</td>      <td>20.0</td>      <td>987.8</td>      <td>1.4</td>      <td>0.5</td>      <td>0</td>      <td>1007.8</td>      <td>988.3</td>      <td>21.1</td>      <td>1008.1</td>      <td>...</td>      <td>19.5</td>      <td>20.0</td>      <td>18.5</td>      <td>20.0</td>      <td>20.0</td>      <td>19.5</td>      <td>19.5</td>      <td>20.0</td>      <td>19.0</td>      <td>23</td>    </tr>    <tr>      <td>4319</td>      <td>4319</td>      <td>20.1</td>      <td>987.8</td>      <td>1.2</td>      <td>1.2</td>      <td>0</td>      <td>1007.8</td>      <td>988.2</td>      <td>20.9</td>      <td>1008.1</td>      <td>...</td>      <td>19.5</td>      <td>20.0</td>      <td>18.5</td>      <td>19.5</td>      <td>19.5</td>      <td>19.5</td>      <td>19.5</td>      <td>19.5</td>      <td>19.0</td>      <td>23</td>    </tr>  </tbody></table><p>4320 rows × 60 columns</p></div><blockquote><h2 id="이전-30일의-기상청-데이터-X00-X39"><a href="#이전-30일의-기상청-데이터-X00-X39" class="headerlink" title="이전 30일의 기상청 데이터(X00 ~ X39)"></a>이전 30일의 기상청 데이터(X00 ~ X39)</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X_30s = df1.drop(columns=sensor_name)</span><br><span class="line">X_30s.drop(columns=[<span class="string">'X14'</span>, <span class="string">'X16'</span>, <span class="string">'X19'</span>, <span class="string">'id'</span>], inplace=<span class="literal">True</span>)</span><br><span class="line">X_30s</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>X09</th>      <th>...</th>      <th>X31</th>      <th>X32</th>      <th>X33</th>      <th>X34</th>      <th>X35</th>      <th>X36</th>      <th>X37</th>      <th>X38</th>      <th>X39</th>      <th>hour</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>9.7</td>      <td>988.8</td>      <td>1.2</td>      <td>0.6</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.2</td>      <td>1009.9</td>      <td>1009.8</td>      <td>...</td>      <td>8.2</td>      <td>10.7</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.2</td>      <td>62.6</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>1</td>      <td>9.3</td>      <td>988.9</td>      <td>1.7</td>      <td>1.9</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.1</td>      <td>1010.0</td>      <td>1009.9</td>      <td>...</td>      <td>8.3</td>      <td>10.3</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.3</td>      <td>63.5</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>2</td>      <td>9.4</td>      <td>989.0</td>      <td>1.1</td>      <td>2.3</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.1</td>      <td>1010.1</td>      <td>1010.1</td>      <td>...</td>      <td>8.0</td>      <td>9.7</td>      <td>1010.0</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.3</td>      <td>63.9</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>3</td>      <td>9.4</td>      <td>988.9</td>      <td>1.5</td>      <td>0.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.6</td>      <td>12.0</td>      <td>1010.0</td>      <td>1010.0</td>      <td>...</td>      <td>7.7</td>      <td>9.4</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.5</td>      <td>64.5</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>4</td>      <td>9.2</td>      <td>988.9</td>      <td>0.8</td>      <td>1.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.0</td>      <td>1010.1</td>      <td>1010.0</td>      <td>...</td>      <td>7.4</td>      <td>9.4</td>      <td>1010.1</td>      <td>0.00</td>      <td>1</td>      <td>0</td>      <td>78.0</td>      <td>65.0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4315</td>      <td>19.5</td>      <td>987.8</td>      <td>1.7</td>      <td>0.4</td>      <td>0</td>      <td>1007.8</td>      <td>988.0</td>      <td>21.3</td>      <td>1007.8</td>      <td>1007.5</td>      <td>...</td>      <td>18.8</td>      <td>19.4</td>      <td>1008.2</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.3</td>      <td>74.3</td>      <td>0</td>      <td>23</td>    </tr>    <tr>      <td>4316</td>      <td>19.3</td>      <td>987.7</td>      <td>2.1</td>      <td>0.9</td>      <td>0</td>      <td>1007.8</td>      <td>988.1</td>      <td>21.3</td>      <td>1008.0</td>      <td>1007.4</td>      <td>...</td>      <td>18.6</td>      <td>18.5</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.4</td>      <td>74.8</td>      <td>0</td>      <td>23</td>    </tr>    <tr>      <td>4317</td>      <td>19.5</td>      <td>987.8</td>      <td>0.9</td>      <td>1.3</td>      <td>0</td>      <td>1007.8</td>      <td>988.3</td>      <td>21.2</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>18.4</td>      <td>19.1</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.8</td>      <td>75.4</td>      <td>0</td>      <td>23</td>    </tr>    <tr>      <td>4318</td>      <td>20.0</td>      <td>987.8</td>      <td>1.4</td>      <td>0.5</td>      <td>0</td>      <td>1007.8</td>      <td>988.3</td>      <td>21.1</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>18.2</td>      <td>19.0</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.8</td>      <td>75.8</td>      <td>0</td>      <td>23</td>    </tr>    <tr>      <td>4319</td>      <td>20.1</td>      <td>987.8</td>      <td>1.2</td>      <td>1.2</td>      <td>0</td>      <td>1007.8</td>      <td>988.2</td>      <td>20.9</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>18.1</td>      <td>18.5</td>      <td>1008.3</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>83.5</td>      <td>76.9</td>      <td>0</td>      <td>23</td>    </tr>  </tbody></table><p>4320 rows × 38 columns</p></div><blockquote><h2 id="이전-30일의-센서-데이터-Y00-Y17"><a href="#이전-30일의-센서-데이터-Y00-Y17" class="headerlink" title="이전 30일의 센서 데이터(Y00 ~ Y17)"></a>이전 30일의 센서 데이터(Y00 ~ Y17)</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sensor = df1[sensor_name]</span><br><span class="line">sensor</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Y00</th>      <th>Y01</th>      <th>Y02</th>      <th>Y03</th>      <th>Y04</th>      <th>Y05</th>      <th>Y06</th>      <th>Y07</th>      <th>Y08</th>      <th>Y09</th>      <th>Y10</th>      <th>Y11</th>      <th>Y12</th>      <th>Y13</th>      <th>Y14</th>      <th>Y15</th>      <th>Y16</th>      <th>Y17</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>12.5</td>      <td>11.5</td>      <td>11.0</td>      <td>20.0</td>      <td>20.0</td>      <td>10.5</td>      <td>10.0</td>      <td>10.5</td>      <td>10.0</td>      <td>7.0</td>      <td>7.5</td>      <td>7.0</td>      <td>9.0</td>      <td>10.0</td>      <td>9.5</td>      <td>9.0</td>      <td>8.0</td>      <td>9.0</td>    </tr>    <tr>      <td>1</td>      <td>12.5</td>      <td>11.0</td>      <td>11.0</td>      <td>20.0</td>      <td>20.0</td>      <td>10.0</td>      <td>9.5</td>      <td>10.0</td>      <td>9.5</td>      <td>6.5</td>      <td>7.5</td>      <td>7.0</td>      <td>8.5</td>      <td>10.0</td>      <td>9.5</td>      <td>9.0</td>      <td>7.5</td>      <td>9.0</td>    </tr>    <tr>      <td>2</td>      <td>12.0</td>      <td>11.0</td>      <td>11.0</td>      <td>19.5</td>      <td>19.5</td>      <td>10.0</td>      <td>9.0</td>      <td>10.0</td>      <td>9.0</td>      <td>6.5</td>      <td>7.5</td>      <td>6.5</td>      <td>8.0</td>      <td>9.5</td>      <td>9.5</td>      <td>8.5</td>      <td>7.5</td>      <td>8.5</td>    </tr>    <tr>      <td>3</td>      <td>12.0</td>      <td>11.0</td>      <td>11.0</td>      <td>19.5</td>      <td>19.5</td>      <td>9.5</td>      <td>9.0</td>      <td>9.5</td>      <td>9.0</td>      <td>6.0</td>      <td>7.0</td>      <td>6.0</td>      <td>8.0</td>      <td>9.5</td>      <td>9.0</td>      <td>8.5</td>      <td>7.5</td>      <td>8.5</td>    </tr>    <tr>      <td>4</td>      <td>12.0</td>      <td>10.5</td>      <td>10.5</td>      <td>19.0</td>      <td>19.5</td>      <td>9.5</td>      <td>8.5</td>      <td>9.5</td>      <td>8.5</td>      <td>6.0</td>      <td>7.0</td>      <td>6.0</td>      <td>7.5</td>      <td>9.5</td>      <td>9.0</td>      <td>8.5</td>      <td>7.5</td>      <td>8.5</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4315</td>      <td>22.0</td>      <td>22.5</td>      <td>22.5</td>      <td>26.0</td>      <td>26.0</td>      <td>21.0</td>      <td>20.0</td>      <td>20.5</td>      <td>20.5</td>      <td>19.5</td>      <td>20.0</td>      <td>19.0</td>      <td>20.5</td>      <td>20.5</td>      <td>20.0</td>      <td>20.0</td>      <td>20.5</td>      <td>20.0</td>    </tr>    <tr>      <td>4316</td>      <td>22.0</td>      <td>22.5</td>      <td>22.5</td>      <td>26.0</td>      <td>25.5</td>      <td>21.0</td>      <td>20.0</td>      <td>20.5</td>      <td>20.5</td>      <td>19.5</td>      <td>20.0</td>      <td>19.0</td>      <td>20.5</td>      <td>20.5</td>      <td>20.0</td>      <td>19.5</td>      <td>20.5</td>      <td>19.5</td>    </tr>    <tr>      <td>4317</td>      <td>21.5</td>      <td>22.5</td>      <td>22.5</td>      <td>26.0</td>      <td>25.5</td>      <td>21.0</td>      <td>20.0</td>      <td>20.5</td>      <td>20.5</td>      <td>19.5</td>      <td>20.0</td>      <td>19.0</td>      <td>20.0</td>      <td>20.0</td>      <td>19.5</td>      <td>19.5</td>      <td>20.0</td>      <td>19.0</td>    </tr>    <tr>      <td>4318</td>      <td>21.5</td>      <td>22.0</td>      <td>22.0</td>      <td>25.5</td>      <td>25.5</td>      <td>20.5</td>      <td>20.0</td>      <td>20.0</td>      <td>20.0</td>      <td>19.5</td>      <td>20.0</td>      <td>18.5</td>      <td>20.0</td>      <td>20.0</td>      <td>19.5</td>      <td>19.5</td>      <td>20.0</td>      <td>19.0</td>    </tr>    <tr>      <td>4319</td>      <td>21.5</td>      <td>22.0</td>      <td>22.0</td>      <td>25.5</td>      <td>25.5</td>      <td>20.5</td>      <td>19.5</td>      <td>20.0</td>      <td>20.0</td>      <td>19.5</td>      <td>20.0</td>      <td>18.5</td>      <td>19.5</td>      <td>19.5</td>      <td>19.5</td>      <td>19.5</td>      <td>19.5</td>      <td>19.0</td>    </tr>  </tbody></table><p>4320 rows × 18 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">formulas = temperature_name + localpress_name + humidity_name + sun_name + speed_name</span><br><span class="line">formulas = [<span class="string">'scale(&#123;&#125;)'</span>.format(x) <span class="keyword">for</span> x <span class="keyword">in</span> formulas]</span><br><span class="line">formulas</span><br></pre></td></tr></table></figure><pre><code>[&apos;scale(X00)&apos;, &apos;scale(X07)&apos;, &apos;scale(X28)&apos;, &apos;scale(X31)&apos;, &apos;scale(X32)&apos;, &apos;scale(X01)&apos;, &apos;scale(X06)&apos;, &apos;scale(X22)&apos;, &apos;scale(X27)&apos;, &apos;scale(X29)&apos;, &apos;scale(X12)&apos;, &apos;scale(X20)&apos;, &apos;scale(X30)&apos;, &apos;scale(X37)&apos;, &apos;scale(X38)&apos;, &apos;scale(X11)&apos;, &apos;scale(X34)&apos;, &apos;scale(X02)&apos;, &apos;scale(X03)&apos;, &apos;scale(X18)&apos;, &apos;scale(X24)&apos;, &apos;scale(X26)&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">formulas2 = water_name + direction_name</span><br><span class="line">formulas2.append(<span class="string">'hour'</span>)</span><br><span class="line">formulas2 = [<span class="string">'C(&#123;&#125;)'</span>.format(x) <span class="keyword">for</span> x <span class="keyword">in</span> formulas2]</span><br><span class="line">formulas2</span><br></pre></td></tr></table></figure><pre><code>[&apos;C(X04)&apos;, &apos;C(X10)&apos;, &apos;C(X21)&apos;, &apos;C(X36)&apos;, &apos;C(X39)&apos;, &apos;C(X13)&apos;, &apos;C(X15)&apos;, &apos;C(X17)&apos;, &apos;C(X25)&apos;, &apos;C(X35)&apos;, &apos;C(hour)&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">formulas = formulas + formulas2</span><br></pre></td></tr></table></figure><blockquote><h2 id="OLS-식-Y00-예측-모델만들기"><a href="#OLS-식-Y00-예측-모델만들기" class="headerlink" title="OLS 식 , Y00 예측 모델만들기"></a>OLS 식 , Y00 예측 모델만들기</h2></blockquote><ul><li>스케일링, 카테고리 변수</li><li>Y00을 포함한 Y00_df 생성</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'+'</span>.join(formulas)</span><br><span class="line">a</span><br></pre></td></tr></table></figure><pre><code>&apos;scale(X00)+scale(X07)+scale(X28)+scale(X31)+scale(X32)+scale(X01)+scale(X06)+scale(X22)+scale(X27)+scale(X29)+scale(X12)+scale(X20)+scale(X30)+scale(X37)+scale(X38)+scale(X11)+scale(X34)+scale(X02)+scale(X03)+scale(X18)+scale(X24)+scale(X26)+C(X04)+C(X10)+C(X21)+C(X36)+C(X39)+C(X13)+C(X15)+C(X17)+C(X25)+C(X35)+C(hour)&apos;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Y00_df = pd.concat([X_30s, sensor[<span class="string">'Y00'</span>]], axis=<span class="number">1</span>)</span><br><span class="line">Y00_df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>X09</th>      <th>...</th>      <th>X32</th>      <th>X33</th>      <th>X34</th>      <th>X35</th>      <th>X36</th>      <th>X37</th>      <th>X38</th>      <th>X39</th>      <th>hour</th>      <th>Y00</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>9.7</td>      <td>988.8</td>      <td>1.2</td>      <td>0.6</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.2</td>      <td>1009.9</td>      <td>1009.8</td>      <td>...</td>      <td>10.7</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.2</td>      <td>62.6</td>      <td>0</td>      <td>0</td>      <td>12.5</td>    </tr>    <tr>      <td>1</td>      <td>9.3</td>      <td>988.9</td>      <td>1.7</td>      <td>1.9</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.1</td>      <td>1010.0</td>      <td>1009.9</td>      <td>...</td>      <td>10.3</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.3</td>      <td>63.5</td>      <td>0</td>      <td>0</td>      <td>12.5</td>    </tr>    <tr>      <td>2</td>      <td>9.4</td>      <td>989.0</td>      <td>1.1</td>      <td>2.3</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.1</td>      <td>1010.1</td>      <td>1010.1</td>      <td>...</td>      <td>9.7</td>      <td>1010.0</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.3</td>      <td>63.9</td>      <td>0</td>      <td>0</td>      <td>12.0</td>    </tr>    <tr>      <td>3</td>      <td>9.4</td>      <td>988.9</td>      <td>1.5</td>      <td>0.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.6</td>      <td>12.0</td>      <td>1010.0</td>      <td>1010.0</td>      <td>...</td>      <td>9.4</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.5</td>      <td>64.5</td>      <td>0</td>      <td>0</td>      <td>12.0</td>    </tr>    <tr>      <td>4</td>      <td>9.2</td>      <td>988.9</td>      <td>0.8</td>      <td>1.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.0</td>      <td>1010.1</td>      <td>1010.0</td>      <td>...</td>      <td>9.4</td>      <td>1010.1</td>      <td>0.00</td>      <td>1</td>      <td>0</td>      <td>78.0</td>      <td>65.0</td>      <td>0</td>      <td>0</td>      <td>12.0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4315</td>      <td>19.5</td>      <td>987.8</td>      <td>1.7</td>      <td>0.4</td>      <td>0</td>      <td>1007.8</td>      <td>988.0</td>      <td>21.3</td>      <td>1007.8</td>      <td>1007.5</td>      <td>...</td>      <td>19.4</td>      <td>1008.2</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.3</td>      <td>74.3</td>      <td>0</td>      <td>23</td>      <td>22.0</td>    </tr>    <tr>      <td>4316</td>      <td>19.3</td>      <td>987.7</td>      <td>2.1</td>      <td>0.9</td>      <td>0</td>      <td>1007.8</td>      <td>988.1</td>      <td>21.3</td>      <td>1008.0</td>      <td>1007.4</td>      <td>...</td>      <td>18.5</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.4</td>      <td>74.8</td>      <td>0</td>      <td>23</td>      <td>22.0</td>    </tr>    <tr>      <td>4317</td>      <td>19.5</td>      <td>987.8</td>      <td>0.9</td>      <td>1.3</td>      <td>0</td>      <td>1007.8</td>      <td>988.3</td>      <td>21.2</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>19.1</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.8</td>      <td>75.4</td>      <td>0</td>      <td>23</td>      <td>21.5</td>    </tr>    <tr>      <td>4318</td>      <td>20.0</td>      <td>987.8</td>      <td>1.4</td>      <td>0.5</td>      <td>0</td>      <td>1007.8</td>      <td>988.3</td>      <td>21.1</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>19.0</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.8</td>      <td>75.8</td>      <td>0</td>      <td>23</td>      <td>21.5</td>    </tr>    <tr>      <td>4319</td>      <td>20.1</td>      <td>987.8</td>      <td>1.2</td>      <td>1.2</td>      <td>0</td>      <td>1007.8</td>      <td>988.2</td>      <td>20.9</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>18.5</td>      <td>1008.3</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>83.5</td>      <td>76.9</td>      <td>0</td>      <td>23</td>      <td>21.5</td>    </tr>  </tbody></table><p>4320 rows × 39 columns</p></div><blockquote><h2 id="Y00-OLS-Report"><a href="#Y00-OLS-Report" class="headerlink" title="Y00 OLS Report"></a>Y00 OLS Report</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model1 = sm.OLS.from_formula(<span class="string">"Y00 ~ scale(X00)+scale(X07)+scale(X28)+scale(X31)+scale(X32)+scale(X01)+scale(X06)+scale(X22)+scale(X27)+scale(X29)+scale(X12)+scale(X20)+scale(X30)+scale(X37)+scale(X38)+scale(X11)+scale(X34)+scale(X02)+scale(X03)+scale(X18)+scale(X24)+scale(X26)+C(X04)+C(X10)+C(X21)+C(X36)+C(X39)+C(X13)+C(X15)+C(X17)+C(X25)+C(X35)+C(hour)"</span>, Y00_df)</span><br><span class="line">result1 = model1.fit()</span><br><span class="line">print(result1.summary())</span><br></pre></td></tr></table></figure><pre><code>                            OLS Regression Results                            ==============================================================================Dep. Variable:                    Y00   R-squared:                       0.993Model:                            OLS   Adj. R-squared:                  0.993Method:                 Least Squares   F-statistic:                     8823.Date:                Sat, 18 Apr 2020   Prob (F-statistic):               0.00Time:                        14:39:02   Log-Likelihood:                -1831.6No. Observations:                4320   AIC:                             3795.Df Residuals:                    4254   BIC:                             4216.Df Model:                          65                                         Covariance Type:            nonrobust                                         =================================================================================                    coef    std err          t      P&gt;|t|      [0.025      0.975]---------------------------------------------------------------------------------Intercept        21.9936      0.043    509.663      0.000      21.909      22.078C(X04)[T.1]      -0.1483      0.054     -2.724      0.006      -0.255      -0.042C(X10)[T.1]       0.2583      0.071      3.646      0.000       0.119       0.397C(X21)[T.1]      -0.1453      0.069     -2.111      0.035      -0.280      -0.010C(X36)[T.1]      -0.0792      0.055     -1.429      0.153      -0.188       0.029C(X39)[T.1]      -0.0264      0.040     -0.656      0.512      -0.105       0.052C(X13)[T.1]      -0.0262      0.019     -1.399      0.162      -0.063       0.011C(X13)[T.2]      -0.0040      0.016     -0.258      0.796      -0.035       0.027C(X13)[T.3]       0.0225      0.021      1.090      0.276      -0.018       0.063C(X15)[T.1]      -0.0090      0.020     -0.443      0.658      -0.049       0.031C(X15)[T.2]       0.0408      0.019      2.138      0.033       0.003       0.078C(X15)[T.3]       0.0247      0.021      1.172      0.241      -0.017       0.066C(X17)[T.1]      -0.0217      0.020     -1.112      0.266      -0.060       0.017C(X17)[T.2]      -0.0114      0.019     -0.603      0.547      -0.049       0.026C(X17)[T.3]      -0.0262      0.020     -1.317      0.188      -0.065       0.013C(X25)[T.1]      -0.0218      0.024     -0.897      0.370      -0.069       0.026C(X25)[T.2]       0.0802      0.020      3.914      0.000       0.040       0.120C(X25)[T.3]       0.0382      0.018      2.081      0.037       0.002       0.074C(X35)[T.1]       0.0633      0.023      2.742      0.006       0.018       0.108C(X35)[T.2]       0.0510      0.020      2.535      0.011       0.012       0.091C(X35)[T.3]       0.0091      0.021      0.444      0.657      -0.031       0.049C(hour)[T.1]     -0.1131      0.040     -2.851      0.004      -0.191      -0.035C(hour)[T.2]     -0.2216      0.040     -5.543      0.000      -0.300      -0.143C(hour)[T.3]     -0.3348      0.040     -8.272      0.000      -0.414      -0.255C(hour)[T.4]     -0.4096      0.041     -9.969      0.000      -0.490      -0.329C(hour)[T.5]     -0.5497      0.042    -13.096      0.000      -0.632      -0.467C(hour)[T.6]     -0.9854      0.042    -23.581      0.000      -1.067      -0.903C(hour)[T.7]     -1.3939      0.042    -33.197      0.000      -1.476      -1.312C(hour)[T.8]     -1.5723      0.043    -36.336      0.000      -1.657      -1.487C(hour)[T.9]     -1.6007      0.046    -35.118      0.000      -1.690      -1.511C(hour)[T.10]    -1.5496      0.048    -32.255      0.000      -1.644      -1.455C(hour)[T.11]    -1.4606      0.050    -28.934      0.000      -1.560      -1.362C(hour)[T.12]    -1.3289      0.053    -24.914      0.000      -1.433      -1.224C(hour)[T.13]    -1.3072      0.055    -23.769      0.000      -1.415      -1.199C(hour)[T.14]    -1.1328      0.057    -20.037      0.000      -1.244      -1.022C(hour)[T.15]    -0.9958      0.059    -16.972      0.000      -1.111      -0.881C(hour)[T.16]    -0.8724      0.060    -14.451      0.000      -0.991      -0.754C(hour)[T.17]    -0.6048      0.061     -9.920      0.000      -0.724      -0.485C(hour)[T.18]    -0.2100      0.062     -3.395      0.001      -0.331      -0.089C(hour)[T.19]     0.1856      0.062      2.993      0.003       0.064       0.307C(hour)[T.20]     0.1702      0.061      2.781      0.005       0.050       0.290C(hour)[T.21]    -0.0616      0.062     -1.000      0.317      -0.182       0.059C(hour)[T.22]    -0.2288      0.063     -3.652      0.000      -0.352      -0.106C(hour)[T.23]    -0.4915      0.064     -7.712      0.000      -0.616      -0.367scale(X00)       -0.3816      0.042     -9.083      0.000      -0.464      -0.299scale(X07)        3.9408      0.056     69.833      0.000       3.830       4.051scale(X28)        0.6474      0.053     12.245      0.000       0.544       0.751scale(X31)       -0.0514      0.051     -0.999      0.318      -0.152       0.049scale(X32)        0.1671      0.049      3.393      0.001       0.071       0.264scale(X01)        0.1292      0.132      0.977      0.329      -0.130       0.388scale(X06)       -0.1829      0.138     -1.328      0.184      -0.453       0.087scale(X22)        0.6216      0.142      4.392      0.000       0.344       0.899scale(X27)       -0.6094      0.102     -5.997      0.000      -0.809      -0.410scale(X29)        0.0311      0.188      0.165      0.869      -0.338       0.401scale(X12)       -0.0350      0.036     -0.970      0.332      -0.106       0.036scale(X20)        0.0359      0.028      1.278      0.201      -0.019       0.091scale(X30)        0.1846      0.032      5.839      0.000       0.123       0.247scale(X37)       -0.0198      0.029     -0.672      0.502      -0.078       0.038scale(X38)        0.1327      0.027      4.901      0.000       0.080       0.186scale(X11)       -0.4297      0.068     -6.304      0.000      -0.563      -0.296scale(X34)        0.7449      0.070     10.587      0.000       0.607       0.883scale(X02)        0.0242      0.008      3.171      0.002       0.009       0.039scale(X03)        0.0249      0.008      3.133      0.002       0.009       0.041scale(X18)        0.0107      0.009      1.140      0.254      -0.008       0.029scale(X24)       -0.0069      0.010     -0.687      0.492      -0.027       0.013scale(X26)        0.0623      0.010      6.273      0.000       0.043       0.082==============================================================================Omnibus:                       91.277   Durbin-Watson:                   0.552Prob(Omnibus):                  0.000   Jarque-Bera (JB):              128.438Skew:                           0.243   Prob(JB):                     1.29e-28Kurtosis:                       3.691   Cond. No.                         132.==============================================================================Warnings:[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">8</span>, <span class="number">100</span>))</span><br><span class="line">sm.graphics.plot_ccpr_grid(result1, fig=fig)</span><br><span class="line">fig.suptitle(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_35_0.png" class><blockquote><h2 id="KFold-검증"><a href="#KFold-검증" class="headerlink" title="KFold 검증"></a>KFold 검증</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line">kfold = KFold(<span class="number">5</span>, shuffle=<span class="literal">True</span>, random_state=<span class="number">13</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">N = len(Y00_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y00_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y00_df.iloc[idx_test]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model0 = sm.OLS.from_formula(<span class="string">"Y00 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result0 = model0.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result0.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y00 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y00 - df_test.Y00.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result0.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result0.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y00 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y00 - dfX_test.Y00.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.99272483, 검증 R2 = 0.99242741학습 R2 = 0.99272483, 검증 R2 = 0.99215678학습 R2 = 0.99272483, 검증 R2 = 0.99328929학습 R2 = 0.99272483, 검증 R2 = 0.99281616학습 R2 = 0.99272483, 검증 R2 = 0.992845780.9923736912649597</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y00'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y00'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y00'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_40_0.png" class><blockquote><h2 id="나머지-값들도-KFold-검증"><a href="#나머지-값들도-KFold-검증" class="headerlink" title="나머지 값들도 KFold 검증"></a>나머지 값들도 KFold 검증</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y01_df = pd.concat([X_30s, sensor[<span class="string">'Y01'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y01_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y01_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y01_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model1 = sm.OLS.from_formula(<span class="string">"Y01 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result1 = model1.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result1.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y01 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y01 - df_test.Y01.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result1.rsquared, rsquared))</span><br><span class="line">    </span><br><span class="line">pred = result1.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y01 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y01 - dfX_test.Y01.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.98413713, 검증 R2 = 0.98378369학습 R2 = 0.98413713, 검증 R2 = 0.98328775학습 R2 = 0.98413713, 검증 R2 = 0.98360291학습 R2 = 0.98413713, 검증 R2 = 0.98524484학습 R2 = 0.98413713, 검증 R2 = 0.984587870.9812739427374754</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y01'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y01'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y01'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_43_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y02_df = pd.concat([X_30s, sensor[<span class="string">'Y02'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y02_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y02_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y02_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model2 = sm.OLS.from_formula(<span class="string">"Y02 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result2 = model2.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result2.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y02 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y02 - df_test.Y02.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result2.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result2.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y02 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y02 - dfX_test.Y02.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.98337319, 검증 R2 = 0.98398663학습 R2 = 0.98337319, 검증 R2 = 0.98194591학습 R2 = 0.98337319, 검증 R2 = 0.98332113학습 R2 = 0.98337319, 검증 R2 = 0.98376697학습 R2 = 0.98337319, 검증 R2 = 0.983643820.9813744364414267</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y02'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y02'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y02'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_45_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y03_df = pd.concat([X_30s, sensor[<span class="string">'Y03'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y03_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y03_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y03_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model3 = sm.OLS.from_formula(<span class="string">"Y03 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result3 = model3.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result3.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y03 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y03 - df_test.Y03.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result3.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result3.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y03 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y03 - dfX_test.Y03.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.94846634, 검증 R2 = 0.94657794학습 R2 = 0.94846634, 검증 R2 = 0.94653673학습 R2 = 0.94846634, 검증 R2 = 0.95014468학습 R2 = 0.94846634, 검증 R2 = 0.95104291학습 R2 = 0.94846634, 검증 R2 = 0.947979480.9473344365714368</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y03'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y03'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y03'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_47_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Y04_df = pd.concat([X_30s, sensor[<span class="string">'Y04'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y04_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y04_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y04_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line">cv = KFold(<span class="number">5</span>, shuffle=<span class="literal">True</span>, random_state=<span class="number">13</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(cv.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model4 = sm.OLS.from_formula(<span class="string">"Y04 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result4 = model4.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result4.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y04 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y04 - df_test.Y04.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result4.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result4.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y04 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y04 - dfX_test.Y04.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.94796568, 검증 R2 = 0.94734167학습 R2 = 0.94796568, 검증 R2 = 0.94561380학습 R2 = 0.94796568, 검증 R2 = 0.94708696학습 R2 = 0.94796568, 검증 R2 = 0.95117340학습 R2 = 0.94796568, 검증 R2 = 0.948487450.9466163967513248</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y04'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y04'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y04'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_49_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y05_df = pd.concat([X_30s, sensor[<span class="string">'Y05'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y05_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y05_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y05_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model5 = sm.OLS.from_formula(<span class="string">"Y05 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result5 = model5.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result5.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y05 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y05 - df_test.Y05.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result5.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result5.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y05 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y05 - dfX_test.Y05.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.94777908, 검증 R2 = 0.94299018학습 R2 = 0.94777908, 검증 R2 = 0.94408928학습 R2 = 0.94777908, 검증 R2 = 0.94572819학습 R2 = 0.94777908, 검증 R2 = 0.94986888학습 R2 = 0.94777908, 검증 R2 = 0.955408270.9406042424726812</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y05'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y05'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y05'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_51_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y06_df = pd.concat([X_30s, sensor[<span class="string">'Y06'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y06_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y06_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y06_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model6 = sm.OLS.from_formula(<span class="string">"Y06 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result6 = model6.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result6.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y06 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y06 - df_test.Y06.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result6.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result6.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y06 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y06 - dfX_test.Y06.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.93753514, 검증 R2 = 0.93838017학습 R2 = 0.93753514, 검증 R2 = 0.93545692학습 R2 = 0.93753514, 검증 R2 = 0.93884759학습 R2 = 0.93753514, 검증 R2 = 0.93079795학습 R2 = 0.93753514, 검증 R2 = 0.943468280.9330361936783402</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y06'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y06'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y06'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_53_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y07_df = pd.concat([X_30s, sensor[<span class="string">'Y07'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y07_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y07_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y07_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model7 = sm.OLS.from_formula(<span class="string">"Y07 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result7 = model7.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result7.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y07 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y07 - df_test.Y07.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result7.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result7.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y07 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y07 - dfX_test.Y07.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.89336104, 검증 R2 = 0.88463988학습 R2 = 0.89336104, 검증 R2 = 0.89507160학습 R2 = 0.89336104, 검증 R2 = 0.90083034학습 R2 = 0.89336104, 검증 R2 = 0.87764882학습 R2 = 0.89336104, 검증 R2 = 0.907396590.8867440441794064</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y07'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y07'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y07'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_55_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y08_df = pd.concat([X_30s, sensor[<span class="string">'Y08'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y08_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y08_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y08_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model8 = sm.OLS.from_formula(<span class="string">"Y08 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result8 = model8.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result8.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y08 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y08 - df_test.Y08.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result8.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result8.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y08 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y08 - dfX_test.Y08.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.93860214, 검증 R2 = 0.93855661학습 R2 = 0.93860214, 검증 R2 = 0.93569780학습 R2 = 0.93860214, 검증 R2 = 0.93912749학습 R2 = 0.93860214, 검증 R2 = 0.93465834학습 R2 = 0.93860214, 검증 R2 = 0.944189880.9277941979411815</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y08'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y08'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y08'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_57_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y09_df = pd.concat([X_30s, sensor[<span class="string">'Y09'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y09_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y09_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y09_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model9 = sm.OLS.from_formula(<span class="string">"Y09 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result9 = model9.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result9.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y09 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y09 - df_test.Y09.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result9.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result9.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y09 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y09 - dfX_test.Y09.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.97479786, 검증 R2 = 0.97486045학습 R2 = 0.97479786, 검증 R2 = 0.97286052학습 R2 = 0.97479786, 검증 R2 = 0.97321239학습 R2 = 0.97479786, 검증 R2 = 0.97642863학습 R2 = 0.97479786, 검증 R2 = 0.976406870.9711646789042401</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y09'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y09'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y09'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_59_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y10_df = pd.concat([X_30s, sensor[<span class="string">'Y10'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y10_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y10_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y10_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model10 = sm.OLS.from_formula(<span class="string">"Y10 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result10 = model10.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result10.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y10 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y10 - df_test.Y10.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result10.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result10.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y10 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y10 - dfX_test.Y10.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.97589977, 검증 R2 = 0.97627704학습 R2 = 0.97589977, 검증 R2 = 0.97351250학습 R2 = 0.97589977, 검증 R2 = 0.97526803학습 R2 = 0.97589977, 검증 R2 = 0.97882271학습 R2 = 0.97589977, 검증 R2 = 0.975256760.9710476924723909</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y10'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y10'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y10'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_61_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y11_df = pd.concat([X_30s, sensor[<span class="string">'Y11'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y11_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y11_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y11_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model11 = sm.OLS.from_formula(<span class="string">"Y11 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result11 = model11.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result11.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y11 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y11 - df_test.Y11.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result11.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result11.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y11 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y11 - dfX_test.Y11.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.97119857, 검증 R2 = 0.97285008학습 R2 = 0.97119857, 검증 R2 = 0.96713121학습 R2 = 0.97119857, 검증 R2 = 0.96954841학습 R2 = 0.97119857, 검증 R2 = 0.97423509학습 R2 = 0.97119857, 검증 R2 = 0.971845500.9651365225146471</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y11'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y11'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y11'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_63_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y12_df = pd.concat([X_30s, sensor[<span class="string">'Y12'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y12_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y12_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y12_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model12 = sm.OLS.from_formula(<span class="string">"Y12 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result12 = model12.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result12.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y12 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y12 - df_test.Y12.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result12.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result12.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y12 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y12 - dfX_test.Y12.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.93043914, 검증 R2 = 0.92730076학습 R2 = 0.93043914, 검증 R2 = 0.92779232학습 R2 = 0.93043914, 검증 R2 = 0.93719237학습 R2 = 0.93043914, 검증 R2 = 0.92444176학습 R2 = 0.93043914, 검증 R2 = 0.934353590.9258530541128716</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y12'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y12'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y12'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_65_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y13_df = pd.concat([X_30s, sensor[<span class="string">'Y13'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y13_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y13_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y13_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model13 = sm.OLS.from_formula(<span class="string">"Y13 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result13 = model13.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result13.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y13 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y13 - df_test.Y13.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result13.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result13.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y13 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y13 - dfX_test.Y13.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.97551170, 검증 R2 = 0.97691878학습 R2 = 0.97551170, 검증 R2 = 0.97502043학습 R2 = 0.97551170, 검증 R2 = 0.97650240학습 R2 = 0.97551170, 검증 R2 = 0.97279838학습 R2 = 0.97551170, 검증 R2 = 0.976155780.9723087570476632</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y13'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y13'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y13'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_67_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y14_df = pd.concat([X_30s, sensor[<span class="string">'Y14'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y14_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y14_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y14_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model14 = sm.OLS.from_formula(<span class="string">"Y14 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result14 = model14.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result14.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y14 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y14 - df_test.Y14.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result14.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result14.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y14 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y14 - dfX_test.Y14.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.95055229, 검증 R2 = 0.95174316학습 R2 = 0.95055229, 검증 R2 = 0.95003596학습 R2 = 0.95055229, 검증 R2 = 0.95233452학습 R2 = 0.95055229, 검증 R2 = 0.94609319학습 R2 = 0.95055229, 검증 R2 = 0.952077060.9433902924785645</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y14'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y14'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y14'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_69_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y15_df = pd.concat([X_30s, sensor[<span class="string">'Y15'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y15_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y15_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y15_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model15 = sm.OLS.from_formula(<span class="string">"Y15 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result15 = model15.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result15.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y15 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y15 - df_test.Y15.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result15.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result15.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y15 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y15 - dfX_test.Y15.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.97086836, 검증 R2 = 0.97222260학습 R2 = 0.97086836, 검증 R2 = 0.97190213학습 R2 = 0.97086836, 검증 R2 = 0.96797335학습 R2 = 0.97086836, 검증 R2 = 0.97158117학습 R2 = 0.97086836, 검증 R2 = 0.970707770.9673690894807192</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y15'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y15'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y15'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_71_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y16_df = pd.concat([X_30s, sensor[<span class="string">'Y16'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y16_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y16_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y16_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model16 = sm.OLS.from_formula(<span class="string">"Y16 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result16 = model16.fit()</span><br><span class="line">    b</span><br><span class="line">    pred = result16.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y16 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y16 - df_test.Y16.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result16.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result16.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y16 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y16 - dfX_test.Y16.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.96814730, 검증 R2 = 0.96684993학습 R2 = 0.96814730, 검증 R2 = 0.96568806학습 R2 = 0.96814730, 검증 R2 = 0.96983776학습 R2 = 0.96814730, 검증 R2 = 0.96852404학습 R2 = 0.96814730, 검증 R2 = 0.969300780.9635284816353513</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y16'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y16'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y16'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_73_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Y17_df = pd.concat([X_30s, sensor[<span class="string">'Y17'</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">N = len(Y17_df)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y17_df.iloc[idx_train]</span><br><span class="line">dfX_test = Y17_df.iloc[idx_test]</span><br><span class="line"></span><br><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model17 = sm.OLS.from_formula(<span class="string">"Y17 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result17 = model17.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result17.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y17 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y17 - df_test.Y17.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result17.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result17.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y17 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y17 - dfX_test.Y17.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.95399940, 검증 R2 = 0.95549371학습 R2 = 0.95399940, 검증 R2 = 0.95233226학습 R2 = 0.95399940, 검증 R2 = 0.95487363학습 R2 = 0.95399940, 검증 R2 = 0.95520874학습 R2 = 0.95399940, 검증 R2 = 0.951703760.9495062343625932</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y17'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y17'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y17'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_75_0.png" class><blockquote><h2 id="모델을-활용한-이후-3일의-Y00-Y17-값-예측"><a href="#모델을-활용한-이후-3일의-Y00-Y17-값-예측" class="headerlink" title="모델을 활용한 이후 3일의 Y00~Y17 값 예측"></a>모델을 활용한 이후 3일의 Y00~Y17 값 예측</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df2 = df.loc[<span class="number">4320</span>:]</span><br><span class="line">df2.dropna(axis=<span class="number">1</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">df2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>...</th>      <th>X32</th>      <th>X33</th>      <th>X34</th>      <th>X35</th>      <th>X36</th>      <th>X37</th>      <th>X38</th>      <th>X39</th>      <th>Y18</th>      <th>hour</th>    </tr>  </thead>  <tbody>    <tr>      <td>4320</td>      <td>4320</td>      <td>19.3</td>      <td>987.7</td>      <td>0.9</td>      <td>2.2</td>      <td>0</td>      <td>1007.7</td>      <td>988.0</td>      <td>20.8</td>      <td>1007.8</td>      <td>...</td>      <td>18.7</td>      <td>1008.3</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.0</td>      <td>77.6</td>      <td>0</td>      <td>20.5</td>      <td>0</td>    </tr>    <tr>      <td>4321</td>      <td>4321</td>      <td>19.0</td>      <td>987.6</td>      <td>1.9</td>      <td>2.2</td>      <td>0</td>      <td>1007.7</td>      <td>988.0</td>      <td>20.6</td>      <td>1007.8</td>      <td>...</td>      <td>19.0</td>      <td>1008.3</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.4</td>      <td>79.2</td>      <td>0</td>      <td>20.5</td>      <td>0</td>    </tr>    <tr>      <td>4322</td>      <td>4322</td>      <td>19.1</td>      <td>987.6</td>      <td>2.0</td>      <td>1.4</td>      <td>0</td>      <td>1007.8</td>      <td>988.1</td>      <td>20.5</td>      <td>1007.9</td>      <td>...</td>      <td>19.2</td>      <td>1008.3</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.9</td>      <td>79.9</td>      <td>0</td>      <td>20.5</td>      <td>0</td>    </tr>    <tr>      <td>4323</td>      <td>4323</td>      <td>19.2</td>      <td>987.7</td>      <td>1.8</td>      <td>1.5</td>      <td>0</td>      <td>1007.9</td>      <td>988.1</td>      <td>20.5</td>      <td>1007.9</td>      <td>...</td>      <td>19.3</td>      <td>1008.4</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.9</td>      <td>80.7</td>      <td>0</td>      <td>20.5</td>      <td>0</td>    </tr>    <tr>      <td>4324</td>      <td>4324</td>      <td>19.2</td>      <td>987.8</td>      <td>1.4</td>      <td>1.4</td>      <td>0</td>      <td>1007.9</td>      <td>988.1</td>      <td>20.5</td>      <td>1007.8</td>      <td>...</td>      <td>19.5</td>      <td>1008.4</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.9</td>      <td>80.9</td>      <td>0</td>      <td>20.5</td>      <td>0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4747</td>      <td>4747</td>      <td>19.9</td>      <td>987.6</td>      <td>0.9</td>      <td>0.8</td>      <td>0</td>      <td>1006.9</td>      <td>987.7</td>      <td>21.7</td>      <td>1007.5</td>      <td>...</td>      <td>19.1</td>      <td>1007.5</td>      <td>22.16</td>      <td>2</td>      <td>0</td>      <td>82.3</td>      <td>58.6</td>      <td>1</td>      <td>21.5</td>      <td>23</td>    </tr>    <tr>      <td>4748</td>      <td>4748</td>      <td>19.9</td>      <td>987.6</td>      <td>0.5</td>      <td>0.7</td>      <td>0</td>      <td>1006.8</td>      <td>987.7</td>      <td>21.6</td>      <td>1007.5</td>      <td>...</td>      <td>19.2</td>      <td>1007.5</td>      <td>22.16</td>      <td>1</td>      <td>0</td>      <td>82.5</td>      <td>59.1</td>      <td>1</td>      <td>21.5</td>      <td>23</td>    </tr>    <tr>      <td>4749</td>      <td>4749</td>      <td>19.7</td>      <td>987.7</td>      <td>0.9</td>      <td>0.6</td>      <td>0</td>      <td>1006.9</td>      <td>987.6</td>      <td>21.4</td>      <td>1007.4</td>      <td>...</td>      <td>19.2</td>      <td>1007.5</td>      <td>22.16</td>      <td>2</td>      <td>0</td>      <td>83.0</td>      <td>58.9</td>      <td>1</td>      <td>21.5</td>      <td>23</td>    </tr>    <tr>      <td>4750</td>      <td>4750</td>      <td>19.4</td>      <td>987.7</td>      <td>0.9</td>      <td>0.8</td>      <td>0</td>      <td>1006.9</td>      <td>987.8</td>      <td>21.3</td>      <td>1007.6</td>      <td>...</td>      <td>19.3</td>      <td>1007.6</td>      <td>22.16</td>      <td>3</td>      <td>0</td>      <td>83.2</td>      <td>59.8</td>      <td>1</td>      <td>21.5</td>      <td>23</td>    </tr>    <tr>      <td>4751</td>      <td>4751</td>      <td>19.1</td>      <td>987.6</td>      <td>1.0</td>      <td>0.3</td>      <td>0</td>      <td>1006.8</td>      <td>987.8</td>      <td>21.2</td>      <td>1007.5</td>      <td>...</td>      <td>19.5</td>      <td>1007.7</td>      <td>22.16</td>      <td>1</td>      <td>0</td>      <td>84.0</td>      <td>59.5</td>      <td>1</td>      <td>21.0</td>      <td>23</td>    </tr>  </tbody></table><p>432 rows × 43 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X_3s = df2.drop(columns=[<span class="string">'X14'</span>, <span class="string">'X16'</span>, <span class="string">'X19'</span>, <span class="string">'Y18'</span>, <span class="string">'id'</span>], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><blockquote><h2 id="이후-3일의-기상청데이터"><a href="#이후-3일의-기상청데이터" class="headerlink" title="이후 3일의 기상청데이터"></a>이후 3일의 기상청데이터</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X_3s</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>X09</th>      <th>...</th>      <th>X31</th>      <th>X32</th>      <th>X33</th>      <th>X34</th>      <th>X35</th>      <th>X36</th>      <th>X37</th>      <th>X38</th>      <th>X39</th>      <th>hour</th>    </tr>  </thead>  <tbody>    <tr>      <td>4320</td>      <td>19.3</td>      <td>987.7</td>      <td>0.9</td>      <td>2.2</td>      <td>0</td>      <td>1007.7</td>      <td>988.0</td>      <td>20.8</td>      <td>1007.8</td>      <td>1007.4</td>      <td>...</td>      <td>18.0</td>      <td>18.7</td>      <td>1008.3</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.0</td>      <td>77.6</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>4321</td>      <td>19.0</td>      <td>987.6</td>      <td>1.9</td>      <td>2.2</td>      <td>0</td>      <td>1007.7</td>      <td>988.0</td>      <td>20.6</td>      <td>1007.8</td>      <td>1007.4</td>      <td>...</td>      <td>17.7</td>      <td>19.0</td>      <td>1008.3</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.4</td>      <td>79.2</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>4322</td>      <td>19.1</td>      <td>987.6</td>      <td>2.0</td>      <td>1.4</td>      <td>0</td>      <td>1007.8</td>      <td>988.1</td>      <td>20.5</td>      <td>1007.9</td>      <td>1007.4</td>      <td>...</td>      <td>17.4</td>      <td>19.2</td>      <td>1008.3</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.9</td>      <td>79.9</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>4323</td>      <td>19.2</td>      <td>987.7</td>      <td>1.8</td>      <td>1.5</td>      <td>0</td>      <td>1007.9</td>      <td>988.1</td>      <td>20.5</td>      <td>1007.9</td>      <td>1007.5</td>      <td>...</td>      <td>17.5</td>      <td>19.3</td>      <td>1008.4</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.9</td>      <td>80.7</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>4324</td>      <td>19.2</td>      <td>987.8</td>      <td>1.4</td>      <td>1.4</td>      <td>0</td>      <td>1007.9</td>      <td>988.1</td>      <td>20.5</td>      <td>1007.8</td>      <td>1007.6</td>      <td>...</td>      <td>17.4</td>      <td>19.5</td>      <td>1008.4</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.9</td>      <td>80.9</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4747</td>      <td>19.9</td>      <td>987.6</td>      <td>0.9</td>      <td>0.8</td>      <td>0</td>      <td>1006.9</td>      <td>987.7</td>      <td>21.7</td>      <td>1007.5</td>      <td>1007.4</td>      <td>...</td>      <td>17.7</td>      <td>19.1</td>      <td>1007.5</td>      <td>22.16</td>      <td>2</td>      <td>0</td>      <td>82.3</td>      <td>58.6</td>      <td>1</td>      <td>23</td>    </tr>    <tr>      <td>4748</td>      <td>19.9</td>      <td>987.6</td>      <td>0.5</td>      <td>0.7</td>      <td>0</td>      <td>1006.8</td>      <td>987.7</td>      <td>21.6</td>      <td>1007.5</td>      <td>1007.4</td>      <td>...</td>      <td>17.7</td>      <td>19.2</td>      <td>1007.5</td>      <td>22.16</td>      <td>1</td>      <td>0</td>      <td>82.5</td>      <td>59.1</td>      <td>1</td>      <td>23</td>    </tr>    <tr>      <td>4749</td>      <td>19.7</td>      <td>987.7</td>      <td>0.9</td>      <td>0.6</td>      <td>0</td>      <td>1006.9</td>      <td>987.6</td>      <td>21.4</td>      <td>1007.4</td>      <td>1007.5</td>      <td>...</td>      <td>17.8</td>      <td>19.2</td>      <td>1007.5</td>      <td>22.16</td>      <td>2</td>      <td>0</td>      <td>83.0</td>      <td>58.9</td>      <td>1</td>      <td>23</td>    </tr>    <tr>      <td>4750</td>      <td>19.4</td>      <td>987.7</td>      <td>0.9</td>      <td>0.8</td>      <td>0</td>      <td>1006.9</td>      <td>987.8</td>      <td>21.3</td>      <td>1007.6</td>      <td>1007.5</td>      <td>...</td>      <td>17.7</td>      <td>19.3</td>      <td>1007.6</td>      <td>22.16</td>      <td>3</td>      <td>0</td>      <td>83.2</td>      <td>59.8</td>      <td>1</td>      <td>23</td>    </tr>    <tr>      <td>4751</td>      <td>19.1</td>      <td>987.6</td>      <td>1.0</td>      <td>0.3</td>      <td>0</td>      <td>1006.8</td>      <td>987.8</td>      <td>21.2</td>      <td>1007.5</td>      <td>1007.4</td>      <td>...</td>      <td>17.7</td>      <td>19.5</td>      <td>1007.7</td>      <td>22.16</td>      <td>1</td>      <td>0</td>      <td>84.0</td>      <td>59.5</td>      <td>1</td>      <td>23</td>    </tr>  </tbody></table><p>432 rows × 38 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">model0 = sm.OLS.from_formula(<span class="string">"Y00 ~ 1 +"</span> + a, data=Y00_df)</span><br><span class="line">model1 = sm.OLS.from_formula(<span class="string">"Y01 ~ 1 +"</span> + a, data=Y01_df)</span><br><span class="line">model2 = sm.OLS.from_formula(<span class="string">"Y02 ~ 1 +"</span> + a, data=Y02_df)</span><br><span class="line">model3 = sm.OLS.from_formula(<span class="string">"Y03 ~ 1 +"</span> + a, data=Y03_df)</span><br><span class="line">model4 = sm.OLS.from_formula(<span class="string">"Y04 ~ 1 +"</span> + a, data=Y04_df)</span><br><span class="line">model5 = sm.OLS.from_formula(<span class="string">"Y05 ~ 1 +"</span> + a, data=Y05_df)</span><br><span class="line">model6 = sm.OLS.from_formula(<span class="string">"Y06 ~ 1 +"</span> + a, data=Y06_df)</span><br><span class="line">model7 = sm.OLS.from_formula(<span class="string">"Y07 ~ 1 +"</span> + a, data=Y07_df)</span><br><span class="line">model8 = sm.OLS.from_formula(<span class="string">"Y08 ~ 1 +"</span> + a, data=Y08_df)</span><br><span class="line">model9 = sm.OLS.from_formula(<span class="string">"Y09 ~ 1 +"</span> + a, data=Y09_df)</span><br><span class="line">mode110 = sm.OLS.from_formula(<span class="string">"Y10 ~ 1 +"</span> + a, data=Y10_df)</span><br><span class="line">model11 = sm.OLS.from_formula(<span class="string">"Y11 ~ 1 +"</span> + a, data=Y11_df)</span><br><span class="line">model12 = sm.OLS.from_formula(<span class="string">"Y12 ~ 1 +"</span> + a, data=Y12_df)</span><br><span class="line">model13 = sm.OLS.from_formula(<span class="string">"Y13 ~ 1 +"</span> + a, data=Y13_df)</span><br><span class="line">model14 = sm.OLS.from_formula(<span class="string">"Y14 ~ 1 +"</span> + a, data=Y14_df)</span><br><span class="line">model15 = sm.OLS.from_formula(<span class="string">"Y15 ~ 1 +"</span> + a, data=Y15_df)</span><br><span class="line">model16 = sm.OLS.from_formula(<span class="string">"Y16 ~ 1 +"</span> + a, data=Y16_df)</span><br><span class="line">model17 = sm.OLS.from_formula(<span class="string">"Y17 ~ 1 +"</span> + a, data=Y17_df)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models = [model0, model1, model2, model3, model4, model5, model6, model7, model8, model9, model10, model11, model12, model13, model14, model15, model16, model17]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Y_pred = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> model <span class="keyword">in</span> models:</span><br><span class="line">    result = model.fit()</span><br><span class="line">    result = result.predict(X_3s).round(<span class="number">2</span>)</span><br><span class="line">    Y_pred.append(result)</span><br><span class="line">Y_pred</span><br></pre></td></tr></table></figure><pre><code>[4320    21.36 4321    21.25 4322    21.09 4323    21.03 4324    21.02         ...   4747    22.56 4748    22.44 4749    22.21 4750    22.13 4751    22.02 Length: 432, dtype: float64, 4320    21.83 4321    21.55 4322    21.57 4323    21.35 4324    21.42         ...   4747    22.25 4748    21.99 4749    22.06 4750    21.82 4751    21.43 Length: 432, dtype: float64, 4320    21.58 4321    21.42 4322    21.38 4323    21.30 4324    21.37         ...   4747    22.03 4748    21.86 4749    21.73 4750    21.50 4751    21.34 Length: 432, dtype: float64, 4320    25.63 4321    25.49 4322    25.48 4323    25.24 4324    25.25         ...   4747    27.11 4748    27.09 4749    27.02 4750    26.94 4751    26.84 Length: 432, dtype: float64, 4320    25.70 4321    25.52 4322    25.47 4323    25.24 4324    25.24         ...   4747    27.18 4748    27.14 4749    27.07 4750    26.95 4751    26.84 Length: 432, dtype: float64, 4320    20.22 4321    19.86 4322    20.11 4323    20.02 4324    19.95         ...   4747    19.51 4748    19.39 4749    19.28 4750    19.29 4751    18.73 Length: 432, dtype: float64, 4320    18.43 4321    18.65 4322    18.50 4323    18.72 4324    18.67         ...   4747    17.86 4748    17.81 4749    17.76 4750    17.75 4751    17.81 Length: 432, dtype: float64, 4320    18.44 4321    19.08 4322    18.90 4323    19.42 4324    19.29         ...   4747    18.67 4748    18.59 4749    18.41 4750    18.50 4751    18.89 Length: 432, dtype: float64, 4320    20.46 4321    19.56 4322    19.49 4323    19.72 4324    19.72         ...   4747    18.71 4748    18.73 4749    18.45 4750    18.41 4751    17.68 Length: 432, dtype: float64, 4320    19.21 4321    18.63 4322    18.35 4323    18.45 4324    18.49         ...   4747    17.77 4748    17.91 4749    17.91 4750    17.53 4751    17.39 Length: 432, dtype: float64, 4320    20.82 4321    19.94 4322    20.01 4323    19.85 4324    19.92         ...   4747    19.15 4748    19.29 4749    19.85 4750    19.29 4751    19.14 Length: 432, dtype: float64, 4320    19.03 4321    18.60 4322    18.53 4323    18.48 4324    18.49         ...   4747    17.62 4748    17.78 4749    17.58 4750    17.32 4751    17.21 Length: 432, dtype: float64, 4320    18.23 4321    18.58 4322    18.58 4323    18.69 4324    18.63         ...   4747    18.96 4748    18.77 4749    18.65 4750    18.76 4751    18.71 Length: 432, dtype: float64, 4320    19.66 4321    19.08 4322    18.87 4323    18.87 4324    18.79         ...   4747    19.37 4748    19.34 4749    19.27 4750    19.20 4751    18.74 Length: 432, dtype: float64, 4320    20.33 4321    19.07 4322    18.58 4323    18.80 4324    18.74         ...   4747    19.84 4748    19.96 4749    19.91 4750    19.73 4751    18.81 Length: 432, dtype: float64, 4320    19.40 4321    18.95 4322    18.74 4323    18.78 4324    18.72         ...   4747    19.04 4748    19.08 4749    19.07 4750    18.80 4751    18.68 Length: 432, dtype: float64, 4320    18.74 4321    18.63 4322    18.52 4323    18.57 4324    18.60         ...   4747    17.95 4748    17.98 4749    17.88 4750    17.84 4751    17.69 Length: 432, dtype: float64, 4320    19.58 4321    18.57 4322    18.37 4323    18.78 4324    18.75         ...   4747    17.98 4748    18.20 4749    18.21 4750    17.78 4751    17.44 Length: 432, dtype: float64]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Y = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">18</span>):</span><br><span class="line">    <span class="keyword">if</span> x &lt; <span class="number">10</span>:</span><br><span class="line">        result = <span class="string">'Y0'</span> + str(x)</span><br><span class="line">        Y.append(result)</span><br><span class="line">    <span class="keyword">elif</span> x &gt;= <span class="number">10</span>:</span><br><span class="line">        result = <span class="string">'Y'</span> + str(x)</span><br><span class="line">        Y.append(result)</span><br><span class="line">Y</span><br></pre></td></tr></table></figure><pre><code>[&apos;Y00&apos;, &apos;Y01&apos;, &apos;Y02&apos;, &apos;Y03&apos;, &apos;Y04&apos;, &apos;Y05&apos;, &apos;Y06&apos;, &apos;Y07&apos;, &apos;Y08&apos;, &apos;Y09&apos;, &apos;Y10&apos;, &apos;Y11&apos;, &apos;Y12&apos;, &apos;Y13&apos;, &apos;Y14&apos;, &apos;Y15&apos;, &apos;Y16&apos;, &apos;Y17&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Y_pred = pd.DataFrame(Y_pred)</span><br><span class="line">Y_pred = Y_pred.T</span><br><span class="line">Y_pred.columns =  Y</span><br><span class="line">Y_pred[<span class="string">'hour'</span>] = df2[<span class="string">'hour'</span>]</span><br><span class="line">Y_pred[<span class="string">'Y18'</span>] = df2[<span class="string">'Y18'</span>]</span><br><span class="line">Y_pred</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Y00</th>      <th>Y01</th>      <th>Y02</th>      <th>Y03</th>      <th>Y04</th>      <th>Y05</th>      <th>Y06</th>      <th>Y07</th>      <th>Y08</th>      <th>Y09</th>      <th>Y10</th>      <th>Y11</th>      <th>Y12</th>      <th>Y13</th>      <th>Y14</th>      <th>Y15</th>      <th>Y16</th>      <th>Y17</th>      <th>hour</th>      <th>Y18</th>    </tr>  </thead>  <tbody>    <tr>      <td>4320</td>      <td>21.36</td>      <td>21.83</td>      <td>21.58</td>      <td>25.63</td>      <td>25.70</td>      <td>20.22</td>      <td>18.43</td>      <td>18.44</td>      <td>20.46</td>      <td>19.21</td>      <td>20.82</td>      <td>19.03</td>      <td>18.23</td>      <td>19.66</td>      <td>20.33</td>      <td>19.40</td>      <td>18.74</td>      <td>19.58</td>      <td>0</td>      <td>20.5</td>    </tr>    <tr>      <td>4321</td>      <td>21.25</td>      <td>21.55</td>      <td>21.42</td>      <td>25.49</td>      <td>25.52</td>      <td>19.86</td>      <td>18.65</td>      <td>19.08</td>      <td>19.56</td>      <td>18.63</td>      <td>19.94</td>      <td>18.60</td>      <td>18.58</td>      <td>19.08</td>      <td>19.07</td>      <td>18.95</td>      <td>18.63</td>      <td>18.57</td>      <td>0</td>      <td>20.5</td>    </tr>    <tr>      <td>4322</td>      <td>21.09</td>      <td>21.57</td>      <td>21.38</td>      <td>25.48</td>      <td>25.47</td>      <td>20.11</td>      <td>18.50</td>      <td>18.90</td>      <td>19.49</td>      <td>18.35</td>      <td>20.01</td>      <td>18.53</td>      <td>18.58</td>      <td>18.87</td>      <td>18.58</td>      <td>18.74</td>      <td>18.52</td>      <td>18.37</td>      <td>0</td>      <td>20.5</td>    </tr>    <tr>      <td>4323</td>      <td>21.03</td>      <td>21.35</td>      <td>21.30</td>      <td>25.24</td>      <td>25.24</td>      <td>20.02</td>      <td>18.72</td>      <td>19.42</td>      <td>19.72</td>      <td>18.45</td>      <td>19.85</td>      <td>18.48</td>      <td>18.69</td>      <td>18.87</td>      <td>18.80</td>      <td>18.78</td>      <td>18.57</td>      <td>18.78</td>      <td>0</td>      <td>20.5</td>    </tr>    <tr>      <td>4324</td>      <td>21.02</td>      <td>21.42</td>      <td>21.37</td>      <td>25.25</td>      <td>25.24</td>      <td>19.95</td>      <td>18.67</td>      <td>19.29</td>      <td>19.72</td>      <td>18.49</td>      <td>19.92</td>      <td>18.49</td>      <td>18.63</td>      <td>18.79</td>      <td>18.74</td>      <td>18.72</td>      <td>18.60</td>      <td>18.75</td>      <td>0</td>      <td>20.5</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4747</td>      <td>22.56</td>      <td>22.25</td>      <td>22.03</td>      <td>27.11</td>      <td>27.18</td>      <td>19.51</td>      <td>17.86</td>      <td>18.67</td>      <td>18.71</td>      <td>17.77</td>      <td>19.15</td>      <td>17.62</td>      <td>18.96</td>      <td>19.37</td>      <td>19.84</td>      <td>19.04</td>      <td>17.95</td>      <td>17.98</td>      <td>23</td>      <td>21.5</td>    </tr>    <tr>      <td>4748</td>      <td>22.44</td>      <td>21.99</td>      <td>21.86</td>      <td>27.09</td>      <td>27.14</td>      <td>19.39</td>      <td>17.81</td>      <td>18.59</td>      <td>18.73</td>      <td>17.91</td>      <td>19.29</td>      <td>17.78</td>      <td>18.77</td>      <td>19.34</td>      <td>19.96</td>      <td>19.08</td>      <td>17.98</td>      <td>18.20</td>      <td>23</td>      <td>21.5</td>    </tr>    <tr>      <td>4749</td>      <td>22.21</td>      <td>22.06</td>      <td>21.73</td>      <td>27.02</td>      <td>27.07</td>      <td>19.28</td>      <td>17.76</td>      <td>18.41</td>      <td>18.45</td>      <td>17.91</td>      <td>19.85</td>      <td>17.58</td>      <td>18.65</td>      <td>19.27</td>      <td>19.91</td>      <td>19.07</td>      <td>17.88</td>      <td>18.21</td>      <td>23</td>      <td>21.5</td>    </tr>    <tr>      <td>4750</td>      <td>22.13</td>      <td>21.82</td>      <td>21.50</td>      <td>26.94</td>      <td>26.95</td>      <td>19.29</td>      <td>17.75</td>      <td>18.50</td>      <td>18.41</td>      <td>17.53</td>      <td>19.29</td>      <td>17.32</td>      <td>18.76</td>      <td>19.20</td>      <td>19.73</td>      <td>18.80</td>      <td>17.84</td>      <td>17.78</td>      <td>23</td>      <td>21.5</td>    </tr>    <tr>      <td>4751</td>      <td>22.02</td>      <td>21.43</td>      <td>21.34</td>      <td>26.84</td>      <td>26.84</td>      <td>18.73</td>      <td>17.81</td>      <td>18.89</td>      <td>17.68</td>      <td>17.39</td>      <td>19.14</td>      <td>17.21</td>      <td>18.71</td>      <td>18.74</td>      <td>18.81</td>      <td>18.68</td>      <td>17.69</td>      <td>17.44</td>      <td>23</td>      <td>21.0</td>    </tr>  </tbody></table><p>432 rows × 20 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">b = list(Y_pred.columns)</span><br><span class="line">b.remove(<span class="string">'Y18'</span>)</span><br><span class="line">b.remove(<span class="string">'hour'</span>)</span><br><span class="line">b = [<span class="string">'scale(&#123;&#125;)'</span>.format(x) <span class="keyword">for</span> x <span class="keyword">in</span> b]</span><br><span class="line"><span class="string">'+'</span>.join(b)</span><br></pre></td></tr></table></figure><pre><code>&apos;scale(Y00)+scale(Y01)+scale(Y02)+scale(Y03)+scale(Y04)+scale(Y05)+scale(Y06)+scale(Y07)+scale(Y08)+scale(Y09)+scale(Y10)+scale(Y11)+scale(Y12)+scale(Y13)+scale(Y14)+scale(Y15)+scale(Y16)+scale(Y17)&apos;</code></pre><blockquote><h2 id="Y00-Y17로-Y18-예측-모델-만들기"><a href="#Y00-Y17로-Y18-예측-모델-만들기" class="headerlink" title="Y00 ~ Y17로 Y18 예측 모델 만들기"></a>Y00 ~ Y17로 Y18 예측 모델 만들기</h2></blockquote><ul><li>스케일링, formula</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model20 = sm.OLS.from_formula(<span class="string">"Y18 ~ 1 +"</span> + <span class="string">'+'</span>.join(b), Y_pred)</span><br><span class="line">result20 = model20.fit()</span><br><span class="line">print(result20.summary())</span><br></pre></td></tr></table></figure><pre><code>                            OLS Regression Results                            ==============================================================================Dep. Variable:                    Y18   R-squared:                       0.956Model:                            OLS   Adj. R-squared:                  0.954Method:                 Least Squares   F-statistic:                     495.8Date:                Mon, 13 Apr 2020   Prob (F-statistic):          1.52e-266Time:                        15:30:41   Log-Likelihood:                -733.14No. Observations:                 432   AIC:                             1504.Df Residuals:                     413   BIC:                             1582.Df Model:                          18                                         Covariance Type:            nonrobust                                         ==============================================================================                 coef    std err          t      P&gt;|t|      [0.025      0.975]------------------------------------------------------------------------------Intercept     26.6875      0.065    410.667      0.000      26.560      26.815scale(Y00)     0.6176      0.838      0.737      0.462      -1.030       2.266scale(Y01)     0.5445      3.285      0.166      0.868      -5.914       7.002scale(Y02)     2.6717      3.208      0.833      0.405      -3.635       8.978scale(Y03)    -0.0450      4.271     -0.011      0.992      -8.440       8.350scale(Y04)    -0.0445      4.078     -0.011      0.991      -8.060       7.971scale(Y05)    -1.5686      0.463     -3.388      0.001      -2.479      -0.658scale(Y06)     2.3657      1.095      2.160      0.031       0.213       4.518scale(Y07)    -4.3842      0.590     -7.429      0.000      -5.544      -3.224scale(Y08)    -6.4418      0.869     -7.411      0.000      -8.151      -4.733scale(Y09)   -20.4360      2.400     -8.517      0.000     -25.153     -15.719scale(Y10)    -5.2662      1.781     -2.957      0.003      -8.767      -1.765scale(Y11)    14.8776      1.777      8.370      0.000      11.384      18.372scale(Y12)     3.4542      1.059      3.262      0.001       1.373       5.536scale(Y13)     5.8498      1.715      3.411      0.001       2.479       9.221scale(Y14)    -2.1079      0.742     -2.843      0.005      -3.566      -0.650scale(Y15)     2.3095      0.881      2.622      0.009       0.578       4.041scale(Y16)     2.0766      1.413      1.470      0.142      -0.700       4.854scale(Y17)    11.3015      1.191      9.493      0.000       8.961      13.642==============================================================================Omnibus:                       52.523   Durbin-Watson:                   0.502Prob(Omnibus):                  0.000   Jarque-Bera (JB):              140.165Skew:                          -0.589   Prob(JB):                     3.66e-31Kurtosis:                       5.530   Cond. No.                         372.==============================================================================Warnings:[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">N = len(Y_pred)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = Y_pred.iloc[idx_train]</span><br><span class="line">dfX_test = Y_pred.iloc[idx_test]</span><br></pre></td></tr></table></figure><blockquote><h2 id="Y18-모델-KFold-검증"><a href="#Y18-모델-KFold-검증" class="headerlink" title="Y18 모델 KFold 검증"></a>Y18 모델 KFold 검증</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(kfold.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model20 = sm.OLS.from_formula(<span class="string">"Y18 ~ 1 +"</span> + <span class="string">'+'</span>.join(b), data=dfX_train)</span><br><span class="line">    result20 = model20.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result20.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y18 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y18 - df_test.Y18.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result20.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result20.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y18 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y18 - dfX_test.Y18.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br><span class="line">print(mean_squared_error(dfX_test.Y18, pred))</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.95404730, 검증 R2 = 0.95265858학습 R2 = 0.95404730, 검증 R2 = 0.93511920학습 R2 = 0.95404730, 검증 R2 = 0.96495716학습 R2 = 0.95404730, 검증 R2 = 0.96417472학습 R2 = 0.95404730, 검증 R2 = 0.942630160.95049006387971711.8285570780772598</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y18'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y18'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y18'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_92_0.png" class><blockquote><h2 id="accuracy-score와-mse가-좋게-나왔으나-이를-활용해-구한-전체-데이터로-예측모델을-만들-경우-성능이-좋지-못함"><a href="#accuracy-score와-mse가-좋게-나왔으나-이를-활용해-구한-전체-데이터로-예측모델을-만들-경우-성능이-좋지-못함" class="headerlink" title="accuracy_score와 mse가 좋게 나왔으나, 이를 활용해 구한 전체 데이터로 예측모델을 만들 경우 성능이 좋지 못함"></a>accuracy_score와 mse가 좋게 나왔으나, 이를 활용해 구한 전체 데이터로 예측모델을 만들 경우 성능이 좋지 못함</h2></blockquote><blockquote><h2 id="다른-방법이-필요-Lasso-Ridge-EN"><a href="#다른-방법이-필요-Lasso-Ridge-EN" class="headerlink" title="다른 방법이 필요(Lasso, Ridge, EN)"></a>다른 방법이 필요(Lasso, Ridge, EN)</h2></blockquote><ul><li>Ridge, Lasso, EN 정규화를 모두 사용했을 때 Lasso가 가장 좋은 성능을 가짐</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Lasso</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line"></span><br><span class="line">X = Y_pred.drop(columns=[<span class="string">'Y18'</span>])</span><br><span class="line">y = Y_pred[<span class="string">'Y18'</span>]</span><br><span class="line"></span><br><span class="line">alphas = np.logspace(<span class="number">-4</span>, <span class="number">0</span>, <span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">train_scores = []</span><br><span class="line">test_scores = []   </span><br><span class="line"><span class="keyword">for</span> alpha <span class="keyword">in</span> alphas:</span><br><span class="line">    model = Lasso(alpha=alpha)</span><br><span class="line">    train_score = -mean_squared_error(y, model.fit(X, y).predict(X))</span><br><span class="line">    test_score = np.mean(cross_val_score(model, X, y, scoring=<span class="string">"neg_mean_squared_error"</span>, cv=<span class="number">5</span>))</span><br><span class="line">    train_scores.append(train_score)</span><br><span class="line">    test_scores.append(test_score)</span><br><span class="line"></span><br><span class="line">optimal_alpha = alphas[np.argmax(test_scores)]</span><br><span class="line">optimal_score = np.max(test_scores)</span><br><span class="line">print(optimal_alpha)</span><br><span class="line"></span><br><span class="line">plt.plot(alphas, test_scores, <span class="string">"-"</span>, label=<span class="string">"검증 성능"</span>)</span><br><span class="line">plt.plot(alphas, train_scores, <span class="string">"--"</span>, label=<span class="string">"학습 성능"</span>)</span><br><span class="line">plt.axhline(optimal_score, linestyle=<span class="string">':'</span>)</span><br><span class="line">plt.axvline(optimal_alpha, linestyle=<span class="string">':'</span>)</span><br><span class="line">plt.scatter(optimal_alpha, optimal_score)</span><br><span class="line">plt.title(<span class="string">"최적 정규화"</span>)</span><br><span class="line">plt.ylabel(<span class="string">'성능'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'정규화 가중치'</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/lasso.png" class><blockquote><h2 id="검증"><a href="#검증" class="headerlink" title="검증"></a>검증</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Lasso, Ridge</span><br><span class="line"></span><br><span class="line">X = dfX_train.drop(columns=[<span class="string">'Y18'</span>])</span><br><span class="line">y = dfX_train[<span class="string">'Y18'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> train_idx, test_idx <span class="keyword">in</span> kfold.split(X):</span><br><span class="line">    X_train, X_test = X.iloc[train_idx], X.iloc[test_idx]</span><br><span class="line">    y_train, y_test = y.iloc[train_idx], y.iloc[test_idx]</span><br><span class="line">    model18 = Lasso(<span class="number">0.172</span>)</span><br><span class="line">    model18.fit(X_train, y_train)</span><br><span class="line">    pred = model18.predict(X_test)</span><br><span class="line">    rss = ((y_test - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((y_test - y_test.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(model18.score(X_test, y_test), rsquared))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pred = model18.predict(dfX_test.drop(columns=[<span class="string">'Y18'</span>]))</span><br><span class="line">rss = ((dfX_test.Y18 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y18 - dfX_test.Y18.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br><span class="line">print(mean_squared_error(dfX_test.Y18, pred))</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.92285981, 검증 R2 = 0.92285981학습 R2 = 0.89027532, 검증 R2 = 0.89027532학습 R2 = 0.94315430, 검증 R2 = 0.94315430학습 R2 = 0.93493313, 검증 R2 = 0.93493313학습 R2 = 0.90241774, 검증 R2 = 0.902417740.91272931866311043.2231797205211716</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y18'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y18'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y18'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_99_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model18.fit(Y_pred.drop(columns=[<span class="string">'Y18'</span>]), Y_pred[<span class="string">'Y18'</span>])</span><br></pre></td></tr></table></figure><pre><code>Lasso(alpha=0.172, copy_X=True, fit_intercept=True, max_iter=1000,      normalize=False, positive=False, precompute=False, random_state=None,      selection=&apos;cyclic&apos;, tol=0.0001, warm_start=False)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c = sensor_name</span><br><span class="line">c.append(<span class="string">'hour'</span>)</span><br><span class="line">c</span><br></pre></td></tr></table></figure><pre><code>[&apos;Y00&apos;, &apos;Y01&apos;, &apos;Y02&apos;, &apos;Y03&apos;, &apos;Y04&apos;, &apos;Y05&apos;, &apos;Y06&apos;, &apos;Y07&apos;, &apos;Y08&apos;, &apos;Y09&apos;, &apos;Y10&apos;, &apos;Y11&apos;, &apos;Y12&apos;, &apos;Y13&apos;, &apos;Y14&apos;, &apos;Y15&apos;, &apos;Y16&apos;, &apos;Y17&apos;, &apos;hour&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result20.predict(df1[c]).round(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>0       11.301       13.292       10.723       12.324       11.70        ...  4315    22.284316    21.574317    19.644318    19.374319    18.30Length: 4320, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X_30s[<span class="string">'Y18'</span>] = result20.predict(df1[c]).round(<span class="number">2</span>)</span><br><span class="line">X_30s</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>X09</th>      <th>...</th>      <th>X32</th>      <th>X33</th>      <th>X34</th>      <th>X35</th>      <th>X36</th>      <th>X37</th>      <th>X38</th>      <th>X39</th>      <th>hour</th>      <th>Y18</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>9.7</td>      <td>988.8</td>      <td>1.2</td>      <td>0.6</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.2</td>      <td>1009.9</td>      <td>1009.8</td>      <td>...</td>      <td>10.7</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.2</td>      <td>62.6</td>      <td>0</td>      <td>0</td>      <td>11.30</td>    </tr>    <tr>      <td>1</td>      <td>9.3</td>      <td>988.9</td>      <td>1.7</td>      <td>1.9</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.1</td>      <td>1010.0</td>      <td>1009.9</td>      <td>...</td>      <td>10.3</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.3</td>      <td>63.5</td>      <td>0</td>      <td>0</td>      <td>13.29</td>    </tr>    <tr>      <td>2</td>      <td>9.4</td>      <td>989.0</td>      <td>1.1</td>      <td>2.3</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.1</td>      <td>1010.1</td>      <td>1010.1</td>      <td>...</td>      <td>9.7</td>      <td>1010.0</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.3</td>      <td>63.9</td>      <td>0</td>      <td>0</td>      <td>10.72</td>    </tr>    <tr>      <td>3</td>      <td>9.4</td>      <td>988.9</td>      <td>1.5</td>      <td>0.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.6</td>      <td>12.0</td>      <td>1010.0</td>      <td>1010.0</td>      <td>...</td>      <td>9.4</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.5</td>      <td>64.5</td>      <td>0</td>      <td>0</td>      <td>12.32</td>    </tr>    <tr>      <td>4</td>      <td>9.2</td>      <td>988.9</td>      <td>0.8</td>      <td>1.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.0</td>      <td>1010.1</td>      <td>1010.0</td>      <td>...</td>      <td>9.4</td>      <td>1010.1</td>      <td>0.00</td>      <td>1</td>      <td>0</td>      <td>78.0</td>      <td>65.0</td>      <td>0</td>      <td>0</td>      <td>11.70</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4315</td>      <td>19.5</td>      <td>987.8</td>      <td>1.7</td>      <td>0.4</td>      <td>0</td>      <td>1007.8</td>      <td>988.0</td>      <td>21.3</td>      <td>1007.8</td>      <td>1007.5</td>      <td>...</td>      <td>19.4</td>      <td>1008.2</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.3</td>      <td>74.3</td>      <td>0</td>      <td>23</td>      <td>22.28</td>    </tr>    <tr>      <td>4316</td>      <td>19.3</td>      <td>987.7</td>      <td>2.1</td>      <td>0.9</td>      <td>0</td>      <td>1007.8</td>      <td>988.1</td>      <td>21.3</td>      <td>1008.0</td>      <td>1007.4</td>      <td>...</td>      <td>18.5</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.4</td>      <td>74.8</td>      <td>0</td>      <td>23</td>      <td>21.57</td>    </tr>    <tr>      <td>4317</td>      <td>19.5</td>      <td>987.8</td>      <td>0.9</td>      <td>1.3</td>      <td>0</td>      <td>1007.8</td>      <td>988.3</td>      <td>21.2</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>19.1</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.8</td>      <td>75.4</td>      <td>0</td>      <td>23</td>      <td>19.64</td>    </tr>    <tr>      <td>4318</td>      <td>20.0</td>      <td>987.8</td>      <td>1.4</td>      <td>0.5</td>      <td>0</td>      <td>1007.8</td>      <td>988.3</td>      <td>21.1</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>19.0</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.8</td>      <td>75.8</td>      <td>0</td>      <td>23</td>      <td>19.37</td>    </tr>    <tr>      <td>4319</td>      <td>20.1</td>      <td>987.8</td>      <td>1.2</td>      <td>1.2</td>      <td>0</td>      <td>1007.8</td>      <td>988.2</td>      <td>20.9</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>18.5</td>      <td>1008.3</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>83.5</td>      <td>76.9</td>      <td>0</td>      <td>23</td>      <td>18.30</td>    </tr>  </tbody></table><p>4320 rows × 39 columns</p></div><blockquote><h2 id="이전-30일의-Y18-예측"><a href="#이전-30일의-Y18-예측" class="headerlink" title="이전 30일의 Y18 예측"></a>이전 30일의 Y18 예측</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X_30s[<span class="string">'Y18'</span>] = model18.predict(df1[c]).round(<span class="number">2</span>)</span><br><span class="line">X_30s</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>X09</th>      <th>...</th>      <th>X32</th>      <th>X33</th>      <th>X34</th>      <th>X35</th>      <th>X36</th>      <th>X37</th>      <th>X38</th>      <th>X39</th>      <th>hour</th>      <th>Y18</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>9.7</td>      <td>988.8</td>      <td>1.2</td>      <td>0.6</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.2</td>      <td>1009.9</td>      <td>1009.8</td>      <td>...</td>      <td>10.7</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.2</td>      <td>62.6</td>      <td>0</td>      <td>0</td>      <td>10.42</td>    </tr>    <tr>      <td>1</td>      <td>9.3</td>      <td>988.9</td>      <td>1.7</td>      <td>1.9</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.1</td>      <td>1010.0</td>      <td>1009.9</td>      <td>...</td>      <td>10.3</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.3</td>      <td>63.5</td>      <td>0</td>      <td>0</td>      <td>10.41</td>    </tr>    <tr>      <td>2</td>      <td>9.4</td>      <td>989.0</td>      <td>1.1</td>      <td>2.3</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.1</td>      <td>1010.1</td>      <td>1010.1</td>      <td>...</td>      <td>9.7</td>      <td>1010.0</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.3</td>      <td>63.9</td>      <td>0</td>      <td>0</td>      <td>9.81</td>    </tr>    <tr>      <td>3</td>      <td>9.4</td>      <td>988.9</td>      <td>1.5</td>      <td>0.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.6</td>      <td>12.0</td>      <td>1010.0</td>      <td>1010.0</td>      <td>...</td>      <td>9.4</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.5</td>      <td>64.5</td>      <td>0</td>      <td>0</td>      <td>9.94</td>    </tr>    <tr>      <td>4</td>      <td>9.2</td>      <td>988.9</td>      <td>0.8</td>      <td>1.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.0</td>      <td>1010.1</td>      <td>1010.0</td>      <td>...</td>      <td>9.4</td>      <td>1010.1</td>      <td>0.00</td>      <td>1</td>      <td>0</td>      <td>78.0</td>      <td>65.0</td>      <td>0</td>      <td>0</td>      <td>9.56</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4315</td>      <td>19.5</td>      <td>987.8</td>      <td>1.7</td>      <td>0.4</td>      <td>0</td>      <td>1007.8</td>      <td>988.0</td>      <td>21.3</td>      <td>1007.8</td>      <td>1007.5</td>      <td>...</td>      <td>19.4</td>      <td>1008.2</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.3</td>      <td>74.3</td>      <td>0</td>      <td>23</td>      <td>21.12</td>    </tr>    <tr>      <td>4316</td>      <td>19.3</td>      <td>987.7</td>      <td>2.1</td>      <td>0.9</td>      <td>0</td>      <td>1007.8</td>      <td>988.1</td>      <td>21.3</td>      <td>1008.0</td>      <td>1007.4</td>      <td>...</td>      <td>18.5</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.4</td>      <td>74.8</td>      <td>0</td>      <td>23</td>      <td>20.91</td>    </tr>    <tr>      <td>4317</td>      <td>19.5</td>      <td>987.8</td>      <td>0.9</td>      <td>1.3</td>      <td>0</td>      <td>1007.8</td>      <td>988.3</td>      <td>21.2</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>19.1</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.8</td>      <td>75.4</td>      <td>0</td>      <td>23</td>      <td>20.65</td>    </tr>    <tr>      <td>4318</td>      <td>20.0</td>      <td>987.8</td>      <td>1.4</td>      <td>0.5</td>      <td>0</td>      <td>1007.8</td>      <td>988.3</td>      <td>21.1</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>19.0</td>      <td>1008.4</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>82.8</td>      <td>75.8</td>      <td>0</td>      <td>23</td>      <td>20.66</td>    </tr>    <tr>      <td>4319</td>      <td>20.1</td>      <td>987.8</td>      <td>1.2</td>      <td>1.2</td>      <td>0</td>      <td>1007.8</td>      <td>988.2</td>      <td>20.9</td>      <td>1008.1</td>      <td>1007.5</td>      <td>...</td>      <td>18.5</td>      <td>1008.3</td>      <td>16.68</td>      <td>3</td>      <td>0</td>      <td>83.5</td>      <td>76.9</td>      <td>0</td>      <td>23</td>      <td>20.40</td>    </tr>  </tbody></table><p>4320 rows × 39 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X_3s[<span class="string">'Y18'</span>] = df2[<span class="string">'Y18'</span>]</span><br><span class="line">X_3s</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>X09</th>      <th>...</th>      <th>X32</th>      <th>X33</th>      <th>X34</th>      <th>X35</th>      <th>X36</th>      <th>X37</th>      <th>X38</th>      <th>X39</th>      <th>hour</th>      <th>Y18</th>    </tr>  </thead>  <tbody>    <tr>      <td>4320</td>      <td>19.3</td>      <td>987.7</td>      <td>0.9</td>      <td>2.2</td>      <td>0</td>      <td>1007.7</td>      <td>988.0</td>      <td>20.8</td>      <td>1007.8</td>      <td>1007.4</td>      <td>...</td>      <td>18.7</td>      <td>1008.3</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.0</td>      <td>77.6</td>      <td>0</td>      <td>0</td>      <td>20.5</td>    </tr>    <tr>      <td>4321</td>      <td>19.0</td>      <td>987.6</td>      <td>1.9</td>      <td>2.2</td>      <td>0</td>      <td>1007.7</td>      <td>988.0</td>      <td>20.6</td>      <td>1007.8</td>      <td>1007.4</td>      <td>...</td>      <td>19.0</td>      <td>1008.3</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.4</td>      <td>79.2</td>      <td>0</td>      <td>0</td>      <td>20.5</td>    </tr>    <tr>      <td>4322</td>      <td>19.1</td>      <td>987.6</td>      <td>2.0</td>      <td>1.4</td>      <td>0</td>      <td>1007.8</td>      <td>988.1</td>      <td>20.5</td>      <td>1007.9</td>      <td>1007.4</td>      <td>...</td>      <td>19.2</td>      <td>1008.3</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.9</td>      <td>79.9</td>      <td>0</td>      <td>0</td>      <td>20.5</td>    </tr>    <tr>      <td>4323</td>      <td>19.2</td>      <td>987.7</td>      <td>1.8</td>      <td>1.5</td>      <td>0</td>      <td>1007.9</td>      <td>988.1</td>      <td>20.5</td>      <td>1007.9</td>      <td>1007.5</td>      <td>...</td>      <td>19.3</td>      <td>1008.4</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.9</td>      <td>80.7</td>      <td>0</td>      <td>0</td>      <td>20.5</td>    </tr>    <tr>      <td>4324</td>      <td>19.2</td>      <td>987.8</td>      <td>1.4</td>      <td>1.4</td>      <td>0</td>      <td>1007.9</td>      <td>988.1</td>      <td>20.5</td>      <td>1007.8</td>      <td>1007.6</td>      <td>...</td>      <td>19.5</td>      <td>1008.4</td>      <td>0.00</td>      <td>3</td>      <td>0</td>      <td>84.9</td>      <td>80.9</td>      <td>0</td>      <td>0</td>      <td>20.5</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4747</td>      <td>19.9</td>      <td>987.6</td>      <td>0.9</td>      <td>0.8</td>      <td>0</td>      <td>1006.9</td>      <td>987.7</td>      <td>21.7</td>      <td>1007.5</td>      <td>1007.4</td>      <td>...</td>      <td>19.1</td>      <td>1007.5</td>      <td>22.16</td>      <td>2</td>      <td>0</td>      <td>82.3</td>      <td>58.6</td>      <td>1</td>      <td>23</td>      <td>21.5</td>    </tr>    <tr>      <td>4748</td>      <td>19.9</td>      <td>987.6</td>      <td>0.5</td>      <td>0.7</td>      <td>0</td>      <td>1006.8</td>      <td>987.7</td>      <td>21.6</td>      <td>1007.5</td>      <td>1007.4</td>      <td>...</td>      <td>19.2</td>      <td>1007.5</td>      <td>22.16</td>      <td>1</td>      <td>0</td>      <td>82.5</td>      <td>59.1</td>      <td>1</td>      <td>23</td>      <td>21.5</td>    </tr>    <tr>      <td>4749</td>      <td>19.7</td>      <td>987.7</td>      <td>0.9</td>      <td>0.6</td>      <td>0</td>      <td>1006.9</td>      <td>987.6</td>      <td>21.4</td>      <td>1007.4</td>      <td>1007.5</td>      <td>...</td>      <td>19.2</td>      <td>1007.5</td>      <td>22.16</td>      <td>2</td>      <td>0</td>      <td>83.0</td>      <td>58.9</td>      <td>1</td>      <td>23</td>      <td>21.5</td>    </tr>    <tr>      <td>4750</td>      <td>19.4</td>      <td>987.7</td>      <td>0.9</td>      <td>0.8</td>      <td>0</td>      <td>1006.9</td>      <td>987.8</td>      <td>21.3</td>      <td>1007.6</td>      <td>1007.5</td>      <td>...</td>      <td>19.3</td>      <td>1007.6</td>      <td>22.16</td>      <td>3</td>      <td>0</td>      <td>83.2</td>      <td>59.8</td>      <td>1</td>      <td>23</td>      <td>21.5</td>    </tr>    <tr>      <td>4751</td>      <td>19.1</td>      <td>987.6</td>      <td>1.0</td>      <td>0.3</td>      <td>0</td>      <td>1006.8</td>      <td>987.8</td>      <td>21.2</td>      <td>1007.5</td>      <td>1007.4</td>      <td>...</td>      <td>19.5</td>      <td>1007.7</td>      <td>22.16</td>      <td>1</td>      <td>0</td>      <td>84.0</td>      <td>59.5</td>      <td>1</td>      <td>23</td>      <td>21.0</td>    </tr>  </tbody></table><p>432 rows × 39 columns</p></div><blockquote><h2 id="전체-X데이터로-Y18-예측모델-만들기"><a href="#전체-X데이터로-Y18-예측모델-만들기" class="headerlink" title="전체 X데이터로 Y18 예측모델 만들기"></a>전체 X데이터로 Y18 예측모델 만들기</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">all_X = pd.concat([X_30s, X_3s])</span><br><span class="line">all_X</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>X09</th>      <th>...</th>      <th>X32</th>      <th>X33</th>      <th>X34</th>      <th>X35</th>      <th>X36</th>      <th>X37</th>      <th>X38</th>      <th>X39</th>      <th>hour</th>      <th>Y18</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>9.7</td>      <td>988.8</td>      <td>1.2</td>      <td>0.6</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.2</td>      <td>1009.9</td>      <td>1009.8</td>      <td>...</td>      <td>10.7</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.2</td>      <td>62.6</td>      <td>0</td>      <td>0</td>      <td>10.42</td>    </tr>    <tr>      <td>1</td>      <td>9.3</td>      <td>988.9</td>      <td>1.7</td>      <td>1.9</td>      <td>0</td>      <td>1009.3</td>      <td>989.6</td>      <td>12.1</td>      <td>1010.0</td>      <td>1009.9</td>      <td>...</td>      <td>10.3</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.3</td>      <td>63.5</td>      <td>0</td>      <td>0</td>      <td>10.41</td>    </tr>    <tr>      <td>2</td>      <td>9.4</td>      <td>989.0</td>      <td>1.1</td>      <td>2.3</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.1</td>      <td>1010.1</td>      <td>1010.1</td>      <td>...</td>      <td>9.7</td>      <td>1010.0</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.3</td>      <td>63.9</td>      <td>0</td>      <td>0</td>      <td>9.81</td>    </tr>    <tr>      <td>3</td>      <td>9.4</td>      <td>988.9</td>      <td>1.5</td>      <td>0.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.6</td>      <td>12.0</td>      <td>1010.0</td>      <td>1010.0</td>      <td>...</td>      <td>9.4</td>      <td>1010.1</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>77.5</td>      <td>64.5</td>      <td>0</td>      <td>0</td>      <td>9.94</td>    </tr>    <tr>      <td>4</td>      <td>9.2</td>      <td>988.9</td>      <td>0.8</td>      <td>1.7</td>      <td>0</td>      <td>1009.2</td>      <td>989.7</td>      <td>12.0</td>      <td>1010.1</td>      <td>1010.0</td>      <td>...</td>      <td>9.4</td>      <td>1010.1</td>      <td>0.00</td>      <td>1</td>      <td>0</td>      <td>78.0</td>      <td>65.0</td>      <td>0</td>      <td>0</td>      <td>9.56</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4747</td>      <td>19.9</td>      <td>987.6</td>      <td>0.9</td>      <td>0.8</td>      <td>0</td>      <td>1006.9</td>      <td>987.7</td>      <td>21.7</td>      <td>1007.5</td>      <td>1007.4</td>      <td>...</td>      <td>19.1</td>      <td>1007.5</td>      <td>22.16</td>      <td>2</td>      <td>0</td>      <td>82.3</td>      <td>58.6</td>      <td>1</td>      <td>23</td>      <td>21.50</td>    </tr>    <tr>      <td>4748</td>      <td>19.9</td>      <td>987.6</td>      <td>0.5</td>      <td>0.7</td>      <td>0</td>      <td>1006.8</td>      <td>987.7</td>      <td>21.6</td>      <td>1007.5</td>      <td>1007.4</td>      <td>...</td>      <td>19.2</td>      <td>1007.5</td>      <td>22.16</td>      <td>1</td>      <td>0</td>      <td>82.5</td>      <td>59.1</td>      <td>1</td>      <td>23</td>      <td>21.50</td>    </tr>    <tr>      <td>4749</td>      <td>19.7</td>      <td>987.7</td>      <td>0.9</td>      <td>0.6</td>      <td>0</td>      <td>1006.9</td>      <td>987.6</td>      <td>21.4</td>      <td>1007.4</td>      <td>1007.5</td>      <td>...</td>      <td>19.2</td>      <td>1007.5</td>      <td>22.16</td>      <td>2</td>      <td>0</td>      <td>83.0</td>      <td>58.9</td>      <td>1</td>      <td>23</td>      <td>21.50</td>    </tr>    <tr>      <td>4750</td>      <td>19.4</td>      <td>987.7</td>      <td>0.9</td>      <td>0.8</td>      <td>0</td>      <td>1006.9</td>      <td>987.8</td>      <td>21.3</td>      <td>1007.6</td>      <td>1007.5</td>      <td>...</td>      <td>19.3</td>      <td>1007.6</td>      <td>22.16</td>      <td>3</td>      <td>0</td>      <td>83.2</td>      <td>59.8</td>      <td>1</td>      <td>23</td>      <td>21.50</td>    </tr>    <tr>      <td>4751</td>      <td>19.1</td>      <td>987.6</td>      <td>1.0</td>      <td>0.3</td>      <td>0</td>      <td>1006.8</td>      <td>987.8</td>      <td>21.2</td>      <td>1007.5</td>      <td>1007.4</td>      <td>...</td>      <td>19.5</td>      <td>1007.7</td>      <td>22.16</td>      <td>1</td>      <td>0</td>      <td>84.0</td>      <td>59.5</td>      <td>1</td>      <td>23</td>      <td>21.00</td>    </tr>  </tbody></table><p>4752 rows × 39 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">N = len(all_X)</span><br><span class="line">ratio = <span class="number">0.7</span></span><br><span class="line">np.random.seed(<span class="number">0</span>)</span><br><span class="line">idx_train = np.random.choice(np.arange(N), np.int(ratio * N))</span><br><span class="line">idx_test = list(set(np.arange(N)).difference(idx_train))</span><br><span class="line"></span><br><span class="line">dfX_train = all_X.iloc[idx_train]</span><br><span class="line">dfX_test = all_X.iloc[idx_test]</span><br></pre></td></tr></table></figure><blockquote><h2 id="Y18-OLS-report"><a href="#Y18-OLS-report" class="headerlink" title="Y18 OLS report"></a>Y18 OLS report</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model18 = sm.OLS.from_formula(<span class="string">"Y18 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">result18 = model18.fit()</span><br><span class="line">print(result18.summary())</span><br></pre></td></tr></table></figure><pre><code>                            OLS Regression Results                            ==============================================================================Dep. Variable:                    Y18   R-squared:                       0.967Model:                            OLS   Adj. R-squared:                  0.966Method:                 Least Squares   F-statistic:                     1472.Date:                Sat, 18 Apr 2020   Prob (F-statistic):               0.00Time:                        02:27:53   Log-Likelihood:                -5817.7No. Observations:                3326   AIC:                         1.177e+04Df Residuals:                    3260   BIC:                         1.217e+04Df Model:                          65                                         Covariance Type:            nonrobust                                         =================================================================================                    coef    std err          t      P&gt;|t|      [0.025      0.975]---------------------------------------------------------------------------------Intercept        21.9494      0.179    122.879      0.000      21.599      22.300C(X04)[T.1]       0.5592      0.250      2.237      0.025       0.069       1.049C(X10)[T.1]       0.1419      0.281      0.506      0.613      -0.408       0.692C(X21)[T.1]       0.8674      0.278      3.124      0.002       0.323       1.412C(X36)[T.1]      -2.5134      0.264     -9.514      0.000      -3.031      -1.995C(X39)[T.1]      -0.2722      0.160     -1.699      0.089      -0.586       0.042C(X13)[T.1]       0.0005      0.081      0.006      0.996      -0.158       0.159C(X13)[T.2]      -0.0890      0.068     -1.306      0.192      -0.223       0.045C(X13)[T.3]       0.1095      0.090      1.214      0.225      -0.067       0.286C(X15)[T.1]      -0.3793      0.087     -4.366      0.000      -0.550      -0.209C(X15)[T.2]      -0.3496      0.081     -4.331      0.000      -0.508      -0.191C(X15)[T.3]      -0.1822      0.090     -2.031      0.042      -0.358      -0.006C(X17)[T.1]       0.1647      0.085      1.945      0.052      -0.001       0.331C(X17)[T.2]       0.1234      0.082      1.499      0.134      -0.038       0.285C(X17)[T.3]       0.0885      0.085      1.046      0.296      -0.077       0.255C(X25)[T.1]      -0.1689      0.108     -1.569      0.117      -0.380       0.042C(X25)[T.2]       0.0230      0.089      0.258      0.796      -0.152       0.198C(X25)[T.3]       0.1889      0.079      2.404      0.016       0.035       0.343C(X35)[T.1]       0.2490      0.098      2.532      0.011       0.056       0.442C(X35)[T.2]      -0.1920      0.085     -2.259      0.024      -0.359      -0.025C(X35)[T.3]       0.0621      0.087      0.714      0.475      -0.108       0.233C(hour)[T.1]     -0.0386      0.161     -0.240      0.810      -0.354       0.276C(hour)[T.2]      0.1490      0.167      0.892      0.373      -0.179       0.477C(hour)[T.3]      0.0931      0.167      0.559      0.576      -0.233       0.420C(hour)[T.4]      0.1347      0.170      0.791      0.429      -0.199       0.469C(hour)[T.5]      0.4355      0.172      2.530      0.011       0.098       0.773C(hour)[T.6]      1.1144      0.173      6.443      0.000       0.775       1.454C(hour)[T.7]      2.0508      0.177     11.578      0.000       1.703       2.398C(hour)[T.8]      2.6423      0.180     14.706      0.000       2.290       2.995C(hour)[T.9]      4.6882      0.190     24.630      0.000       4.315       5.061C(hour)[T.10]     5.9639      0.200     29.816      0.000       5.572       6.356C(hour)[T.11]     7.2187      0.213     33.969      0.000       6.802       7.635C(hour)[T.12]     8.1562      0.223     36.513      0.000       7.718       8.594C(hour)[T.13]     7.6495      0.235     32.535      0.000       7.189       8.111C(hour)[T.14]     4.8837      0.238     20.509      0.000       4.417       5.351C(hour)[T.15]     1.9181      0.251      7.651      0.000       1.427       2.410C(hour)[T.16]     0.8868      0.255      3.475      0.001       0.386       1.387C(hour)[T.17]     1.9417      0.260      7.473      0.000       1.432       2.451C(hour)[T.18]     0.8412      0.268      3.144      0.002       0.317       1.366C(hour)[T.19]     0.7748      0.270      2.869      0.004       0.245       1.304C(hour)[T.20]     0.6640      0.271      2.453      0.014       0.133       1.195C(hour)[T.21]     0.6215      0.277      2.241      0.025       0.078       1.165C(hour)[T.22]     0.4593      0.274      1.674      0.094      -0.079       0.997C(hour)[T.23]     0.5301      0.283      1.876      0.061      -0.024       1.084scale(X00)        0.8557      0.184      4.663      0.000       0.496       1.216scale(X07)        2.9758      0.237     12.559      0.000       2.511       3.440scale(X28)       -1.0887      0.219     -4.964      0.000      -1.519      -0.659scale(X31)        2.3334      0.215     10.876      0.000       1.913       2.754scale(X32)        0.3004      0.212      1.419      0.156      -0.115       0.715scale(X01)        1.4245      0.554      2.570      0.010       0.338       2.511scale(X06)       -5.1961      0.586     -8.865      0.000      -6.345      -4.047scale(X22)        0.9602      0.597      1.609      0.108      -0.210       2.130scale(X27)        1.9049      0.440      4.329      0.000       1.042       2.768scale(X29)        0.8797      0.792      1.110      0.267      -0.674       2.433scale(X12)       -0.0224      0.154     -0.145      0.884      -0.325       0.280scale(X20)       -0.1559      0.124     -1.257      0.209      -0.399       0.087scale(X30)       -0.3912      0.138     -2.831      0.005      -0.662      -0.120scale(X37)        0.2628      0.125      2.097      0.036       0.017       0.509scale(X38)       -0.6327      0.115     -5.501      0.000      -0.858      -0.407scale(X11)       -1.1408      0.304     -3.750      0.000      -1.737      -0.544scale(X34)        0.8955      0.312      2.870      0.004       0.284       1.507scale(X02)        0.1300      0.033      3.974      0.000       0.066       0.194scale(X03)       -0.1836      0.033     -5.512      0.000      -0.249      -0.118scale(X18)        0.0055      0.040      0.136      0.892      -0.073       0.084scale(X24)       -0.1218      0.045     -2.734      0.006      -0.209      -0.034scale(X26)       -0.1876      0.043     -4.407      0.000      -0.271      -0.104==============================================================================Omnibus:                      188.844   Durbin-Watson:                   2.019Prob(Omnibus):                  0.000   Jarque-Bera (JB):              516.990Skew:                          -0.293   Prob(JB):                    5.46e-113Kurtosis:                       4.841   Cond. No.                         128.==============================================================================Warnings:[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">scores = np.zeros(<span class="number">5</span>)</span><br><span class="line">cv = KFold(<span class="number">5</span>, shuffle=<span class="literal">True</span>, random_state=<span class="number">13</span>)</span><br><span class="line"><span class="keyword">for</span> i, (idx_train, idx_test) <span class="keyword">in</span> enumerate(cv.split(dfX_train)):</span><br><span class="line">    df_train = dfX_train.iloc[idx_train]</span><br><span class="line">    df_test = dfX_train.iloc[idx_test]</span><br><span class="line">    </span><br><span class="line">    model18 = sm.OLS.from_formula(<span class="string">"Y18 ~ 1 +"</span> + a, data=dfX_train)</span><br><span class="line">    result18 = model18.fit()</span><br><span class="line">    </span><br><span class="line">    pred = result18.predict(df_test)</span><br><span class="line">    rss = ((df_test.Y18 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((df_test.Y18 - df_test.Y18.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    scores[i] = rsquared</span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(result18.rsquared, rsquared))</span><br><span class="line"></span><br><span class="line">pred = result18.predict(dfX_test)</span><br><span class="line">rss = ((dfX_test.Y18 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y18 - dfX_test.Y18.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br><span class="line">print(mean_squared_error(dfX_test.Y18, pred))</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.96704763, 검증 R2 = 0.96344232학습 R2 = 0.96704763, 검증 R2 = 0.96605570학습 R2 = 0.96704763, 검증 R2 = 0.96840262학습 R2 = 0.96704763, 검증 R2 = 0.96691297학습 R2 = 0.96704763, 검증 R2 = 0.969681240.96437086714814411.9913783582763236</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y18'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y18'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y18'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_113_0.png" class><blockquote><h2 id="테스트-결과는"><a href="#테스트-결과는" class="headerlink" title="테스트 결과는?"></a>테스트 결과는?</h2></blockquote><img src="/2020/04/18/final_blog/formula.png" class><blockquote><h2 id="Lasso는-어떨까"><a href="#Lasso는-어떨까" class="headerlink" title="Lasso는 어떨까?"></a>Lasso는 어떨까?</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Lasso</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line"></span><br><span class="line">X = all_X.drop(columns=[<span class="string">'Y18'</span>])</span><br><span class="line">y = all_X[<span class="string">'Y18'</span>]</span><br><span class="line"></span><br><span class="line">alphas = np.logspace(<span class="number">-4</span>, <span class="number">0</span>, <span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">train_scores = []</span><br><span class="line">test_scores = []</span><br><span class="line"><span class="keyword">for</span> alpha <span class="keyword">in</span> alphas:</span><br><span class="line">    model = Lasso(alpha=alpha)</span><br><span class="line">    train_score = -mean_squared_error(y, model.fit(X, y).predict(X))</span><br><span class="line">    test_score = np.mean(cross_val_score(model, X, y, scoring=<span class="string">"neg_mean_squared_error"</span>, cv=<span class="number">5</span>))</span><br><span class="line">    train_scores.append(train_score)</span><br><span class="line">    test_scores.append(test_score)</span><br><span class="line"></span><br><span class="line">optimal_alpha = alphas[np.argmax(test_scores)]</span><br><span class="line">optimal_score = np.max(test_scores)</span><br><span class="line">print(optimal_alpha)</span><br><span class="line"></span><br><span class="line">plt.plot(alphas, test_scores, <span class="string">"-"</span>, label=<span class="string">"검증 성능"</span>)</span><br><span class="line">plt.plot(alphas, train_scores, <span class="string">"--"</span>, label=<span class="string">"학습 성능"</span>)</span><br><span class="line">plt.axhline(optimal_score, linestyle=<span class="string">':'</span>)</span><br><span class="line">plt.axvline(optimal_alpha, linestyle=<span class="string">':'</span>)</span><br><span class="line">plt.scatter(optimal_alpha, optimal_score)</span><br><span class="line">plt.title(<span class="string">"최적 정규화"</span>)</span><br><span class="line">plt.ylabel(<span class="string">'성능'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'정규화 가중치'</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>0.01289890261253308</code></pre>{% asset_img final_blog_116_1.png %}<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">X = dfX_train.drop(columns=[<span class="string">'Y18'</span>])</span><br><span class="line">y = dfX_train[<span class="string">'Y18'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> train_idx, test_idx <span class="keyword">in</span> kfold.split(X):</span><br><span class="line">    X_train, X_test = X.iloc[train_idx], X.iloc[test_idx]</span><br><span class="line">    y_train, y_test = y.iloc[train_idx], y.iloc[test_idx]</span><br><span class="line">    model18 = Lasso(<span class="number">0.012</span>)</span><br><span class="line">    model18.fit(X_train, y_train)</span><br><span class="line">    pred = model18.predict(X_test)</span><br><span class="line">    rss = ((y_test - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">    tss = ((y_test - y_test.mean())** <span class="number">2</span>).sum()</span><br><span class="line">    rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"학습 R2 = &#123;:.8f&#125;, 검증 R2 = &#123;:.8f&#125;"</span>.format(model18.score(X_test, y_test), rsquared))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pred = model18.predict(dfX_test.drop(columns=[<span class="string">'Y18'</span>]))</span><br><span class="line">rss = ((dfX_test.Y18 - pred) ** <span class="number">2</span>).sum()</span><br><span class="line">tss = ((dfX_test.Y18 - dfX_test.Y18.mean())** <span class="number">2</span>).sum()</span><br><span class="line">rsquared = <span class="number">1</span> - rss / tss</span><br><span class="line">print(rsquared)</span><br><span class="line">print(mean_squared_error(dfX_test.Y18, pred))</span><br></pre></td></tr></table></figure><pre><code>학습 R2 = 0.92249209, 검증 R2 = 0.92249209학습 R2 = 0.91956967, 검증 R2 = 0.91956967학습 R2 = 0.92019706, 검증 R2 = 0.92019706학습 R2 = 0.92395915, 검증 R2 = 0.92395915학습 R2 = 0.92177100, 검증 R2 = 0.921771000.92465315529683364.2112749847201885</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">15</span>))</span><br><span class="line">plt.scatter(dfX_test[<span class="string">'Y18'</span>], pred)</span><br><span class="line">plt.plot([<span class="number">0</span>, dfX_test[<span class="string">'Y18'</span>].max()], [<span class="number">0</span>, dfX_test[<span class="string">'Y18'</span>].max()], <span class="string">"r"</span>, lw=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"y_test"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y_predict"</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">plt.axis(<span class="string">"equal"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/04/18/final_blog/final_blog_118_0.png" class><blockquote><h2 id="테스트-결과는-1"><a href="#테스트-결과는-1" class="headerlink" title="테스트 결과는?"></a>테스트 결과는?</h2></blockquote><ul><li>OLS 보다 더 안좋게 나왔다.</li></ul><img src="/2020/04/18/final_blog/lasso_.png" class><blockquote><h2 id="시도해-본-모델들"><a href="#시도해-본-모델들" class="headerlink" title="시도해 본 모델들"></a>시도해 본 모델들</h2></blockquote><ul><li><strong>각 측정영역 별 평균 모델(잘못된 방법)</strong><ul><li>MSE : 4.60</li></ul></li><li><strong>OLS 모델</strong><ul><li>MSE : 5.46</li></ul></li><li><strong>Lasso 모델</strong><ul><li>MSE : 6.75</li></ul></li><li><strong>OLS + Lasso + OLS 모델</strong><ul><li>MSE : 3.99</li></ul></li><li><strong>OLS + Lasso + Lasso 모델</strong><ul><li>MSE = 5.30</li></ul></li></ul><blockquote><h2 id="성능의-향상을-위해-머신러닝-기법-적용"><a href="#성능의-향상을-위해-머신러닝-기법-적용" class="headerlink" title="+ 성능의 향상을 위해! 머신러닝 기법 적용"></a>+ 성능의 향상을 위해! 머신러닝 기법 적용</h2></blockquote><ul><li>LGBM, RandomForestRegressor<ul><li>RandomForestRegressor 성능이 제일 좋았음</li></ul></li></ul><blockquote><h2 id="RandomForestRegressor"><a href="#RandomForestRegressor" class="headerlink" title="RandomForestRegressor"></a>RandomForestRegressor</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">X = all_X.drop([<span class="string">'Y18'</span>], axis=<span class="number">1</span>)</span><br><span class="line">y = all_X[<span class="string">'Y18'</span>]</span><br><span class="line"></span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>, random_state=<span class="number">13</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rf_reg = RandomForestRegressor(random_state=<span class="number">13</span>, n_jobs=<span class="number">-1</span>, bootstrap=<span class="literal">False</span>, criterion=<span class="string">'mse'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># def MSE(y_true,y_pred):</span></span><br><span class="line"><span class="comment">#     mse = mean_squared_error(y_true, y_pred)</span></span><br><span class="line"><span class="comment">#     print('MSE: %2.3f' % mse)</span></span><br><span class="line"><span class="comment">#     return mse</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># params = &#123;</span></span><br><span class="line"><span class="comment">#     'max_depth' : [6, 8, 10, 12, 16, 20, 24],</span></span><br><span class="line"><span class="comment">#     'n_estimators': [50, 100, 150, 200],</span></span><br><span class="line"><span class="comment">#     'min_samples_leaf': [8, 12],</span></span><br><span class="line"><span class="comment">#     'min_samples_split': [8, 12]</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># grid_cv = GridSearchCV(rf_reg, param_grid=params, cv=5, scoring=make_scorer(MSE, greater_is_better=False), return_train_score=True, n_jobs=-1)</span></span><br><span class="line"><span class="comment"># grid_cv.fit(X_train, y_train)</span></span><br></pre></td></tr></table></figure><pre><code>GridSearchCV(cv=5, error_score=nan,             estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0,                                             criterion=&apos;mse&apos;, max_depth=None,                                             max_features=&apos;auto&apos;,                                             max_leaf_nodes=None,                                             max_samples=None,                                             min_impurity_decrease=0.0,                                             min_impurity_split=None,                                             min_samples_leaf=1,                                             min_samples_split=2,                                             min_weight_fraction_leaf=0.0,                                             n_estimators=100, n_jobs=-1,                                             oob_score=False, random_state=13,                                             verbose=0, warm_start=False),             iid=&apos;deprecated&apos;, n_jobs=-1,             param_grid={&apos;max_depth&apos;: [6, 8, 10, 12, 16, 20, 24],                         &apos;min_samples_leaf&apos;: [8, 12],                         &apos;min_samples_split&apos;: [8, 12],                         &apos;n_estimators&apos;: [50, 100, 150, 200]},             pre_dispatch=&apos;2*n_jobs&apos;, refit=True, return_train_score=True,             scoring=make_scorer(MSE, greater_is_better=False), verbose=0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">params = &#123;</span><br><span class="line">    <span class="string">'max_depth'</span> : [<span class="number">10</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">35</span>, <span class="number">40</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">55</span>, <span class="number">60</span>, <span class="number">70</span>],</span><br><span class="line">    <span class="string">'max_features'</span> : [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">35</span>, <span class="number">40</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">55</span>],</span><br><span class="line">    <span class="string">'n_estimators'</span>: [<span class="number">50</span>, <span class="number">100</span>, <span class="number">150</span>, <span class="number">200</span>],</span><br><span class="line">    <span class="string">'min_samples_leaf'</span>: [<span class="number">8</span>, <span class="number">12</span>],</span><br><span class="line">    <span class="string">'min_samples_split'</span>: [<span class="number">8</span>, <span class="number">12</span>],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">grid_cv = GridSearchCV(rf_reg, param_grid=params, cv=<span class="number">5</span>, return_train_score=<span class="literal">True</span>, n_jobs=<span class="number">-1</span>)</span><br><span class="line">grid_cv.fit(X_train, y_train)</span><br></pre></td></tr></table></figure><pre><code>GridSearchCV(cv=5, error_score=nan,             estimator=RandomForestRegressor(bootstrap=False, ccp_alpha=0.0,                                             criterion=&apos;mse&apos;, max_depth=None,                                             max_features=&apos;auto&apos;,                                             max_leaf_nodes=None,                                             max_samples=None,                                             min_impurity_decrease=0.0,                                             min_impurity_split=None,                                             min_samples_leaf=1,                                             min_samples_split=2,                                             min_weight_fraction_leaf=0.0,                                             n_estimators=100, n_jobs=-1,                                             oob_score=False, random_state=13,                                             verbose=0, warm_start=False),             iid=&apos;deprecated&apos;, n_jobs=-1,             param_grid={&apos;max_depth&apos;: [10, 15, 20, 25, 30, 35, 40, 45, 50, 55,                                       60, 70],                         &apos;max_features&apos;: [10, 20, 30, 35, 40, 45, 50, 55],                         &apos;min_samples_leaf&apos;: [8, 12],                         &apos;min_samples_split&apos;: [8, 12],                         &apos;n_estimators&apos;: [50, 100, 150, 200]},             pre_dispatch=&apos;2*n_jobs&apos;, refit=True, return_train_score=True,             scoring=None, verbose=0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cv_results_df = pd.DataFrame(grid_cv.cv_results_)</span><br><span class="line">cv_results_df.columns</span><br></pre></td></tr></table></figure><pre><code>Index([&apos;mean_fit_time&apos;, &apos;std_fit_time&apos;, &apos;mean_score_time&apos;, &apos;std_score_time&apos;,       &apos;param_max_depth&apos;, &apos;param_max_features&apos;, &apos;param_min_samples_leaf&apos;,       &apos;param_min_samples_split&apos;, &apos;param_n_estimators&apos;, &apos;params&apos;,       &apos;split0_test_score&apos;, &apos;split1_test_score&apos;, &apos;split2_test_score&apos;,       &apos;split3_test_score&apos;, &apos;split4_test_score&apos;, &apos;mean_test_score&apos;,       &apos;std_test_score&apos;, &apos;rank_test_score&apos;, &apos;split0_train_score&apos;,       &apos;split1_train_score&apos;, &apos;split2_train_score&apos;, &apos;split3_train_score&apos;,       &apos;split4_train_score&apos;, &apos;mean_train_score&apos;, &apos;std_train_score&apos;],      dtype=&apos;object&apos;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cols = [<span class="string">'rank_test_score'</span>, <span class="string">'mean_test_score'</span>, <span class="string">'param_n_estimators'</span>, <span class="string">'param_max_depth'</span>]</span><br><span class="line">cv_results_df[cols].sort_values(<span class="string">'rank_test_score'</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>rank_test_score</th>      <th>mean_test_score</th>      <th>param_n_estimators</th>      <th>param_max_depth</th>    </tr>  </thead>  <tbody>    <tr>      <td>1047</td>      <td>1</td>      <td>0.930728</td>      <td>200</td>      <td>50</td>    </tr>    <tr>      <td>1431</td>      <td>1</td>      <td>0.930728</td>      <td>200</td>      <td>70</td>    </tr>    <tr>      <td>919</td>      <td>1</td>      <td>0.930728</td>      <td>200</td>      <td>45</td>    </tr>    <tr>      <td>1303</td>      <td>1</td>      <td>0.930728</td>      <td>200</td>      <td>60</td>    </tr>    <tr>      <td>915</td>      <td>1</td>      <td>0.930728</td>      <td>200</td>      <td>45</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>730</td>      <td>1532</td>      <td>NaN</td>      <td>150</td>      <td>35</td>    </tr>    <tr>      <td>731</td>      <td>1533</td>      <td>NaN</td>      <td>200</td>      <td>35</td>    </tr>    <tr>      <td>732</td>      <td>1534</td>      <td>NaN</td>      <td>50</td>      <td>35</td>    </tr>    <tr>      <td>1022</td>      <td>1535</td>      <td>NaN</td>      <td>150</td>      <td>45</td>    </tr>    <tr>      <td>1535</td>      <td>1536</td>      <td>NaN</td>      <td>200</td>      <td>70</td>    </tr>  </tbody></table><p>1536 rows × 4 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid_cv.best_params_</span><br></pre></td></tr></table></figure><pre><code>{&apos;max_depth&apos;: 25, &apos;max_features&apos;: 20, &apos;min_samples_leaf&apos;: 8, &apos;min_samples_split&apos;: 8, &apos;n_estimators&apos;: 200}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid_cv.best_score_</span><br></pre></td></tr></table></figure><pre><code>0.9307276554332164</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rf_reg_best = grid_cv.best_estimator_</span><br><span class="line">rf_reg_best.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line">pred = rf_reg_best.predict(X_test)</span><br><span class="line"></span><br><span class="line">print(mean_squared_error(y_test, pred))</span><br></pre></td></tr></table></figure><pre><code>3.5975712904104613</code></pre><blockquote><h2 id="전체-모델-만들어-Test-데이터에-적용"><a href="#전체-모델-만들어-Test-데이터에-적용" class="headerlink" title="전체 모델 만들어 Test 데이터에 적용"></a>전체 모델 만들어 Test 데이터에 적용</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">params = &#123;</span><br><span class="line">    <span class="string">'max_depth'</span> : [<span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">16</span>, <span class="number">20</span>, <span class="number">24</span>],</span><br><span class="line">    <span class="string">'n_estimators'</span>: [<span class="number">50</span>, <span class="number">100</span>, <span class="number">150</span>, <span class="number">200</span>],</span><br><span class="line">    <span class="string">'min_samples_leaf'</span>: [<span class="number">8</span>, <span class="number">12</span>],</span><br><span class="line">    <span class="string">'min_samples_split'</span>: [<span class="number">8</span>, <span class="number">12</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">grid_cv = GridSearchCV(rf_reg, param_grid=params, cv=<span class="number">5</span>, return_train_score=<span class="literal">True</span>, n_jobs=<span class="number">-1</span>)</span><br><span class="line">grid_cv.fit(X, y)</span><br></pre></td></tr></table></figure><pre><code>GridSearchCV(cv=5, error_score=nan,             estimator=RandomForestRegressor(bootstrap=True, ccp_alpha=0.0,                                             criterion=&apos;mse&apos;, max_depth=None,                                             max_features=&apos;auto&apos;,                                             max_leaf_nodes=None,                                             max_samples=None,                                             min_impurity_decrease=0.0,                                             min_impurity_split=None,                                             min_samples_leaf=1,                                             min_samples_split=2,                                             min_weight_fraction_leaf=0.0,                                             n_estimators=100, n_jobs=-1,                                             oob_score=False, random_state=13,                                             verbose=0, warm_start=False),             iid=&apos;deprecated&apos;, n_jobs=-1,             param_grid={&apos;max_depth&apos;: [6, 8, 10, 12, 16, 20, 24],                         &apos;min_samples_leaf&apos;: [8, 12],                         &apos;min_samples_split&apos;: [8, 12],                         &apos;n_estimators&apos;: [50, 100, 150, 200]},             pre_dispatch=&apos;2*n_jobs&apos;, refit=True, return_train_score=True,             scoring=None, verbose=0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid_cv.best_params_</span><br></pre></td></tr></table></figure><pre><code>{&apos;max_depth&apos;: 16, &apos;min_samples_leaf&apos;: 8, &apos;min_samples_split&apos;: 8, &apos;n_estimators&apos;: 100}</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grid_cv.best_score_</span><br></pre></td></tr></table></figure><pre><code>0.9558424688563008</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cv_results_df = pd.DataFrame(grid_cv.cv_results_)</span><br><span class="line">cv_results_df.columns</span><br></pre></td></tr></table></figure><pre><code>Index([&apos;mean_fit_time&apos;, &apos;std_fit_time&apos;, &apos;mean_score_time&apos;, &apos;std_score_time&apos;,       &apos;param_max_depth&apos;, &apos;param_min_samples_leaf&apos;, &apos;param_min_samples_split&apos;,       &apos;param_n_estimators&apos;, &apos;params&apos;, &apos;split0_test_score&apos;,       &apos;split1_test_score&apos;, &apos;split2_test_score&apos;, &apos;split3_test_score&apos;,       &apos;split4_test_score&apos;, &apos;mean_test_score&apos;, &apos;std_test_score&apos;,       &apos;rank_test_score&apos;, &apos;split0_train_score&apos;, &apos;split1_train_score&apos;,       &apos;split2_train_score&apos;, &apos;split3_train_score&apos;, &apos;split4_train_score&apos;,       &apos;mean_train_score&apos;, &apos;std_train_score&apos;],      dtype=&apos;object&apos;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cols = [<span class="string">'rank_test_score'</span>, <span class="string">'mean_test_score'</span>, <span class="string">'param_n_estimators'</span>, <span class="string">'param_max_depth'</span>]</span><br><span class="line">cv_results_df[cols].sort_values(<span class="string">'rank_test_score'</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>rank_test_score</th>      <th>mean_test_score</th>      <th>param_n_estimators</th>      <th>param_max_depth</th>    </tr>  </thead>  <tbody>    <tr>      <td>65</td>      <td>1</td>      <td>0.955842</td>      <td>100</td>      <td>16</td>    </tr>    <tr>      <td>69</td>      <td>1</td>      <td>0.955842</td>      <td>100</td>      <td>16</td>    </tr>    <tr>      <td>81</td>      <td>3</td>      <td>0.955842</td>      <td>100</td>      <td>20</td>    </tr>    <tr>      <td>101</td>      <td>3</td>      <td>0.955842</td>      <td>100</td>      <td>24</td>    </tr>    <tr>      <td>85</td>      <td>3</td>      <td>0.955842</td>      <td>100</td>      <td>20</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>11</td>      <td>107</td>      <td>0.947681</td>      <td>200</td>      <td>6</td>    </tr>    <tr>      <td>8</td>      <td>109</td>      <td>0.947502</td>      <td>50</td>      <td>6</td>    </tr>    <tr>      <td>12</td>      <td>109</td>      <td>0.947502</td>      <td>50</td>      <td>6</td>    </tr>    <tr>      <td>4</td>      <td>111</td>      <td>0.947374</td>      <td>50</td>      <td>6</td>    </tr>    <tr>      <td>0</td>      <td>111</td>      <td>0.947374</td>      <td>50</td>      <td>6</td>    </tr>  </tbody></table><p>112 rows × 4 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rf_reg_best = grid_cv.best_estimator_</span><br><span class="line">rf_reg_best.fit(X, y)</span><br></pre></td></tr></table></figure><pre><code>RandomForestRegressor(bootstrap=False, ccp_alpha=0.0, criterion=&apos;mse&apos;,                      max_depth=25, max_features=20, max_leaf_nodes=None,                      max_samples=None, min_impurity_decrease=0.0,                      min_impurity_split=None, min_samples_leaf=8,                      min_samples_split=8, min_weight_fraction_leaf=0.0,                      n_estimators=200, n_jobs=-1, oob_score=False,                      random_state=13, verbose=0, warm_start=False)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test = pd.read_csv(<span class="string">'datas/test.csv'</span>, encoding=<span class="string">'utf-8'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hour= pd.Series((test.index%<span class="number">144</span>/<span class="number">6</span>).astype(int))</span><br><span class="line">test[<span class="string">'hour'</span>] = list(hour)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test1 = test.drop(columns=[<span class="string">'X14'</span>, <span class="string">'X16'</span>, <span class="string">'X19'</span>, <span class="string">'id'</span>], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> direction_name:</span><br><span class="line">    test1[x] = test1[x].apply(<span class="keyword">lambda</span> x: <span class="number">0</span> <span class="keyword">if</span> x &lt; <span class="number">90</span> <span class="keyword">else</span> <span class="number">1</span> <span class="keyword">if</span> x &lt; <span class="number">180</span> <span class="keyword">else</span> <span class="number">2</span> <span class="keyword">if</span> x &lt; <span class="number">270</span> <span class="keyword">else</span> <span class="number">3</span>)</span><br><span class="line"><span class="comment"># 북동 : 0 / 남동 : 1 / 남서 : 2 / 북서 : 3</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> water_name:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(x)):</span><br><span class="line">        test1[x].loc[i] = test1[x].loc[i] - test1[x].loc[i<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> water_name:</span><br><span class="line">    test1[x] = test1[x].apply(<span class="keyword">lambda</span> x: <span class="number">0</span> <span class="keyword">if</span> x == <span class="number">0</span>  <span class="keyword">else</span> <span class="number">1</span>)</span><br></pre></td></tr></table></figure><blockquote><h2 id="TEST-데이터"><a href="#TEST-데이터" class="headerlink" title="TEST 데이터"></a>TEST 데이터</h2></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>X00</th>      <th>X01</th>      <th>X02</th>      <th>X03</th>      <th>X04</th>      <th>X05</th>      <th>X06</th>      <th>X07</th>      <th>X08</th>      <th>X09</th>      <th>...</th>      <th>X31</th>      <th>X32</th>      <th>X33</th>      <th>X34</th>      <th>X35</th>      <th>X36</th>      <th>X37</th>      <th>X38</th>      <th>X39</th>      <th>hour</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>18.7</td>      <td>987.4</td>      <td>1.5</td>      <td>1.3</td>      <td>0</td>      <td>1006.8</td>      <td>987.7</td>      <td>21.1</td>      <td>1007.5</td>      <td>1007.2</td>      <td>...</td>      <td>17.5</td>      <td>19.2</td>      <td>1007.6</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>84.0</td>      <td>59.9</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>1</td>      <td>18.8</td>      <td>987.4</td>      <td>1.1</td>      <td>1.2</td>      <td>0</td>      <td>1006.7</td>      <td>987.7</td>      <td>21.2</td>      <td>1007.5</td>      <td>1007.2</td>      <td>...</td>      <td>17.4</td>      <td>19.1</td>      <td>1007.5</td>      <td>0.00</td>      <td>1</td>      <td>0</td>      <td>84.0</td>      <td>60.5</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>2</td>      <td>19.0</td>      <td>987.4</td>      <td>1.3</td>      <td>1.2</td>      <td>0</td>      <td>1006.6</td>      <td>987.6</td>      <td>21.2</td>      <td>1007.4</td>      <td>1007.2</td>      <td>...</td>      <td>17.2</td>      <td>19.0</td>      <td>1007.5</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>85.0</td>      <td>60.8</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>3</td>      <td>18.7</td>      <td>987.4</td>      <td>2.3</td>      <td>0.8</td>      <td>0</td>      <td>1006.6</td>      <td>987.6</td>      <td>21.1</td>      <td>1007.4</td>      <td>1007.2</td>      <td>...</td>      <td>17.2</td>      <td>18.8</td>      <td>1007.4</td>      <td>0.00</td>      <td>2</td>      <td>0</td>      <td>85.8</td>      <td>61.2</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>4</td>      <td>18.4</td>      <td>987.4</td>      <td>1.1</td>      <td>0.7</td>      <td>0</td>      <td>1006.7</td>      <td>987.7</td>      <td>20.9</td>      <td>1007.5</td>      <td>1007.2</td>      <td>...</td>      <td>17.4</td>      <td>18.9</td>      <td>1007.5</td>      <td>0.00</td>      <td>1</td>      <td>0</td>      <td>87.3</td>      <td>61.7</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>11515</td>      <td>25.7</td>      <td>993.2</td>      <td>3.9</td>      <td>3.8</td>      <td>0</td>      <td>1011.7</td>      <td>993.8</td>      <td>26.3</td>      <td>1013.3</td>      <td>1012.6</td>      <td>...</td>      <td>23.6</td>      <td>24.4</td>      <td>1013.0</td>      <td>19.56</td>      <td>1</td>      <td>0</td>      <td>79.7</td>      <td>67.5</td>      <td>1</td>      <td>23</td>    </tr>    <tr>      <td>11516</td>      <td>25.6</td>      <td>993.2</td>      <td>3.0</td>      <td>3.0</td>      <td>0</td>      <td>1011.7</td>      <td>993.8</td>      <td>26.3</td>      <td>1013.3</td>      <td>1012.6</td>      <td>...</td>      <td>25.3</td>      <td>24.4</td>      <td>1012.9</td>      <td>19.56</td>      <td>1</td>      <td>0</td>      <td>79.6</td>      <td>67.9</td>      <td>1</td>      <td>23</td>    </tr>    <tr>      <td>11517</td>      <td>25.6</td>      <td>993.2</td>      <td>3.8</td>      <td>2.5</td>      <td>0</td>      <td>1011.9</td>      <td>993.7</td>      <td>26.2</td>      <td>1013.2</td>      <td>1012.7</td>      <td>...</td>      <td>24.9</td>      <td>24.3</td>      <td>1012.9</td>      <td>19.56</td>      <td>2</td>      <td>0</td>      <td>79.2</td>      <td>68.3</td>      <td>1</td>      <td>23</td>    </tr>    <tr>      <td>11518</td>      <td>25.5</td>      <td>993.2</td>      <td>2.4</td>      <td>2.8</td>      <td>0</td>      <td>1011.8</td>      <td>993.7</td>      <td>26.1</td>      <td>1013.2</td>      <td>1012.6</td>      <td>...</td>      <td>25.3</td>      <td>24.2</td>      <td>1012.9</td>      <td>19.56</td>      <td>1</td>      <td>0</td>      <td>80.1</td>      <td>68.8</td>      <td>1</td>      <td>23</td>    </tr>    <tr>      <td>11519</td>      <td>25.4</td>      <td>993.2</td>      <td>3.0</td>      <td>3.5</td>      <td>0</td>      <td>1011.9</td>      <td>993.6</td>      <td>26.0</td>      <td>1013.1</td>      <td>1012.6</td>      <td>...</td>      <td>25.4</td>      <td>24.3</td>      <td>1012.9</td>      <td>19.56</td>      <td>2</td>      <td>0</td>      <td>80.2</td>      <td>68.9</td>      <td>1</td>      <td>23</td>    </tr>  </tbody></table><p>11520 rows × 38 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">answer = rf_reg_best.predict(test1).round(<span class="number">2</span>)</span><br><span class="line">answer</span><br></pre></td></tr></table></figure><pre><code>array([19.62, 19.61, 19.61, ..., 26.06, 24.58, 24.46])</code></pre><blockquote><h2 id="결과는"><a href="#결과는" class="headerlink" title="결과는?"></a>결과는?</h2></blockquote>{% asset_img rf.png %}{% asset_img final.png %}<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">answer_df = pd.DataFrame(answer)</span><br><span class="line">answer_df.rename(columns=&#123;</span><br><span class="line">    <span class="number">0</span> : <span class="string">'Y18'</span></span><br><span class="line">&#125;, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">answer_df[<span class="string">'id'</span>] = test[<span class="string">'id'</span>]</span><br><span class="line">answer_df = answer_df[[<span class="string">'id'</span>, <span class="string">'Y18'</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">answer_df.to_csv(<span class="string">'submission_0412.csv'</span>, index=<span class="literal">False</span>, encoding=<span class="string">'utf-8'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">answer_df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>id</th>      <th>Y18</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>4752</td>      <td>19.62</td>    </tr>    <tr>      <td>1</td>      <td>4753</td>      <td>19.61</td>    </tr>    <tr>      <td>2</td>      <td>4754</td>      <td>19.61</td>    </tr>    <tr>      <td>3</td>      <td>4755</td>      <td>18.68</td>    </tr>    <tr>      <td>4</td>      <td>4756</td>      <td>19.52</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>11515</td>      <td>16267</td>      <td>25.63</td>    </tr>    <tr>      <td>11516</td>      <td>16268</td>      <td>26.11</td>    </tr>    <tr>      <td>11517</td>      <td>16269</td>      <td>26.06</td>    </tr>    <tr>      <td>11518</td>      <td>16270</td>      <td>24.58</td>    </tr>    <tr>      <td>11519</td>      <td>16271</td>      <td>24.46</td>    </tr>  </tbody></table><p>11520 rows × 2 columns</p></div>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/04/18/final_blog/#disqus_thread</comments>
    </item>
    
    <item>
      <title>구찌 크롤링 데이터를 활용한 비슷한 이미지 출력(간단한 머신러닝)</title>
      <link>https://yangjun-ux.github.io/2020/04/17/similar_gucci/</link>
      <guid>https://yangjun-ux.github.io/2020/04/17/similar_gucci/</guid>
      <pubDate>Fri, 17 Apr 2020 08:45:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;비슷한-구찌-가방-찾기&quot;&gt;&lt;a href=&quot;#비슷한-구찌-가방-찾기&quot; class=&quot;headerlink&quot; title=&quot;비슷한 구찌 가방 찾기!&quot;&gt;&lt;/a&gt;비슷한 구찌 가방 찾기!&lt;/h3&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="비슷한-구찌-가방-찾기"><a href="#비슷한-구찌-가방-찾기" class="headerlink" title="비슷한 구찌 가방 찾기!"></a>비슷한 구찌 가방 찾기!</h3><a id="more"></a><blockquote><h2 id="GUCCI-사이트-크롤링-데이터를-활용한-유사한-이미지-찾기"><a href="#GUCCI-사이트-크롤링-데이터를-활용한-유사한-이미지-찾기" class="headerlink" title="GUCCI 사이트 크롤링 데이터를 활용한 유사한 이미지 찾기"></a>GUCCI 사이트 크롤링 데이터를 활용한 유사한 이미지 찾기</h2></blockquote><ul><li>직접 작성한 구찌 크롤링 코드를 활용하여 가방 사진을 다운받은 후 이를 활용하여 비슷한 이미지를 찾는다</li></ul><blockquote><h3 id="1-이미지-다운로드"><a href="#1-이미지-다운로드" class="headerlink" title="1. 이미지 다운로드"></a>1. 이미지 다운로드</h3></blockquote><ul><li><code>pip install Boutique_crawling</code>으로 다운로드 받아도 된다.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 크롤링 코드</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bags</span><span class="params">()</span>:</span></span><br><span class="line">    pages = <span class="number">10</span></span><br><span class="line">    title = []</span><br><span class="line">    price = []</span><br><span class="line">    sex = []</span><br><span class="line">    img = []</span><br><span class="line">    dfs = []</span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>, pages+<span class="number">1</span>):</span><br><span class="line">        url = <span class="string">"https://www.gucci.com/kr/ko/c/productgrid?categoryCode=men-bags&amp;show=Page&amp;page=&#123;&#125;"</span>.format(page)</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        print(<span class="string">"여자 가방 &#123;&#125;페이지 크롤링 중 입니다..."</span>.format(page))</span><br><span class="line">        a = response.json()[<span class="string">'products'</span>]</span><br><span class="line">        b = a[<span class="string">'items'</span>]</span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> range(len(b)):</span><br><span class="line">            title.append(b[idx][<span class="string">'title'</span>])</span><br><span class="line">            price.append(b[idx][<span class="string">'price'</span>])</span><br><span class="line">            img.append(b[idx][<span class="string">'primaryImage'</span>][<span class="string">'src'</span>][<span class="number">2</span>:])</span><br><span class="line">            sex.append(<span class="string">'Men'</span>)</span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>, pages+<span class="number">1</span>):</span><br><span class="line">        url = <span class="string">"https://www.gucci.com/kr/ko/c/productgrid?categoryCode=women-handbags&amp;show=Page&amp;page=&#123;&#125;"</span>.format(page)</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        print(<span class="string">"남자 가방 &#123;&#125;페이지 크롤링 중 입니다..."</span>.format(page))</span><br><span class="line">        a = response.json()[<span class="string">'products'</span>]</span><br><span class="line">        b = a[<span class="string">'items'</span>]</span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> range(len(b)):</span><br><span class="line">            title.append(b[idx][<span class="string">'title'</span>])</span><br><span class="line">            price.append(b[idx][<span class="string">'price'</span>])</span><br><span class="line">            img.append(b[idx][<span class="string">'primaryImage'</span>][<span class="string">'src'</span>][<span class="number">2</span>:])</span><br><span class="line">            sex.append(<span class="string">'Women'</span>)</span><br><span class="line">    title_df = pd.DataFrame(title)</span><br><span class="line">    price_df = pd.DataFrame(price)</span><br><span class="line">    img_df = pd.DataFrame(img)</span><br><span class="line">    sex_df = pd.DataFrame(sex)</span><br><span class="line">    dfs.append(title_df)</span><br><span class="line">    dfs.append(price_df)</span><br><span class="line">    dfs.append(img_df)</span><br><span class="line">    dfs.append(sex_df)</span><br><span class="line">    gucci_bags_df = pd.concat(dfs, axis=<span class="number">1</span>)</span><br><span class="line">    gucci_bags_df.reset_index(drop=<span class="literal">True</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">    gucci_bags_df[<span class="string">'brand'</span>] = <span class="string">'GUCCI'</span></span><br><span class="line">    gucci_bags_df.columns = [<span class="string">'title'</span>, <span class="string">'price'</span>, <span class="string">'image'</span>, <span class="string">'sex'</span>, <span class="string">'brand'</span>]</span><br><span class="line">    gucci_bags_df = gucci_bags_df[[<span class="string">'brand'</span>, <span class="string">'title'</span>, <span class="string">'price'</span>, <span class="string">'sex'</span>, <span class="string">'image'</span>]]</span><br><span class="line">    a = list(gucci_bags_df[<span class="string">'price'</span>])</span><br><span class="line">    ls = []</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> a:</span><br><span class="line">        num = re.findall(<span class="string">"\d+"</span>, x)</span><br><span class="line">        num = <span class="string">""</span>.join(num)</span><br><span class="line">        num = int(num)</span><br><span class="line">        ls.append(num)</span><br><span class="line">    gucci_bags_df[<span class="string">'price'</span>] = ls</span><br><span class="line">    gucci_bags_df.to_csv(<span class="string">"gucci_bags.csv"</span>, index=<span class="literal">False</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">    print(<span class="string">"사진 저장을 시작합니다"</span>)</span><br><span class="line">    <span class="keyword">for</span> idx, link <span class="keyword">in</span> enumerate(img):</span><br><span class="line">        url = <span class="string">"http://"</span> + link</span><br><span class="line">        urllib.request.urlretrieve(url, <span class="string">'bags/'</span> + <span class="string">'g'</span> + str(idx) + <span class="string">'.jpg'</span>)</span><br><span class="line">    <span class="keyword">return</span> gucci_bags_df</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 코드 실행</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line">bags()</span><br></pre></td></tr></table></figure><pre><code>여자 가방 1페이지 크롤링 중 입니다...여자 가방 2페이지 크롤링 중 입니다...여자 가방 3페이지 크롤링 중 입니다...여자 가방 4페이지 크롤링 중 입니다...여자 가방 5페이지 크롤링 중 입니다...여자 가방 6페이지 크롤링 중 입니다...여자 가방 7페이지 크롤링 중 입니다...여자 가방 8페이지 크롤링 중 입니다...여자 가방 9페이지 크롤링 중 입니다...여자 가방 10페이지 크롤링 중 입니다...남자 가방 1페이지 크롤링 중 입니다...남자 가방 2페이지 크롤링 중 입니다...남자 가방 3페이지 크롤링 중 입니다...남자 가방 4페이지 크롤링 중 입니다...남자 가방 5페이지 크롤링 중 입니다...남자 가방 6페이지 크롤링 중 입니다...남자 가방 7페이지 크롤링 중 입니다...남자 가방 8페이지 크롤링 중 입니다...남자 가방 9페이지 크롤링 중 입니다...남자 가방 10페이지 크롤링 중 입니다...사진 저장을 시작합니다</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>brand</th>      <th>title</th>      <th>price</th>      <th>sex</th>      <th>image</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>GUCCI</td>      <td>[오피디아] GG 서류 가방</td>      <td>2470000</td>      <td>Men</td>      <td>media.gucci.com/style/DarkGray_South_0_160_316...</td>    </tr>    <tr>      <td>1</td>      <td>GUCCI</td>      <td>[오피디아] GG 화장품 케이스</td>      <td>990000</td>      <td>Men</td>      <td>media.gucci.com/style/DarkGray_South_0_160_316...</td>    </tr>    <tr>      <td>2</td>      <td>GUCCI</td>      <td>[오피디아] GG 파우치</td>      <td>1220000</td>      <td>Men</td>      <td>media.gucci.com/style/DarkGray_South_0_160_316...</td>    </tr>    <tr>      <td>3</td>      <td>GUCCI</td>      <td>[오피디아] 스몰 사이즈 GG 백팩</td>      <td>2080000</td>      <td>Men</td>      <td>media.gucci.com/style/DarkGray_South_0_160_316...</td>    </tr>    <tr>      <td>4</td>      <td>GUCCI</td>      <td>[오피디아] GG 수프림 포트폴리오</td>      <td>1240000</td>      <td>Men</td>      <td>media.gucci.com/style/DarkGray_South_0_160_316...</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>296</td>      <td>GUCCI</td>      <td>[네오 빈티지] GG 수프림 메신저 백</td>      <td>1410000</td>      <td>Women</td>      <td>media.gucci.com/style/DarkGray_South_0_160_316...</td>    </tr>    <tr>      <td>297</td>      <td>GUCCI</td>      <td>[네오 빈티지] 백팩</td>      <td>2460000</td>      <td>Women</td>      <td>media.gucci.com/style/DarkGray_South_0_160_316...</td>    </tr>    <tr>      <td>298</td>      <td>GUCCI</td>      <td>소호 스몰 가죽 디스코 백</td>      <td>1450000</td>      <td>Women</td>      <td>media.gucci.com/style/DarkGray_South_0_160_316...</td>    </tr>    <tr>      <td>299</td>      <td>GUCCI</td>      <td>[소호] 스몰 가죽 디스코 백</td>      <td>1450000</td>      <td>Women</td>      <td>media.gucci.com/style/DarkGray_South_0_160_316...</td>    </tr>    <tr>      <td>300</td>      <td>GUCCI</td>      <td>[GG 마몽] 스몰 마틀라세 숄더백</td>      <td>2720000</td>      <td>Women</td>      <td>media.gucci.com/style/DarkGray_South_0_160_316...</td>    </tr>  </tbody></table><p>301 rows × 5 columns</p></div><blockquote><h3 id="확보한-사진-데이터를-활용하여-간단한-머신러닝을-해보자"><a href="#확보한-사진-데이터를-활용하여-간단한-머신러닝을-해보자" class="headerlink" title="확보한 사진 데이터를 활용하여 간단한 머신러닝을 해보자!"></a>확보한 사진 데이터를 활용하여 간단한 머신러닝을 해보자!</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mahotas <span class="keyword">as</span> mh</span><br><span class="line"><span class="keyword">from</span> glob <span class="keyword">import</span> glob</span><br></pre></td></tr></table></figure><blockquote><h3 id="이미지-불러오기"><a href="#이미지-불러오기" class="headerlink" title="이미지 불러오기"></a>이미지 불러오기</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># images = glob('bags/*.jpg')</span></span><br><span class="line">images = glob(<span class="string">'bags/*.jpg'</span>)</span><br><span class="line">images</span><br></pre></td></tr></table></figure><pre><code>[&apos;bags/g269.jpg&apos;, ... 중간 생략 &apos;bags/g270.jpg&apos;]</code></pre><blockquote><h3 id="이미지를-배열로-만들기-amp-grey로-만들기"><a href="#이미지를-배열로-만들기-amp-grey로-만들기" class="headerlink" title="이미지를 배열로 만들기 &amp; grey로 만들기"></a>이미지를 배열로 만들기 &amp; grey로 만들기</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">features = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> im <span class="keyword">in</span> images:</span><br><span class="line">    im = mh.imread(im)</span><br><span class="line">    im = mh.colors.rgb2gray(im, dtype=np.uint8)</span><br><span class="line">    features.append(mh.features.haralick(im).ravel())</span><br></pre></td></tr></table></figure><blockquote><h3 id="각-사진-별-거리구하기"><a href="#각-사진-별-거리구하기" class="headerlink" title="각 사진 별 거리구하기"></a>각 사진 별 거리구하기</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> distance</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line">sc = StandardScaler()</span><br><span class="line">features = sc.fit_transform(features)</span><br><span class="line"></span><br><span class="line">dists = distance.squareform(distance.pdist(features))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dists</span><br></pre></td></tr></table></figure><pre><code>array([[ 0.        ,  6.626829  , 10.96937821, ...,  6.41357824,         7.76924545,  5.18205591],       [ 6.626829  ,  0.        ,  7.80597792, ...,  8.07493656,         4.2529202 ,  6.68458331],       [10.96937821,  7.80597792,  0.        , ..., 12.43831703,         6.09376376, 11.31567013],       ...,       [ 6.41357824,  8.07493656, 12.43831703, ...,  0.        ,         7.56989192,  1.70162557],       [ 7.76924545,  4.2529202 ,  6.09376376, ...,  7.56989192,         0.        ,  6.37412609],       [ 5.18205591,  6.68458331, 11.31567013, ...,  1.70162557,         6.37412609,  0.        ]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selectImage</span><span class="params">(n, m, dists, images)</span>:</span></span><br><span class="line">    image_position = dists[n].argsort()[m]</span><br><span class="line">    image = mh.imread(images[image_position])</span><br><span class="line">    <span class="keyword">return</span> image</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plotImages</span><span class="params">(n)</span>:</span></span><br><span class="line">    fig, ax = plt.subplots(<span class="number">1</span>,<span class="number">4</span>, figsize=(<span class="number">15</span>, <span class="number">5</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        ax[i].imshow(selectImage(n, i, dists, images))</span><br><span class="line">        ax[i].set_xticks([])</span><br><span class="line">        ax[i].set_yticks([])</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><blockquote><h3 id="grey로-바꾼-후의-비슷한-가방-모양-찾기"><a href="#grey로-바꾼-후의-비슷한-가방-모양-찾기" class="headerlink" title="grey로 바꾼 후의 비슷한 가방 모양 찾기"></a>grey로 바꾼 후의 비슷한 가방 모양 찾기</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plotImages(<span class="number">80</span>)</span><br></pre></td></tr></table></figure><img src="/2020/04/17/similar_gucci/similar_gucci_16_0.png" class><blockquote><h3 id="색을-그대로-두면-어떨까"><a href="#색을-그대로-두면-어떨까" class="headerlink" title="색을 그대로 두면 어떨까?"></a>색을 그대로 두면 어떨까?</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">features_c = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> im <span class="keyword">in</span> images:</span><br><span class="line">    im = mh.imread(im)</span><br><span class="line">    features_c.append(mh.features.haralick(im).ravel())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> distance</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line">sc = StandardScaler()</span><br><span class="line">features_c = sc.fit_transform(features_c)</span><br><span class="line"></span><br><span class="line">dists_c = distance.squareform(distance.pdist(features_c))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selectImage_c</span><span class="params">(n, m, dists, images)</span>:</span></span><br><span class="line">    image_position = dists_c[n].argsort()[m]</span><br><span class="line">    image = mh.imread(images[image_position])</span><br><span class="line">    <span class="keyword">return</span> image</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plotImages_c</span><span class="params">(n)</span>:</span></span><br><span class="line">    fig, ax = plt.subplots(<span class="number">1</span>,<span class="number">4</span>, figsize=(<span class="number">15</span>, <span class="number">5</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        ax[i].imshow(selectImage_c(n, i, dists, images))</span><br><span class="line">        ax[i].set_xticks([])</span><br><span class="line">        ax[i].set_yticks([])</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><blockquote><h3 id="색을-그대로-두면-RGB-값이-다-살아있기-때문에-색이-비슷한-가방을-우선적으로-찾아준다"><a href="#색을-그대로-두면-RGB-값이-다-살아있기-때문에-색이-비슷한-가방을-우선적으로-찾아준다" class="headerlink" title="색을 그대로 두면 RGB 값이 다 살아있기 때문에 색이 비슷한 가방을 우선적으로 찾아준다"></a>색을 그대로 두면 RGB 값이 다 살아있기 때문에 색이 비슷한 가방을 우선적으로 찾아준다</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plotImages_c(<span class="number">80</span>)</span><br></pre></td></tr></table></figure><img src="/2020/04/17/similar_gucci/similar_gucci_23_0.png" class>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/04/17/similar_gucci/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - KAKAO 비밀지도</title>
      <link>https://yangjun-ux.github.io/2020/03/25/kakao_secretmap/</link>
      <guid>https://yangjun-ux.github.io/2020/03/25/kakao_secretmap/</guid>
      <pubDate>Wed, 25 Mar 2020 01:50:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습&lt;/h3&gt;&lt;h4 id=&quot;KAKAO-비밀지도&quot;&gt;&lt;a href=&quot;#KAKAO-비밀지도&quot; class=&quot;headerlink&quot; title=&quot;KAKAO - 비밀지도&quot;&gt;&lt;/a&gt;KAKAO - 비밀지도&lt;/h4&gt;&lt;p&gt;네오가 프로도의 비상금을 훔칠 수 있도록 지도를 해석하는 코드를 작성해보세요!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습"><a href="#Programmers-코딩테스트-연습" class="headerlink" title="Programmers  코딩테스트 연습"></a>Programmers  코딩테스트 연습</h3><h4 id="KAKAO-비밀지도"><a href="#KAKAO-비밀지도" class="headerlink" title="KAKAO - 비밀지도"></a>KAKAO - 비밀지도</h4><p>네오가 프로도의 비상금을 훔칠 수 있도록 지도를 해석하는 코드를 작성해보세요!</p><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><h2 id="2018-KAKAO-BLIND-RECRUITMENT-비밀지도"><a href="#2018-KAKAO-BLIND-RECRUITMENT-비밀지도" class="headerlink" title="2018 KAKAO BLIND RECRUITMENT - 비밀지도"></a>2018 KAKAO BLIND RECRUITMENT - 비밀지도</h2><blockquote><h2 id="비밀지도"><a href="#비밀지도" class="headerlink" title="비밀지도"></a>비밀지도</h2><h3 id="네오는-평소-프로도가-비상금을-숨겨놓는-장소를-알려줄-비밀지도를-손에-넣었다-그런데-이-비밀지도는-숫자로-암호화되어-있어-위치를-확인하기-위해서는-암호를-해독해야-한다-다행히-지도-암호를-해독할-방법을-적어놓은-메모도-함께-발견했다"><a href="#네오는-평소-프로도가-비상금을-숨겨놓는-장소를-알려줄-비밀지도를-손에-넣었다-그런데-이-비밀지도는-숫자로-암호화되어-있어-위치를-확인하기-위해서는-암호를-해독해야-한다-다행히-지도-암호를-해독할-방법을-적어놓은-메모도-함께-발견했다" class="headerlink" title="네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다."></a>네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다.</h3></blockquote><img src="/2020/03/25/kakao_secretmap/secret8.png" class><blockquote><ul><li>지도는 한 변의 길이가 n인 정사각형 배열 형태로, <strong>각 칸은 공백(“ “) 또는벽(“#”) 두 종류로 이루어져 있다.</strong></li><li>전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 지도 1과 지도 2라고 하자. <strong>지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다. 지도 1과 지도 2에서 모두 공백인 부분은 전체 지도에서도 공백이다.</strong></li><li>지도 1과 지도 2는 <strong>각각 정수 배열로 암호화되어 있다.</strong></li><li>암호화된 배열은 지도의 각 가로줄에서 <strong>벽 부분을 1, 공백 부분을 0으로 부호화했을 때 얻어지는 이진수에 해당하는 값의 배열이다.</strong><h3 id="네오가-프로도의-비상금을-손에-넣을-수-있도록-비밀지도의-암호를-해독할-프로그램을-작성하라"><a href="#네오가-프로도의-비상금을-손에-넣을-수-있도록-비밀지도의-암호를-해독할-프로그램을-작성하라" class="headerlink" title="네오가 프로도의 비상금을 손에 넣을 수 있도록, 비밀지도의 암호를 해독할 프로그램을 작성하라!"></a>네오가 프로도의 비상금을 손에 넣을 수 있도록, 비밀지도의 암호를 해독할 프로그램을 작성하라!</h3></li></ul></blockquote><blockquote><h3 id="입력형식"><a href="#입력형식" class="headerlink" title="입력형식"></a>입력형식</h3><pre><code>- 지도 한변의 크기 n, 2개의 정수 배열 arr1, arr2가 입력으로 들어온다</code></pre></blockquote><h3 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h3><ul><li>1번</li></ul><table><thead><tr><th>매개변수</th><th>값</th></tr></thead><tbody><tr><td>n</td><td>5</td></tr><tr><td>arr1</td><td>[9, 20, 28, 18, 11]</td></tr><tr><td>arr2</td><td>[30, 1, 21, 17, 28]</td></tr><tr><td>출력</td><td>[“#####”,”# # #”, “### #”, “# ##”, “#####”]</td></tr></tbody></table><ul><li>2번</li></ul><table><thead><tr><th>매개변수</th><th>값</th></tr></thead><tbody><tr><td>n</td><td>6</td></tr><tr><td>arr1</td><td>[46, 33, 33 ,22, 31, 50]</td></tr><tr><td>arr2</td><td>[27 ,56, 19, 14, 14, 10]</td></tr><tr><td>출력</td><td>[“######”, “### #”, “## ##”, “ #### “, “ #####”, “### # “]</td></tr></tbody></table><h3 id="코드설명"><a href="#코드설명" class="headerlink" title="코드설명"></a>코드설명</h3><p>이 문제는 총 4단계의 과정으로 해결할 수 있다.<br>일단 주어진 각 배열 arr1, arr2는 정수 배열이므로 이를 2진수의 수로 바꿔준다.<br><code>x = format(x, &#39;b&#39;)</code> 이 코드는 주어진 숫자 x를 ‘b’ 즉, 2진수로 바꿔주는 코드이다. for 문을 활용하여 각 배열의 모든 숫자를 이진수로 바꿔준다.<br>이렇게 2진수의 수로 바꾼 다음에도 문제가 발생하는데, 각 변의 길이가 n으로 주어져 있기 때문에 길이를 맞춰주기 위해 빈 곳에 0을 채워주어야 한다.<br><code>enumerate</code>를 사용하여 인덱스와 2진수로 변환된 수를 받아 길이가 n이 되지 않는 경우 부족한 길이만큼 0을 채워준다.<br>이제 arr1, arr2를 활용한 각각의 비밀지도가 완성되었으며, 이제 이 두 지도를 합쳐서 해석하는 것만 남았다.<br>두 지도에서 벽이 있는 곳(1이 있는 곳)은 무조건 벽이 되며, 둘 다 0이 되는 경우만 0이 된다. 이는 <code>if</code>를 사용해서 해결한다.  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">arr_end &#x3D; []</span><br><span class="line">    for x in range(n):</span><br><span class="line">        ls &#x3D; []</span><br><span class="line">        for idx in range(n):</span><br><span class="line">            if array_1[x][idx] &#x3D;&#x3D; &#39;1&#39; or array_2[x][idx] &#x3D;&#x3D; &#39;1&#39;:</span><br><span class="line">                ls.append(&#39;1&#39;)</span><br><span class="line">            elif array_1[x][idx] &#x3D;&#x3D; &#39;0&#39; and array_2[x][idx] &#x3D;&#x3D; &#39;0&#39;:</span><br><span class="line">                ls.append(&#39;0&#39;)</span><br><span class="line">            if idx &#x3D;&#x3D; n - 1:</span><br><span class="line">                arr_end.append(ls)</span><br></pre></td></tr></table></figure><p>if를 사용해서 나온 결과값은 ls에 추가하고, ls는 arr_end에 추가한다. 이렇게 되면 각 줄별로 해석된 리스트를 얻을 수 있다. 이제 남은건 1은 #으로, 0은 공백으로 바꾸는 것이다.<br>출력된 예시를 보면 각 줄별로 해석된 리스트가 아닌 각 줄별 문자열을 출력하기 때문에 <code>join</code>을 활용해서 문자열로 바꾼 후 <code>replace</code>를 사용하여 변환을 해준다. 이렇게 변환된 값을 answer_arr에 하나씩 추가하고, 이를 리턴한다.</p><h3 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(n, arr1, arr2)</span>:</span></span><br><span class="line">    array_1 = []</span><br><span class="line">    array_2 = []</span><br><span class="line">    <span class="comment"># 각 배열을 2진수로 변환</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> arr1:</span><br><span class="line">        x = format(x, <span class="string">'b'</span>)</span><br><span class="line">        array_1.append(x)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> arr2:</span><br><span class="line">        x = format(x, <span class="string">'b'</span>)</span><br><span class="line">        array_2.append(x)</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># n에 맞게 길이 맞추기</span></span><br><span class="line">    <span class="keyword">for</span> idx, x <span class="keyword">in</span> enumerate(array_1):</span><br><span class="line">        <span class="keyword">if</span> len(x) != n:</span><br><span class="line">            array_1[idx] = (n - len(x)) * <span class="string">"0"</span> + x</span><br><span class="line">    <span class="keyword">for</span> idx, x <span class="keyword">in</span> enumerate(array_2):</span><br><span class="line">        <span class="keyword">if</span> len(x) != n:</span><br><span class="line">            array_2[idx] = (n - len(x)) * <span class="string">"0"</span> + x</span><br><span class="line">    <span class="comment"># 두 배열 합치기        </span></span><br><span class="line">    arr_end = []</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(n):</span><br><span class="line">        ls = []</span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> range(n):</span><br><span class="line">            <span class="keyword">if</span> array_1[x][idx] == <span class="string">'1'</span> <span class="keyword">or</span> array_2[x][idx] == <span class="string">'1'</span>:</span><br><span class="line">                ls.append(<span class="string">'1'</span>)</span><br><span class="line">            <span class="keyword">elif</span> array_1[x][idx] == <span class="string">'0'</span> <span class="keyword">and</span> array_2[x][idx] == <span class="string">'0'</span>:</span><br><span class="line">                ls.append(<span class="string">'0'</span>)</span><br><span class="line">            <span class="keyword">if</span> idx == n - <span class="number">1</span>:</span><br><span class="line">                arr_end.append(ls)</span><br><span class="line">    <span class="comment"># 1과 0을 공백과 #으로 바꾸기</span></span><br><span class="line">    answer_arr = []</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> arr_end:</span><br><span class="line">        x = <span class="string">""</span>.join(x)</span><br><span class="line">        x = x.replace(<span class="string">'1'</span>, <span class="string">'#'</span>)</span><br><span class="line">        x = x.replace(<span class="string">'0'</span>, <span class="string">" "</span>)</span><br><span class="line">        answer_arr.append(x)</span><br><span class="line">    <span class="keyword">return</span> answer_arr</span><br></pre></td></tr></table></figure><h3 id="정답확인"><a href="#정답확인" class="headerlink" title="정답확인"></a>정답확인</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">5</span>, [<span class="number">46</span>, <span class="number">33</span>, <span class="number">33</span> ,<span class="number">22</span>, <span class="number">31</span>, <span class="number">50</span>], [<span class="number">30</span>, <span class="number">1</span>, <span class="number">21</span>, <span class="number">17</span>, <span class="number">28</span>])</span><br></pre></td></tr></table></figure><pre><code>[&apos;#####&apos;, &apos;#   #&apos;, &apos;# # #&apos;, &apos;# ###&apos;, &apos;#####&apos;]</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/03/25/kakao_secretmap/#disqus_thread</comments>
    </item>
    
    <item>
      <title>회귀분석 예제 - 치킨 판매량 예측 모델 만들기</title>
      <link>https://yangjun-ux.github.io/2020/03/21/Chicken/</link>
      <guid>https://yangjun-ux.github.io/2020/03/21/Chicken/</guid>
      <pubDate>Sat, 21 Mar 2020 07:49:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;치킨-판매량-예측-모델-만들기&quot;&gt;&lt;a href=&quot;#치킨-판매량-예측-모델-만들기&quot; class=&quot;headerlink&quot; title=&quot;치킨 판매량 예측 모델 만들기&quot;&gt;&lt;/a&gt;치킨 판매량 예측 모델 만들기&lt;/h3&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="치킨-판매량-예측-모델-만들기"><a href="#치킨-판매량-예측-모델-만들기" class="headerlink" title="치킨 판매량 예측 모델 만들기"></a>치킨 판매량 예측 모델 만들기</h3><a id="more"></a><blockquote><h2 id="2018년-치킨-판매량-데이터와-기상-및-미세먼지-데이터를-활용한-판매량-예측-모델-만들기"><a href="#2018년-치킨-판매량-데이터와-기상-및-미세먼지-데이터를-활용한-판매량-예측-모델-만들기" class="headerlink" title="2018년 치킨 판매량 데이터와 기상 및 미세먼지 데이터를 활용한 판매량 예측 모델 만들기"></a>2018년 치킨 판매량 데이터와 기상 및 미세먼지 데이터를 활용한 판매량 예측 모델 만들기</h2></blockquote><ul><li>수요 예측 실패로 버려지는 식재료의 양이 많다 -&gt; 예측을 잘하면 손실을 줄일 수 있음</li></ul><blockquote><h3 id="1-데이터-불러오기"><a href="#1-데이터-불러오기" class="headerlink" title="1. 데이터 불러오기"></a>1. 데이터 불러오기</h3></blockquote><ul><li>2018년 치킨 판매 데이터 불러오기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'datas/chicken_2018.csv'</span>, encoding=<span class="string">'utf-8'</span>, parse_dates=[<span class="number">0</span>, <span class="number">1</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop(columns=[<span class="string">'연락처'</span>, <span class="string">'주소'</span>, <span class="string">'결제구분'</span>, <span class="string">'주문내역1'</span>, <span class="string">'주문내역2'</span>], inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><blockquote><h3 id="판매량-계산을-위해-count-컬럼-추가"><a href="#판매량-계산을-위해-count-컬럼-추가" class="headerlink" title="판매량 계산을 위해 count 컬럼 추가"></a>판매량 계산을 위해 count 컬럼 추가</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'count'</span>] = <span class="number">1</span></span><br><span class="line">df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>count</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>2020-05-11 12:06:00</td>      <td>1</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>2020-05-11 12:19:00</td>      <td>1</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>2020-05-11 13:01:00</td>      <td>1</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>2020-05-11 13:48:00</td>      <td>1</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>2020-05-11 14:06:00</td>      <td>1</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>15542</td>      <td>2018-12-31</td>      <td>2020-05-11 01:14:00</td>      <td>1</td>    </tr>    <tr>      <td>15543</td>      <td>2018-12-31</td>      <td>2020-05-11 01:16:00</td>      <td>1</td>    </tr>    <tr>      <td>15544</td>      <td>2018-12-31</td>      <td>2020-05-11 01:29:00</td>      <td>1</td>    </tr>    <tr>      <td>15545</td>      <td>2018-12-31</td>      <td>2020-05-11 01:31:00</td>      <td>1</td>    </tr>    <tr>      <td>15546</td>      <td>2018-12-31</td>      <td>2020-05-11 01:37:00</td>      <td>1</td>    </tr>  </tbody></table><p>15547 rows × 3 columns</p></div><blockquote><h3 id="요일별-시간별-판매량-확인"><a href="#요일별-시간별-판매량-확인" class="headerlink" title="요일별, 시간별 판매량 확인"></a>요일별, 시간별 판매량 확인</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'weekofday'</span>] = df[<span class="string">'판매일자'</span>].dt.dayofweek</span><br><span class="line">df[<span class="string">'hour'</span>] = df[<span class="string">'시간'</span>].dt.hour</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>count</th>      <th>weekofday</th>      <th>hour</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>2020-05-11 12:06:00</td>      <td>1</td>      <td>0</td>      <td>12</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>2020-05-11 12:19:00</td>      <td>1</td>      <td>0</td>      <td>12</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>2020-05-11 13:01:00</td>      <td>1</td>      <td>0</td>      <td>13</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>2020-05-11 13:48:00</td>      <td>1</td>      <td>0</td>      <td>13</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>2020-05-11 14:06:00</td>      <td>1</td>      <td>0</td>      <td>14</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>15542</td>      <td>2018-12-31</td>      <td>2020-05-11 01:14:00</td>      <td>1</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <td>15543</td>      <td>2018-12-31</td>      <td>2020-05-11 01:16:00</td>      <td>1</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <td>15544</td>      <td>2018-12-31</td>      <td>2020-05-11 01:29:00</td>      <td>1</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <td>15545</td>      <td>2018-12-31</td>      <td>2020-05-11 01:31:00</td>      <td>1</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <td>15546</td>      <td>2018-12-31</td>      <td>2020-05-11 01:37:00</td>      <td>1</td>      <td>0</td>      <td>1</td>    </tr>  </tbody></table><p>15547 rows × 5 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop(columns=[<span class="string">'시간'</span>], inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><blockquote><h3 id="요일-시간-별-판매량"><a href="#요일-시간-별-판매량" class="headerlink" title="요일, 시간 별 판매량"></a>요일, 시간 별 판매량</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.groupby([<span class="string">'판매일자'</span>, <span class="string">'weekofday'</span>, <span class="string">'hour'</span>]) [<span class="string">'count'</span>].sum()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.reset_index()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.rename(columns=&#123;<span class="string">'판매일자'</span>:<span class="string">'date'</span>&#125;, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>weekofday</th>      <th>hour</th>      <th>count</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>0</td>      <td>12</td>      <td>2</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>0</td>      <td>13</td>      <td>2</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>0</td>      <td>14</td>      <td>1</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>0</td>      <td>15</td>      <td>3</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>0</td>      <td>16</td>      <td>4</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>3860</td>      <td>2018-12-31</td>      <td>0</td>      <td>19</td>      <td>8</td>    </tr>    <tr>      <td>3861</td>      <td>2018-12-31</td>      <td>0</td>      <td>20</td>      <td>6</td>    </tr>    <tr>      <td>3862</td>      <td>2018-12-31</td>      <td>0</td>      <td>21</td>      <td>8</td>    </tr>    <tr>      <td>3863</td>      <td>2018-12-31</td>      <td>0</td>      <td>22</td>      <td>5</td>    </tr>    <tr>      <td>3864</td>      <td>2018-12-31</td>      <td>0</td>      <td>23</td>      <td>4</td>    </tr>  </tbody></table><p>3865 rows × 4 columns</p></div><blockquote><h3 id="기상-데이터-불러오기"><a href="#기상-데이터-불러오기" class="headerlink" title="기상 데이터 불러오기"></a>기상 데이터 불러오기</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weather_df = pd.read_csv(<span class="string">'datas/weather_2018.csv'</span>, encoding=<span class="string">'euc-kr'</span>, parse_dates=[<span class="number">2</span>])</span><br><span class="line">weather_df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>지점</th>      <th>지점명</th>      <th>일시</th>      <th>기온(°C)</th>      <th>기온 QC플래그</th>      <th>강수량(mm)</th>      <th>강수량 QC플래그</th>      <th>풍속(m/s)</th>      <th>풍속 QC플래그</th>      <th>풍향(16방위)</th>      <th>풍향 QC플래그</th>      <th>습도(%)</th>      <th>습도 QC플래그</th>      <th>현지기압(hPa)</th>      <th>현지기압 QC플래그</th>      <th>적설(cm)</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>108</td>      <td>서울</td>      <td>2018-01-01 01:00:00</td>      <td>-3.3</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>0.7</td>      <td>0.0</td>      <td>360.0</td>      <td>0.0</td>      <td>41</td>      <td>0.0</td>      <td>1015.1</td>      <td>0.0</td>      <td>NaN</td>    </tr>    <tr>      <td>1</td>      <td>108</td>      <td>서울</td>      <td>2018-01-01 02:00:00</td>      <td>-3.7</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>0.9</td>      <td>0.0</td>      <td>270.0</td>      <td>0.0</td>      <td>42</td>      <td>0.0</td>      <td>1015.2</td>      <td>0.0</td>      <td>NaN</td>    </tr>    <tr>      <td>2</td>      <td>108</td>      <td>서울</td>      <td>2018-01-01 03:00:00</td>      <td>-4.0</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>1.0</td>      <td>0.0</td>      <td>290.0</td>      <td>0.0</td>      <td>44</td>      <td>0.0</td>      <td>1015.5</td>      <td>0.0</td>      <td>NaN</td>    </tr>    <tr>      <td>3</td>      <td>108</td>      <td>서울</td>      <td>2018-01-01 04:00:00</td>      <td>-4.2</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>1.1</td>      <td>0.0</td>      <td>290.0</td>      <td>0.0</td>      <td>53</td>      <td>0.0</td>      <td>1015.5</td>      <td>0.0</td>      <td>NaN</td>    </tr>    <tr>      <td>4</td>      <td>108</td>      <td>서울</td>      <td>2018-01-01 05:00:00</td>      <td>-4.4</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>0.8</td>      <td>0.0</td>      <td>290.0</td>      <td>0.0</td>      <td>54</td>      <td>0.0</td>      <td>1015.7</td>      <td>0.0</td>      <td>NaN</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>8754</td>      <td>108</td>      <td>서울</td>      <td>2018-12-31 19:00:00</td>      <td>-3.1</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>2.1</td>      <td>0.0</td>      <td>270.0</td>      <td>0.0</td>      <td>43</td>      <td>0.0</td>      <td>1025.5</td>      <td>0.0</td>      <td>NaN</td>    </tr>    <tr>      <td>8755</td>      <td>108</td>      <td>서울</td>      <td>2018-12-31 20:00:00</td>      <td>-3.7</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>0.8</td>      <td>0.0</td>      <td>340.0</td>      <td>0.0</td>      <td>39</td>      <td>0.0</td>      <td>1024.9</td>      <td>0.0</td>      <td>NaN</td>    </tr>    <tr>      <td>8756</td>      <td>108</td>      <td>서울</td>      <td>2018-12-31 21:00:00</td>      <td>-4.6</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>1.1</td>      <td>0.0</td>      <td>290.0</td>      <td>0.0</td>      <td>44</td>      <td>0.0</td>      <td>1024.8</td>      <td>0.0</td>      <td>NaN</td>    </tr>    <tr>      <td>8757</td>      <td>108</td>      <td>서울</td>      <td>2018-12-31 22:00:00</td>      <td>-5.4</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>1.3</td>      <td>0.0</td>      <td>270.0</td>      <td>0.0</td>      <td>46</td>      <td>0.0</td>      <td>1024.4</td>      <td>0.0</td>      <td>NaN</td>    </tr>    <tr>      <td>8758</td>      <td>108</td>      <td>서울</td>      <td>2018-12-31 23:00:00</td>      <td>-5.2</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>1.6</td>      <td>0.0</td>      <td>320.0</td>      <td>0.0</td>      <td>47</td>      <td>0.0</td>      <td>1024.6</td>      <td>0.0</td>      <td>NaN</td>    </tr>  </tbody></table><p>8759 rows × 16 columns</p></div><h3 id="센서-데이터에서-오류-찾기"><a href="#센서-데이터에서-오류-찾기" class="headerlink" title="센서 데이터에서 오류 찾기"></a>센서 데이터에서 오류 찾기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df = weather_df[weather_df[<span class="string">'풍향 QC플래그'</span>] != <span class="number">9</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df.columns</span><br></pre></td></tr></table></figure><pre><code>Index([&apos;지점&apos;, &apos;지점명&apos;, &apos;일시&apos;, &apos;기온(°C)&apos;, &apos;기온 QC플래그&apos;, &apos;강수량(mm)&apos;, &apos;강수량 QC플래그&apos;,       &apos;풍속(m/s)&apos;, &apos;풍속 QC플래그&apos;, &apos;풍향(16방위)&apos;, &apos;풍향 QC플래그&apos;, &apos;습도(%)&apos;, &apos;습도 QC플래그&apos;,       &apos;현지기압(hPa)&apos;, &apos;현지기압 QC플래그&apos;, &apos;적설(cm)&apos;],      dtype=&apos;object&apos;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df.drop(columns=[<span class="string">'기온 QC플래그'</span>, <span class="string">'강수량 QC플래그'</span>, <span class="string">'풍향 QC플래그'</span>, <span class="string">'습도 QC플래그'</span>, <span class="string">'현지기압 QC플래그'</span>], inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df.drop(columns=[<span class="string">'지점'</span>, <span class="string">'지점명'</span>], inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df.drop(columns=[<span class="string">'풍속 QC플래그'</span>], inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>일시</th>      <th>기온(°C)</th>      <th>강수량(mm)</th>      <th>풍속(m/s)</th>      <th>풍향(16방위)</th>      <th>습도(%)</th>      <th>현지기압(hPa)</th>      <th>적설(cm)</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01 01:00:00</td>      <td>-3.3</td>      <td>NaN</td>      <td>0.7</td>      <td>360.0</td>      <td>41</td>      <td>1015.1</td>      <td>NaN</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01 02:00:00</td>      <td>-3.7</td>      <td>NaN</td>      <td>0.9</td>      <td>270.0</td>      <td>42</td>      <td>1015.2</td>      <td>NaN</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01 03:00:00</td>      <td>-4.0</td>      <td>NaN</td>      <td>1.0</td>      <td>290.0</td>      <td>44</td>      <td>1015.5</td>      <td>NaN</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01 04:00:00</td>      <td>-4.2</td>      <td>NaN</td>      <td>1.1</td>      <td>290.0</td>      <td>53</td>      <td>1015.5</td>      <td>NaN</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01 05:00:00</td>      <td>-4.4</td>      <td>NaN</td>      <td>0.8</td>      <td>290.0</td>      <td>54</td>      <td>1015.7</td>      <td>NaN</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>8754</td>      <td>2018-12-31 19:00:00</td>      <td>-3.1</td>      <td>NaN</td>      <td>2.1</td>      <td>270.0</td>      <td>43</td>      <td>1025.5</td>      <td>NaN</td>    </tr>    <tr>      <td>8755</td>      <td>2018-12-31 20:00:00</td>      <td>-3.7</td>      <td>NaN</td>      <td>0.8</td>      <td>340.0</td>      <td>39</td>      <td>1024.9</td>      <td>NaN</td>    </tr>    <tr>      <td>8756</td>      <td>2018-12-31 21:00:00</td>      <td>-4.6</td>      <td>NaN</td>      <td>1.1</td>      <td>290.0</td>      <td>44</td>      <td>1024.8</td>      <td>NaN</td>    </tr>    <tr>      <td>8757</td>      <td>2018-12-31 22:00:00</td>      <td>-5.4</td>      <td>NaN</td>      <td>1.3</td>      <td>270.0</td>      <td>46</td>      <td>1024.4</td>      <td>NaN</td>    </tr>    <tr>      <td>8758</td>      <td>2018-12-31 23:00:00</td>      <td>-5.2</td>      <td>NaN</td>      <td>1.6</td>      <td>320.0</td>      <td>47</td>      <td>1024.6</td>      <td>NaN</td>    </tr>  </tbody></table><p>8757 rows × 8 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df.isnull().sum()</span><br></pre></td></tr></table></figure><pre><code>일시              0기온(°C)          1강수량(mm)      7851풍속(m/s)         0풍향(16방위)        0습도(%)           0현지기압(hPa)       0적설(cm)       8469dtype: int64</code></pre><blockquote><h3 id="강수량과-적설-NaN-값을-0으로-바꾸기"><a href="#강수량과-적설-NaN-값을-0으로-바꾸기" class="headerlink" title="강수량과 적설 NaN 값을 0으로 바꾸기"></a>강수량과 적설 NaN 값을 0으로 바꾸기</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df.fillna(<span class="number">0</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weather_df[<span class="string">'month'</span>] = weather_df[<span class="string">'일시'</span>].dt.month</span><br><span class="line">weather_df[<span class="string">'hour'</span>] = weather_df[<span class="string">'일시'</span>].dt.hour</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>일시</th>      <th>기온(°C)</th>      <th>강수량(mm)</th>      <th>풍속(m/s)</th>      <th>풍향(16방위)</th>      <th>습도(%)</th>      <th>현지기압(hPa)</th>      <th>적설(cm)</th>      <th>month</th>      <th>hour</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01 01:00:00</td>      <td>-3.3</td>      <td>0.0</td>      <td>0.7</td>      <td>360.0</td>      <td>41</td>      <td>1015.1</td>      <td>0.0</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01 02:00:00</td>      <td>-3.7</td>      <td>0.0</td>      <td>0.9</td>      <td>270.0</td>      <td>42</td>      <td>1015.2</td>      <td>0.0</td>      <td>1</td>      <td>2</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01 03:00:00</td>      <td>-4.0</td>      <td>0.0</td>      <td>1.0</td>      <td>290.0</td>      <td>44</td>      <td>1015.5</td>      <td>0.0</td>      <td>1</td>      <td>3</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01 04:00:00</td>      <td>-4.2</td>      <td>0.0</td>      <td>1.1</td>      <td>290.0</td>      <td>53</td>      <td>1015.5</td>      <td>0.0</td>      <td>1</td>      <td>4</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01 05:00:00</td>      <td>-4.4</td>      <td>0.0</td>      <td>0.8</td>      <td>290.0</td>      <td>54</td>      <td>1015.7</td>      <td>0.0</td>      <td>1</td>      <td>5</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>8754</td>      <td>2018-12-31 19:00:00</td>      <td>-3.1</td>      <td>0.0</td>      <td>2.1</td>      <td>270.0</td>      <td>43</td>      <td>1025.5</td>      <td>0.0</td>      <td>12</td>      <td>19</td>    </tr>    <tr>      <td>8755</td>      <td>2018-12-31 20:00:00</td>      <td>-3.7</td>      <td>0.0</td>      <td>0.8</td>      <td>340.0</td>      <td>39</td>      <td>1024.9</td>      <td>0.0</td>      <td>12</td>      <td>20</td>    </tr>    <tr>      <td>8756</td>      <td>2018-12-31 21:00:00</td>      <td>-4.6</td>      <td>0.0</td>      <td>1.1</td>      <td>290.0</td>      <td>44</td>      <td>1024.8</td>      <td>0.0</td>      <td>12</td>      <td>21</td>    </tr>    <tr>      <td>8757</td>      <td>2018-12-31 22:00:00</td>      <td>-5.4</td>      <td>0.0</td>      <td>1.3</td>      <td>270.0</td>      <td>46</td>      <td>1024.4</td>      <td>0.0</td>      <td>12</td>      <td>22</td>    </tr>    <tr>      <td>8758</td>      <td>2018-12-31 23:00:00</td>      <td>-5.2</td>      <td>0.0</td>      <td>1.6</td>      <td>320.0</td>      <td>47</td>      <td>1024.6</td>      <td>0.0</td>      <td>12</td>      <td>23</td>    </tr>  </tbody></table><p>8757 rows × 10 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df[<span class="string">"date"</span>] = pd.to_datetime(weather_df[<span class="string">'일시'</span>]).dt.strftime(<span class="string">'%Y-%m-%d'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df.drop(columns=[<span class="string">'일시'</span>], inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>기온(°C)</th>      <th>강수량(mm)</th>      <th>풍속(m/s)</th>      <th>풍향(16방위)</th>      <th>습도(%)</th>      <th>현지기압(hPa)</th>      <th>적설(cm)</th>      <th>month</th>      <th>hour</th>      <th>date</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>-3.3</td>      <td>0.0</td>      <td>0.7</td>      <td>360.0</td>      <td>41</td>      <td>1015.1</td>      <td>0.0</td>      <td>1</td>      <td>1</td>      <td>2018-01-01</td>    </tr>    <tr>      <td>1</td>      <td>-3.7</td>      <td>0.0</td>      <td>0.9</td>      <td>270.0</td>      <td>42</td>      <td>1015.2</td>      <td>0.0</td>      <td>1</td>      <td>2</td>      <td>2018-01-01</td>    </tr>    <tr>      <td>2</td>      <td>-4.0</td>      <td>0.0</td>      <td>1.0</td>      <td>290.0</td>      <td>44</td>      <td>1015.5</td>      <td>0.0</td>      <td>1</td>      <td>3</td>      <td>2018-01-01</td>    </tr>    <tr>      <td>3</td>      <td>-4.2</td>      <td>0.0</td>      <td>1.1</td>      <td>290.0</td>      <td>53</td>      <td>1015.5</td>      <td>0.0</td>      <td>1</td>      <td>4</td>      <td>2018-01-01</td>    </tr>    <tr>      <td>4</td>      <td>-4.4</td>      <td>0.0</td>      <td>0.8</td>      <td>290.0</td>      <td>54</td>      <td>1015.7</td>      <td>0.0</td>      <td>1</td>      <td>5</td>      <td>2018-01-01</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>8754</td>      <td>-3.1</td>      <td>0.0</td>      <td>2.1</td>      <td>270.0</td>      <td>43</td>      <td>1025.5</td>      <td>0.0</td>      <td>12</td>      <td>19</td>      <td>2018-12-31</td>    </tr>    <tr>      <td>8755</td>      <td>-3.7</td>      <td>0.0</td>      <td>0.8</td>      <td>340.0</td>      <td>39</td>      <td>1024.9</td>      <td>0.0</td>      <td>12</td>      <td>20</td>      <td>2018-12-31</td>    </tr>    <tr>      <td>8756</td>      <td>-4.6</td>      <td>0.0</td>      <td>1.1</td>      <td>290.0</td>      <td>44</td>      <td>1024.8</td>      <td>0.0</td>      <td>12</td>      <td>21</td>      <td>2018-12-31</td>    </tr>    <tr>      <td>8757</td>      <td>-5.4</td>      <td>0.0</td>      <td>1.3</td>      <td>270.0</td>      <td>46</td>      <td>1024.4</td>      <td>0.0</td>      <td>12</td>      <td>22</td>      <td>2018-12-31</td>    </tr>    <tr>      <td>8758</td>      <td>-5.2</td>      <td>0.0</td>      <td>1.6</td>      <td>320.0</td>      <td>47</td>      <td>1024.6</td>      <td>0.0</td>      <td>12</td>      <td>23</td>      <td>2018-12-31</td>    </tr>  </tbody></table><p>8757 rows × 10 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weather_df[<span class="string">'date'</span>] = weather_df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'date'</span>] = df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)</span><br></pre></td></tr></table></figure><blockquote><h3 id="기상-데이터와-판매량-데이터-merge"><a href="#기상-데이터와-판매량-데이터-merge" class="headerlink" title="기상 데이터와 판매량 데이터 merge"></a>기상 데이터와 판매량 데이터 merge</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 = pd.merge(df, weather_df, left_on=[<span class="string">'date'</span>, <span class="string">'hour'</span>], right_on=[<span class="string">'date'</span>, <span class="string">'hour'</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>weekofday</th>      <th>hour</th>      <th>count</th>      <th>기온(°C)</th>      <th>강수량(mm)</th>      <th>풍속(m/s)</th>      <th>풍향(16방위)</th>      <th>습도(%)</th>      <th>현지기압(hPa)</th>      <th>적설(cm)</th>      <th>month</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>0</td>      <td>12</td>      <td>2</td>      <td>1.5</td>      <td>0.0</td>      <td>2.8</td>      <td>290.0</td>      <td>20</td>      <td>1017.6</td>      <td>0.0</td>      <td>1</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>0</td>      <td>13</td>      <td>2</td>      <td>2.4</td>      <td>0.0</td>      <td>2.3</td>      <td>290.0</td>      <td>22</td>      <td>1016.7</td>      <td>0.0</td>      <td>1</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>0</td>      <td>14</td>      <td>1</td>      <td>3.7</td>      <td>0.0</td>      <td>2.1</td>      <td>230.0</td>      <td>24</td>      <td>1016.4</td>      <td>0.0</td>      <td>1</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>0</td>      <td>15</td>      <td>3</td>      <td>3.0</td>      <td>0.0</td>      <td>2.9</td>      <td>320.0</td>      <td>27</td>      <td>1016.1</td>      <td>0.0</td>      <td>1</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>0</td>      <td>16</td>      <td>4</td>      <td>3.0</td>      <td>0.0</td>      <td>2.5</td>      <td>230.0</td>      <td>28</td>      <td>1016.5</td>      <td>0.0</td>      <td>1</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>3860</td>      <td>2018-12-31</td>      <td>0</td>      <td>19</td>      <td>8</td>      <td>-3.1</td>      <td>0.0</td>      <td>2.1</td>      <td>270.0</td>      <td>43</td>      <td>1025.5</td>      <td>0.0</td>      <td>12</td>    </tr>    <tr>      <td>3861</td>      <td>2018-12-31</td>      <td>0</td>      <td>20</td>      <td>6</td>      <td>-3.7</td>      <td>0.0</td>      <td>0.8</td>      <td>340.0</td>      <td>39</td>      <td>1024.9</td>      <td>0.0</td>      <td>12</td>    </tr>    <tr>      <td>3862</td>      <td>2018-12-31</td>      <td>0</td>      <td>21</td>      <td>8</td>      <td>-4.6</td>      <td>0.0</td>      <td>1.1</td>      <td>290.0</td>      <td>44</td>      <td>1024.8</td>      <td>0.0</td>      <td>12</td>    </tr>    <tr>      <td>3863</td>      <td>2018-12-31</td>      <td>0</td>      <td>22</td>      <td>5</td>      <td>-5.4</td>      <td>0.0</td>      <td>1.3</td>      <td>270.0</td>      <td>46</td>      <td>1024.4</td>      <td>0.0</td>      <td>12</td>    </tr>    <tr>      <td>3864</td>      <td>2018-12-31</td>      <td>0</td>      <td>23</td>      <td>4</td>      <td>-5.2</td>      <td>0.0</td>      <td>1.6</td>      <td>320.0</td>      <td>47</td>      <td>1024.6</td>      <td>0.0</td>      <td>12</td>    </tr>  </tbody></table><p>3865 rows × 12 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.info()</span><br></pre></td></tr></table></figure><pre><code>&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;Int64Index: 3865 entries, 0 to 3864Data columns (total 12 columns):date         3865 non-null objectweekofday    3865 non-null int64hour         3865 non-null int64count        3865 non-null int64기온(°C)       3865 non-null float64강수량(mm)      3865 non-null float64풍속(m/s)      3865 non-null float64풍향(16방위)     3865 non-null float64습도(%)        3865 non-null int64현지기압(hPa)    3865 non-null float64적설(cm)       3865 non-null float64month        3865 non-null int64dtypes: float64(6), int64(5), object(1)memory usage: 392.5+ KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">df1.rename(columns=&#123;</span><br><span class="line">    <span class="string">'기온(°C)'</span> : <span class="string">'temperature'</span>,</span><br><span class="line">    <span class="string">'강수량(mm)'</span> : <span class="string">'rain'</span>,</span><br><span class="line">    <span class="string">'풍속(m/s)'</span> : <span class="string">'wind_speed'</span>,</span><br><span class="line">    <span class="string">'습도(%)'</span> : <span class="string">'moisture'</span>,</span><br><span class="line">    <span class="string">'현지기압(hPa)'</span> : <span class="string">'pressure'</span>,</span><br><span class="line">    <span class="string">'적설(cm)'</span> : <span class="string">'snow'</span></span><br><span class="line">&#125;, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><blockquote><h3 id="미세먼지-데이터-불러오기"><a href="#미세먼지-데이터-불러오기" class="headerlink" title="미세먼지 데이터 불러오기"></a>미세먼지 데이터 불러오기</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dust_df = pd.read_csv(<span class="string">'datas/dust.csv'</span>, encoding=<span class="string">'euc-kr'</span>, parse_dates=[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dust_df.drop(columns=[<span class="string">'지점'</span>, <span class="string">'지점명'</span>], inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dust_df[<span class="string">'month'</span>] = dust_df[<span class="string">'일시'</span>].dt.month</span><br><span class="line">dust_df[<span class="string">'hour'</span>] = dust_df[<span class="string">'일시'</span>].dt.hour</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dust_df.columns</span><br></pre></td></tr></table></figure><pre><code>Index([&apos;일시&apos;, &apos;1시간평균 미세먼지농도(㎍/㎥)&apos;, &apos;month&apos;, &apos;hour&apos;], dtype=&apos;object&apos;)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dust_df.rename(columns=&#123;</span><br><span class="line">    <span class="string">'일시'</span>:<span class="string">'date'</span>,</span><br><span class="line">    <span class="string">'1시간평균 미세먼지농도(㎍/㎥)'</span>:<span class="string">'PM10'</span></span><br><span class="line">&#125;, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dust_df[<span class="string">'date'</span>] = pd.to_datetime(dust_df[<span class="string">'date'</span>]).dt.strftime(<span class="string">'%Y-%m-%d'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dust_df</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>PM10</th>      <th>month</th>      <th>hour</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>22</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>21</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>20</td>      <td>1</td>      <td>2</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>27</td>      <td>1</td>      <td>3</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>25</td>      <td>1</td>      <td>4</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>7549</td>      <td>2018-12-31</td>      <td>35</td>      <td>12</td>      <td>19</td>    </tr>    <tr>      <td>7550</td>      <td>2018-12-31</td>      <td>22</td>      <td>12</td>      <td>20</td>    </tr>    <tr>      <td>7551</td>      <td>2018-12-31</td>      <td>22</td>      <td>12</td>      <td>21</td>    </tr>    <tr>      <td>7552</td>      <td>2018-12-31</td>      <td>18</td>      <td>12</td>      <td>22</td>    </tr>    <tr>      <td>7553</td>      <td>2018-12-31</td>      <td>24</td>      <td>12</td>      <td>23</td>    </tr>  </tbody></table><p>7554 rows × 4 columns</p></div><blockquote><h3 id="미세먼지-데이터도-합쳐줍니다"><a href="#미세먼지-데이터도-합쳐줍니다" class="headerlink" title="미세먼지 데이터도 합쳐줍니다"></a>미세먼지 데이터도 합쳐줍니다</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = pd.merge(df1, dust_df, left_on=[<span class="string">'date'</span>, <span class="string">'month'</span>, <span class="string">'hour'</span>], right_on=[<span class="string">'date'</span>, <span class="string">'month'</span>, <span class="string">'hour'</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>weekofday</th>      <th>hour</th>      <th>count</th>      <th>temperature</th>      <th>rain</th>      <th>wind_speed</th>      <th>풍향(16방위)</th>      <th>moisture</th>      <th>pressure</th>      <th>snow</th>      <th>month</th>      <th>PM10</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>0</td>      <td>12</td>      <td>2</td>      <td>1.5</td>      <td>0.0</td>      <td>2.8</td>      <td>290.0</td>      <td>20</td>      <td>1017.6</td>      <td>0.0</td>      <td>1</td>      <td>22</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>0</td>      <td>13</td>      <td>2</td>      <td>2.4</td>      <td>0.0</td>      <td>2.3</td>      <td>290.0</td>      <td>22</td>      <td>1016.7</td>      <td>0.0</td>      <td>1</td>      <td>31</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>0</td>      <td>14</td>      <td>1</td>      <td>3.7</td>      <td>0.0</td>      <td>2.1</td>      <td>230.0</td>      <td>24</td>      <td>1016.4</td>      <td>0.0</td>      <td>1</td>      <td>40</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>0</td>      <td>15</td>      <td>3</td>      <td>3.0</td>      <td>0.0</td>      <td>2.9</td>      <td>320.0</td>      <td>27</td>      <td>1016.1</td>      <td>0.0</td>      <td>1</td>      <td>47</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>0</td>      <td>16</td>      <td>4</td>      <td>3.0</td>      <td>0.0</td>      <td>2.5</td>      <td>230.0</td>      <td>28</td>      <td>1016.5</td>      <td>0.0</td>      <td>1</td>      <td>45</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>3288</td>      <td>2018-12-31</td>      <td>0</td>      <td>19</td>      <td>8</td>      <td>-3.1</td>      <td>0.0</td>      <td>2.1</td>      <td>270.0</td>      <td>43</td>      <td>1025.5</td>      <td>0.0</td>      <td>12</td>      <td>35</td>    </tr>    <tr>      <td>3289</td>      <td>2018-12-31</td>      <td>0</td>      <td>20</td>      <td>6</td>      <td>-3.7</td>      <td>0.0</td>      <td>0.8</td>      <td>340.0</td>      <td>39</td>      <td>1024.9</td>      <td>0.0</td>      <td>12</td>      <td>22</td>    </tr>    <tr>      <td>3290</td>      <td>2018-12-31</td>      <td>0</td>      <td>21</td>      <td>8</td>      <td>-4.6</td>      <td>0.0</td>      <td>1.1</td>      <td>290.0</td>      <td>44</td>      <td>1024.8</td>      <td>0.0</td>      <td>12</td>      <td>22</td>    </tr>    <tr>      <td>3291</td>      <td>2018-12-31</td>      <td>0</td>      <td>22</td>      <td>5</td>      <td>-5.4</td>      <td>0.0</td>      <td>1.3</td>      <td>270.0</td>      <td>46</td>      <td>1024.4</td>      <td>0.0</td>      <td>12</td>      <td>18</td>    </tr>    <tr>      <td>3292</td>      <td>2018-12-31</td>      <td>0</td>      <td>23</td>      <td>4</td>      <td>-5.2</td>      <td>0.0</td>      <td>1.6</td>      <td>320.0</td>      <td>47</td>      <td>1024.6</td>      <td>0.0</td>      <td>12</td>      <td>24</td>    </tr>  </tbody></table><p>3293 rows × 13 columns</p></div><blockquote><h3 id="주말-평일-여부-추가"><a href="#주말-평일-여부-추가" class="headerlink" title="주말 / 평일 여부 추가"></a>주말 / 평일 여부 추가</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">"holiday"</span>] = df2[<span class="string">"weekofday"</span>].apply(<span class="keyword">lambda</span> date: <span class="number">0</span> <span class="keyword">if</span> date &gt;= <span class="number">5</span> <span class="keyword">else</span> <span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>weekofday</th>      <th>hour</th>      <th>count</th>      <th>temperature</th>      <th>rain</th>      <th>wind_speed</th>      <th>풍향(16방위)</th>      <th>moisture</th>      <th>pressure</th>      <th>snow</th>      <th>month</th>      <th>PM10</th>      <th>holiday</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>0</td>      <td>12</td>      <td>2</td>      <td>1.5</td>      <td>0.0</td>      <td>2.8</td>      <td>290.0</td>      <td>20</td>      <td>1017.6</td>      <td>0.0</td>      <td>1</td>      <td>22</td>      <td>1</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>0</td>      <td>13</td>      <td>2</td>      <td>2.4</td>      <td>0.0</td>      <td>2.3</td>      <td>290.0</td>      <td>22</td>      <td>1016.7</td>      <td>0.0</td>      <td>1</td>      <td>31</td>      <td>1</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>0</td>      <td>14</td>      <td>1</td>      <td>3.7</td>      <td>0.0</td>      <td>2.1</td>      <td>230.0</td>      <td>24</td>      <td>1016.4</td>      <td>0.0</td>      <td>1</td>      <td>40</td>      <td>1</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>0</td>      <td>15</td>      <td>3</td>      <td>3.0</td>      <td>0.0</td>      <td>2.9</td>      <td>320.0</td>      <td>27</td>      <td>1016.1</td>      <td>0.0</td>      <td>1</td>      <td>47</td>      <td>1</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>0</td>      <td>16</td>      <td>4</td>      <td>3.0</td>      <td>0.0</td>      <td>2.5</td>      <td>230.0</td>      <td>28</td>      <td>1016.5</td>      <td>0.0</td>      <td>1</td>      <td>45</td>      <td>1</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>3288</td>      <td>2018-12-31</td>      <td>0</td>      <td>19</td>      <td>8</td>      <td>-3.1</td>      <td>0.0</td>      <td>2.1</td>      <td>270.0</td>      <td>43</td>      <td>1025.5</td>      <td>0.0</td>      <td>12</td>      <td>35</td>      <td>1</td>    </tr>    <tr>      <td>3289</td>      <td>2018-12-31</td>      <td>0</td>      <td>20</td>      <td>6</td>      <td>-3.7</td>      <td>0.0</td>      <td>0.8</td>      <td>340.0</td>      <td>39</td>      <td>1024.9</td>      <td>0.0</td>      <td>12</td>      <td>22</td>      <td>1</td>    </tr>    <tr>      <td>3290</td>      <td>2018-12-31</td>      <td>0</td>      <td>21</td>      <td>8</td>      <td>-4.6</td>      <td>0.0</td>      <td>1.1</td>      <td>290.0</td>      <td>44</td>      <td>1024.8</td>      <td>0.0</td>      <td>12</td>      <td>22</td>      <td>1</td>    </tr>    <tr>      <td>3291</td>      <td>2018-12-31</td>      <td>0</td>      <td>22</td>      <td>5</td>      <td>-5.4</td>      <td>0.0</td>      <td>1.3</td>      <td>270.0</td>      <td>46</td>      <td>1024.4</td>      <td>0.0</td>      <td>12</td>      <td>18</td>      <td>1</td>    </tr>    <tr>      <td>3292</td>      <td>2018-12-31</td>      <td>0</td>      <td>23</td>      <td>4</td>      <td>-5.2</td>      <td>0.0</td>      <td>1.6</td>      <td>320.0</td>      <td>47</td>      <td>1024.6</td>      <td>0.0</td>      <td>12</td>      <td>24</td>      <td>1</td>    </tr>  </tbody></table><p>3293 rows × 14 columns</p></div><blockquote><h3 id="강수량은-카테고리-값으로-변경"><a href="#강수량은-카테고리-값으로-변경" class="headerlink" title="강수량은 카테고리 값으로 변경"></a>강수량은 카테고리 값으로 변경</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'rain'</span>] = df2[<span class="string">'rain'</span>].apply(<span class="keyword">lambda</span> x: <span class="number">0</span> <span class="keyword">if</span> x == <span class="number">0</span> <span class="keyword">else</span> <span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>weekofday</th>      <th>hour</th>      <th>count</th>      <th>temperature</th>      <th>rain</th>      <th>wind_speed</th>      <th>풍향(16방위)</th>      <th>moisture</th>      <th>pressure</th>      <th>snow</th>      <th>month</th>      <th>PM10</th>      <th>holiday</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>0</td>      <td>12</td>      <td>2</td>      <td>1.5</td>      <td>0</td>      <td>2.8</td>      <td>290.0</td>      <td>20</td>      <td>1017.6</td>      <td>0.0</td>      <td>1</td>      <td>22</td>      <td>1</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>0</td>      <td>13</td>      <td>2</td>      <td>2.4</td>      <td>0</td>      <td>2.3</td>      <td>290.0</td>      <td>22</td>      <td>1016.7</td>      <td>0.0</td>      <td>1</td>      <td>31</td>      <td>1</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>0</td>      <td>14</td>      <td>1</td>      <td>3.7</td>      <td>0</td>      <td>2.1</td>      <td>230.0</td>      <td>24</td>      <td>1016.4</td>      <td>0.0</td>      <td>1</td>      <td>40</td>      <td>1</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>0</td>      <td>15</td>      <td>3</td>      <td>3.0</td>      <td>0</td>      <td>2.9</td>      <td>320.0</td>      <td>27</td>      <td>1016.1</td>      <td>0.0</td>      <td>1</td>      <td>47</td>      <td>1</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>0</td>      <td>16</td>      <td>4</td>      <td>3.0</td>      <td>0</td>      <td>2.5</td>      <td>230.0</td>      <td>28</td>      <td>1016.5</td>      <td>0.0</td>      <td>1</td>      <td>45</td>      <td>1</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>3288</td>      <td>2018-12-31</td>      <td>0</td>      <td>19</td>      <td>8</td>      <td>-3.1</td>      <td>0</td>      <td>2.1</td>      <td>270.0</td>      <td>43</td>      <td>1025.5</td>      <td>0.0</td>      <td>12</td>      <td>35</td>      <td>1</td>    </tr>    <tr>      <td>3289</td>      <td>2018-12-31</td>      <td>0</td>      <td>20</td>      <td>6</td>      <td>-3.7</td>      <td>0</td>      <td>0.8</td>      <td>340.0</td>      <td>39</td>      <td>1024.9</td>      <td>0.0</td>      <td>12</td>      <td>22</td>      <td>1</td>    </tr>    <tr>      <td>3290</td>      <td>2018-12-31</td>      <td>0</td>      <td>21</td>      <td>8</td>      <td>-4.6</td>      <td>0</td>      <td>1.1</td>      <td>290.0</td>      <td>44</td>      <td>1024.8</td>      <td>0.0</td>      <td>12</td>      <td>22</td>      <td>1</td>    </tr>    <tr>      <td>3291</td>      <td>2018-12-31</td>      <td>0</td>      <td>22</td>      <td>5</td>      <td>-5.4</td>      <td>0</td>      <td>1.3</td>      <td>270.0</td>      <td>46</td>      <td>1024.4</td>      <td>0.0</td>      <td>12</td>      <td>18</td>      <td>1</td>    </tr>    <tr>      <td>3292</td>      <td>2018-12-31</td>      <td>0</td>      <td>23</td>      <td>4</td>      <td>-5.2</td>      <td>0</td>      <td>1.6</td>      <td>320.0</td>      <td>47</td>      <td>1024.6</td>      <td>0.0</td>      <td>12</td>      <td>24</td>      <td>1</td>    </tr>  </tbody></table><p>3293 rows × 14 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = list(df2.columns)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a</span><br></pre></td></tr></table></figure><pre><code>[&apos;date&apos;, &apos;weekofday&apos;, &apos;hour&apos;, &apos;count&apos;, &apos;temperature&apos;, &apos;rain&apos;, &apos;wind_speed&apos;, &apos;풍향(16방위)&apos;, &apos;moisture&apos;, &apos;pressure&apos;, &apos;snow&apos;, &apos;month&apos;, &apos;PM10&apos;, &apos;holiday&apos;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a.remove(<span class="string">'date'</span>)</span><br><span class="line">a.remove(<span class="string">'count'</span>)</span><br><span class="line">a.remove(<span class="string">'풍향(16방위)'</span>)</span><br><span class="line">a.remove(<span class="string">'weekofday'</span>)</span><br><span class="line">a.remove(<span class="string">'month'</span>)</span><br><span class="line">a.remove(<span class="string">'hour'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1[<span class="string">'hour'</span>] = df1[<span class="string">'hour'</span>].astype(<span class="string">'int'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feature_names = [<span class="string">"scale(&#123;&#125;)"</span>.format(name) <span class="keyword">for</span> name <span class="keyword">in</span> a] + [<span class="string">'C(month) + C(hour) + C(holiday)'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feature_names</span><br></pre></td></tr></table></figure><pre><code>[&apos;scale(temperature)&apos;, &apos;scale(rain)&apos;, &apos;scale(wind_speed)&apos;, &apos;scale(moisture)&apos;, &apos;scale(pressure)&apos;, &apos;scale(snow)&apos;, &apos;scale(PM10)&apos;, &apos;scale(holiday)&apos;, &apos;C(month) + C(hour) + C(holiday)&apos;]</code></pre><blockquote><h3 id="예측모델-만들기"><a href="#예측모델-만들기" class="headerlink" title="예측모델 만들기"></a>예측모델 만들기</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model1 = sm.OLS.from_formula(<span class="string">"count ~  scale(temperature) + scale(wind_speed) + scale(moisture) + scale(pressure) + scale(snow) + scale(PM10) + C(rain) + C(holiday) + C(hour) + 0"</span>, df2)</span><br><span class="line">result1 = model1.fit()</span><br><span class="line">print(result1.summary(()))</span><br></pre></td></tr></table></figure><pre><code>                            OLS Regression Results                            ==============================================================================Dep. Variable:                     ()   R-squared:                       0.403Model:                            OLS   Adj. R-squared:                  0.399Method:                 Least Squares   F-statistic:                     91.99Date:                Mon, 11 May 2020   Prob (F-statistic):               0.00Time:                        16:11:40   Log-Likelihood:                -7124.4No. Observations:                3293   AIC:                         1.430e+04Df Residuals:                    3268   BIC:                         1.445e+04Df Model:                          24                                         Covariance Type:            nonrobust                                         ======================================================================================                         coef    std err          t      P&gt;|t|      [0.025      0.975]--------------------------------------------------------------------------------------C(rain)[0]             3.4146      0.151     22.587      0.000       3.118       3.711C(rain)[1]             3.7982      0.285     13.333      0.000       3.240       4.357C(holiday)[T.1]       -0.9657      0.079    -12.159      0.000      -1.121      -0.810C(hour)[T.1]          -0.3810      0.192     -1.979      0.048      -0.758      -0.004C(hour)[T.2]          -1.4257      1.232     -1.157      0.247      -3.841       0.990C(hour)[T.10]         -2.8899      2.129     -1.357      0.175      -7.065       1.285C(hour)[T.11]         -1.8479      0.958     -1.930      0.054      -3.725       0.030C(hour)[T.12]         -1.0319      0.243     -4.252      0.000      -1.508      -0.556C(hour)[T.13]         -0.9079      0.233     -3.893      0.000      -1.365      -0.451C(hour)[T.14]         -0.8310      0.235     -3.537      0.000      -1.292      -0.370C(hour)[T.15]         -0.6935      0.216     -3.211      0.001      -1.117      -0.270C(hour)[T.16]         -0.3117      0.205     -1.523      0.128      -0.713       0.089C(hour)[T.17]          1.0481      0.197      5.326      0.000       0.662       1.434C(hour)[T.18]          3.2446      0.190     17.104      0.000       2.873       3.617C(hour)[T.19]          3.5672      0.190     18.738      0.000       3.194       3.940C(hour)[T.20]          3.3160      0.191     17.395      0.000       2.942       3.690C(hour)[T.21]          2.5903      0.193     13.454      0.000       2.213       2.968C(hour)[T.22]          1.8951      0.190      9.999      0.000       1.524       2.267C(hour)[T.23]          0.9519      0.189      5.026      0.000       0.581       1.323scale(temperature)    -0.1818      0.066     -2.740      0.006      -0.312      -0.052scale(wind_speed)      0.0302      0.042      0.711      0.477      -0.053       0.114scale(moisture)        0.1098      0.050      2.193      0.028       0.012       0.208scale(pressure)        0.1676      0.068      2.476      0.013       0.035       0.300scale(snow)           -0.1219      0.038     -3.201      0.001      -0.197      -0.047scale(PM10)           -0.0586      0.039     -1.505      0.132      -0.135       0.018==============================================================================Omnibus:                      653.758   Durbin-Watson:                   1.729Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1969.755Skew:                           1.017   Prob(JB):                         0.00Kurtosis:                       6.196   Cond. No.                         82.3==============================================================================Warnings:[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.</code></pre><blockquote><h3 id="CCPR-플롯-그려보기"><a href="#CCPR-플롯-그려보기" class="headerlink" title="CCPR 플롯 그려보기"></a>CCPR 플롯 그려보기</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">8</span>, <span class="number">50</span>))</span><br><span class="line">sm.graphics.plot_ccpr_grid(result1, fig=fig)</span><br><span class="line">fig.suptitle(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/03/21/Chicken/Chicken_65_0.png" class><ul><li>R2 값이 0.4 정도로 낮아 실제 예측에 사용하기엔 좀 어려운 것 같다.</li><li>최근 5년치 데이터를 확보하여 추가로 분석해 볼 계획이다.</li></ul>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/03/21/Chicken/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - 하샤드 수 찾기</title>
      <link>https://yangjun-ux.github.io/2020/03/03/harshad_num/</link>
      <guid>https://yangjun-ux.github.io/2020/03/03/harshad_num/</guid>
      <pubDate>Tue, 03 Mar 2020 04:48:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습-레벨1&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습-레벨1&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습 - 레벨1&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습 - 레벨1&lt;/h3&gt;&lt;h4 id=&quot;하샤드-수-찾기&quot;&gt;&lt;a href=&quot;#하샤드-수-찾기&quot; class=&quot;headerlink&quot; title=&quot;하샤드 수 찾기&quot;&gt;&lt;/a&gt;하샤드 수 찾기&lt;/h4&gt;&lt;p&gt;숫자를 입력받아 각 자리 숫자의 합으로 나눠지면 True, 그렇지 않으면 False를 출력하는 함수를 만들어보세요&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습-레벨1"><a href="#Programmers-코딩테스트-연습-레벨1" class="headerlink" title="Programmers  코딩테스트 연습 - 레벨1"></a>Programmers  코딩테스트 연습 - 레벨1</h3><h4 id="하샤드-수-찾기"><a href="#하샤드-수-찾기" class="headerlink" title="하샤드 수 찾기"></a>하샤드 수 찾기</h4><p>숫자를 입력받아 각 자리 숫자의 합으로 나눠지면 True, 그렇지 않으면 False를 출력하는 함수를 만들어보세요</p><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><blockquote><h2 id="하샤드-수-찾기-1"><a href="#하샤드-수-찾기-1" class="headerlink" title="하샤드 수 찾기"></a>하샤드 수 찾기</h2></blockquote><p>양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수를 만들어보세요</p><blockquote><h3 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h3><table><thead><tr><th>x</th><th>return</th></tr></thead><tbody><tr><td>10</td><td>True</td></tr><tr><td>12</td><td>True</td></tr><tr><td>11</td><td>False</td></tr><tr><td>13</td><td>False</td></tr></tbody></table></blockquote><blockquote><h3 id="코드설명"><a href="#코드설명" class="headerlink" title="코드설명"></a>코드설명</h3><p>입력받은 숫자 x를 문자열로 바꾸어 리스트로 만들어준 후 for문을 이용해 리스트에서 값을 하나씩 받아 num2에 더해준다.<br>입력받은 숫자 x를 num2로 나누면 각 자리 숫자의 합과 나누어준 것과 같기 때문에 이를 이용해 값을 리턴한다.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(x)</span>:</span></span><br><span class="line">    ls = list(str(x))</span><br><span class="line">    num2 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> ls:</span><br><span class="line">        num1 = int(num)</span><br><span class="line">        num2 += num1</span><br><span class="line">        <span class="keyword">if</span> x % num2 == <span class="number">0</span>:</span><br><span class="line">            answer = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            answer = <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">12</span>)</span><br></pre></td></tr></table></figure><pre><code>True</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/03/03/harshad_num/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - 예산짜기</title>
      <link>https://yangjun-ux.github.io/2020/03/03/budget/</link>
      <guid>https://yangjun-ux.github.io/2020/03/03/budget/</guid>
      <pubDate>Tue, 03 Mar 2020 04:37:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습-레벨1&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습-레벨1&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습 - 레벨1&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습 - 레벨1&lt;/h3&gt;&lt;h4 id=&quot;예산짜기&quot;&gt;&lt;a href=&quot;#예산짜기&quot; class=&quot;headerlink&quot; title=&quot;예산짜기&quot;&gt;&lt;/a&gt;예산짜기&lt;/h4&gt;&lt;p&gt;부서별 신청한 예산이 들어있는 배열 d, 회사의 예산 budget를 입력받아 최대 몇 개 부서에 예산을 지원할 수 있는지 출력&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습-레벨1"><a href="#Programmers-코딩테스트-연습-레벨1" class="headerlink" title="Programmers  코딩테스트 연습 - 레벨1"></a>Programmers  코딩테스트 연습 - 레벨1</h3><h4 id="예산짜기"><a href="#예산짜기" class="headerlink" title="예산짜기"></a>예산짜기</h4><p>부서별 신청한 예산이 들어있는 배열 d, 회사의 예산 budget를 입력받아 최대 몇 개 부서에 예산을 지원할 수 있는지 출력</p><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><blockquote><h2 id="예산"><a href="#예산" class="headerlink" title="예산"></a>예산</h2></blockquote><p>A사에서는 각 부서에 필요한 물품을 지원해 주기 위해 부서별로 물품을 구매하는데 필요한 금액을 조사했습니다. 그러나, 전체 예산이 정해져 있기 때문에 모든 부서의 물품을 구매해 줄 수는 없습니다. 그래서 <strong>최대한 많은 부서의 물품</strong>을 구매해 줄 수 있도록 하려고 합니다.</p><p>물품을 구매해 줄 때는 각 부서가 신청한 금액만큼을 모두 지원해 줘야 합니다. 예를 들어 1,000원을 신청한 부서에는 정확히 1,000원을 지원해야 하며, 1,000원보다 적은 금액을 지원해 줄 수는 없습니다.</p><p>부서별로 신청한 금액이 들어있는 배열 d와 예산 budget이 주어질 때, 최대 몇 개의 부서에 물품을 지원할 수 있는지 리턴</p><blockquote><h3 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h3><table><thead><tr><th>d</th><th>budget</th><th>return</th></tr></thead><tbody><tr><td>[1, 3, 2, 5, 4]</td><td>9</td><td>3</td></tr><tr><td>[2, 2, 3, 3]</td><td>10</td><td>4</td></tr></tbody></table></blockquote><blockquote><h3 id="코드설명"><a href="#코드설명" class="headerlink" title="코드설명"></a>코드설명</h3><p>최대한 많은 부서에 예산을 배정하기 위해서는 예산이 적은 부서부터 줘야한다. 따라서 배열 d를 오름차순 정렬을 해준다.<br>for문을 이용해 배열 d에서 하나씩 값을 빼내 total에 더해주고, ls에 값을 추가해준다.<br>값을 더해준 후 total과 budget 값을 비교해 total이 더 크면 반복문을 멈추고 이전에 더한 부서의 예산은 범위를 초과하므로 -1을 해준 후 값을 출력한다.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(d, budget)</span>:</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    ls = []</span><br><span class="line">    d.sort()</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> d:</span><br><span class="line">        total += data</span><br><span class="line">        ls.append(data)</span><br><span class="line">        <span class="keyword">if</span> total &gt; budget:</span><br><span class="line">            result = len(ls) - <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result = len(d)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution([<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">4</span>], <span class="number">9</span>)</span><br></pre></td></tr></table></figure><pre><code>3</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/03/03/budget/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - 약수의 합 구하기</title>
      <link>https://yangjun-ux.github.io/2020/03/03/sum_aliquot/</link>
      <guid>https://yangjun-ux.github.io/2020/03/03/sum_aliquot/</guid>
      <pubDate>Mon, 02 Mar 2020 16:36:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습-레벨1&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습-레벨1&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습 - 레벨1&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습 - 레벨1&lt;/h3&gt;&lt;h4 id=&quot;약수의-합-구하기&quot;&gt;&lt;a href=&quot;#약수의-합-구하기&quot; class=&quot;headerlink&quot; title=&quot;약수의 합 구하기&quot;&gt;&lt;/a&gt;약수의 합 구하기&lt;/h4&gt;&lt;p&gt;숫자를 입력받아 해당 숫자의 모든 약수의 합을 출력하기&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습-레벨1"><a href="#Programmers-코딩테스트-연습-레벨1" class="headerlink" title="Programmers  코딩테스트 연습 - 레벨1"></a>Programmers  코딩테스트 연습 - 레벨1</h3><h4 id="약수의-합-구하기"><a href="#약수의-합-구하기" class="headerlink" title="약수의 합 구하기"></a>약수의 합 구하기</h4><p>숫자를 입력받아 해당 숫자의 모든 약수의 합을 출력하기</p><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><blockquote><h3 id="약수의-합-구하기-1"><a href="#약수의-합-구하기-1" class="headerlink" title="약수의 합 구하기"></a>약수의 합 구하기</h3></blockquote><h3 id="정수-n을-입력받아-n의-약수를-모두-더한-값을-리턴하는-함수-만들기"><a href="#정수-n을-입력받아-n의-약수를-모두-더한-값을-리턴하는-함수-만들기" class="headerlink" title="정수 n을 입력받아, n의 약수를 모두 더한 값을 리턴하는 함수 만들기"></a>정수 n을 입력받아, n의 약수를 모두 더한 값을 리턴하는 함수 만들기</h3><blockquote><h3 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h3><table><thead><tr><th>n</th><th>return</th></tr></thead><tbody><tr><td>12</td><td>28</td></tr><tr><td>5</td><td>6</td></tr></tbody></table></blockquote><blockquote><h3 id="코드설명"><a href="#코드설명" class="headerlink" title="코드설명"></a>코드설명</h3></blockquote><p>1부터 n까지의 숫자로 n을 나누어 나머지가 0이 되는 경우만 ls에 추가해주고, sum을 이용하여 더한 값을 출력한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(n)</span>:</span></span><br><span class="line">    ls = []</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> n % x == <span class="number">0</span>:</span><br><span class="line">            ls.append(x)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    answer = sum(ls)</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">12</span>)</span><br></pre></td></tr></table></figure><pre><code>28</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/03/03/sum_aliquot/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - 정수 내림차순으로 정렬</title>
      <link>https://yangjun-ux.github.io/2020/03/03/integer_DESC/</link>
      <guid>https://yangjun-ux.github.io/2020/03/03/integer_DESC/</guid>
      <pubDate>Mon, 02 Mar 2020 16:09:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습-레벨1&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습-레벨1&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습 - 레벨1&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습 - 레벨1&lt;/h3&gt;&lt;h4 id=&quot;정수-내림차순으로-정렬&quot;&gt;&lt;a href=&quot;#정수-내림차순으로-정렬&quot; class=&quot;headerlink&quot; title=&quot;정수 내림차순으로 정렬&quot;&gt;&lt;/a&gt;정수 내림차순으로 정렬&lt;/h4&gt;&lt;p&gt;숫자를 입력받아 각 자리수를 내림차순으로 정렬 한 후 출력&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습-레벨1"><a href="#Programmers-코딩테스트-연습-레벨1" class="headerlink" title="Programmers  코딩테스트 연습 - 레벨1"></a>Programmers  코딩테스트 연습 - 레벨1</h3><h4 id="정수-내림차순으로-정렬"><a href="#정수-내림차순으로-정렬" class="headerlink" title="정수 내림차순으로 정렬"></a>정수 내림차순으로 정렬</h4><p>숫자를 입력받아 각 자리수를 내림차순으로 정렬 한 후 출력</p><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><blockquote><h3 id="정수-내림차순으로-정렬-1"><a href="#정수-내림차순으로-정렬-1" class="headerlink" title="정수 내림차순으로 정렬"></a>정수 내림차순으로 정렬</h3></blockquote><h4 id="정수-n을-입력받아서-각-자릿수를-큰-것부터-작은-순으로-리턴"><a href="#정수-n을-입력받아서-각-자릿수를-큰-것부터-작은-순으로-리턴" class="headerlink" title="정수 n을 입력받아서 각 자릿수를 큰 것부터 작은 순으로 리턴"></a>정수 n을 입력받아서 각 자릿수를 큰 것부터 작은 순으로 리턴</h4><h4 id="n이-118372이면-873211을-리턴하면-됩니다"><a href="#n이-118372이면-873211을-리턴하면-됩니다" class="headerlink" title="n이 118372이면 873211을 리턴하면 됩니다."></a>n이 118372이면 873211을 리턴하면 됩니다.</h4><blockquote><h3 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h3><table><thead><tr><th>n</th><th>return</th></tr></thead><tbody><tr><td>118372</td><td>873211</td></tr></tbody></table></blockquote><blockquote><h3 id="코드설명"><a href="#코드설명" class="headerlink" title="코드설명"></a>코드설명</h3></blockquote><p>입력받은 숫자를 문자열로 바꾸고, 각 문자열을 하나씩 result에 집어넣고 내림차순으로 정렬한 뒤, 다시 합쳐서 정수타입으로 바꾸어 출력</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solutions</span><span class="params">(n)</span>:</span></span><br><span class="line">    result = []</span><br><span class="line">    data_1 = str(n)</span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> range(len(data_1)):</span><br><span class="line">        data_2 = data_1[idx]</span><br><span class="line">        result.append(data_2)</span><br><span class="line">    result.sort()</span><br><span class="line">    result_2 = result[::<span class="number">-1</span>]</span><br><span class="line">    answer = int(<span class="string">""</span>.join(result_2))</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solutions(<span class="number">118372</span>)</span><br></pre></td></tr></table></figure><pre><code>873211</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/03/03/integer_DESC/#disqus_thread</comments>
    </item>
    
    <item>
      <title>치킨 판매 데이터를 활용한 분석</title>
      <link>https://yangjun-ux.github.io/2020/02/26/Chicken_2018/</link>
      <guid>https://yangjun-ux.github.io/2020/02/26/Chicken_2018/</guid>
      <pubDate>Wed, 26 Feb 2020 10:16:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;치킨-판매-데이터를-활용한-분석&quot;&gt;&lt;a href=&quot;#치킨-판매-데이터를-활용한-분석&quot; class=&quot;headerlink&quot; title=&quot;치킨 판매 데이터를 활용한 분석&quot;&gt;&lt;/a&gt;치킨 판매 데이터를 활용한 분석&lt;/h3&gt;&lt;h4 id=&quot;2018-2019-비교&quot;&gt;&lt;a href=&quot;#2018-2019-비교&quot; class=&quot;headerlink&quot; title=&quot;2018, 2019 비교&quot;&gt;&lt;/a&gt;2018, 2019 비교&lt;/h4&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="치킨-판매-데이터를-활용한-분석"><a href="#치킨-판매-데이터를-활용한-분석" class="headerlink" title="치킨 판매 데이터를 활용한 분석"></a>치킨 판매 데이터를 활용한 분석</h3><h4 id="2018-2019-비교"><a href="#2018-2019-비교" class="headerlink" title="2018, 2019 비교"></a>2018, 2019 비교</h4><a id="more"></a><blockquote><h1 id="EDA-프로젝트-치킨-판매-데이터를-활용한-분석"><a href="#EDA-프로젝트-치킨-판매-데이터를-활용한-분석" class="headerlink" title="EDA 프로젝트 : 치킨 판매 데이터를 활용한 분석"></a>EDA 프로젝트 : 치킨 판매 데이터를 활용한 분석</h1></blockquote><h2 id="데이터"><a href="#데이터" class="headerlink" title="데이터"></a>데이터</h2><ul><li>서울시 관악구 청룡동에 위치한 ‘페리카나 치킨’ 의 2018, 2019년 치킨 판매 데이터를 활용</li><li>2018년 총 15539개의 데이터, 2019년 총 15185개의 데이터</li></ul><h2 id="가설"><a href="#가설" class="headerlink" title="가설"></a>가설</h2><h3 id="치킨집을-18년간-운영해온-Y씨는-다음과-같은-고민에-빠졌다"><a href="#치킨집을-18년간-운영해온-Y씨는-다음과-같은-고민에-빠졌다" class="headerlink" title="치킨집을 18년간 운영해온 Y씨는 다음과 같은 고민에 빠졌다."></a>치킨집을 18년간 운영해온 Y씨는 다음과 같은 고민에 빠졌다.</h3><h4 id="Y씨의-고민-가설"><a href="#Y씨의-고민-가설" class="headerlink" title="Y씨의 고민 - [가설]"></a>Y씨의 고민 - [가설]</h4><ol><li>여름과 겨울 중 언제 치킨이 더 많이 팔릴까?<ul><li>가설 : 추운 겨울에 더 많이 먹을 것이다.</li></ul></li><li>평일보다 주말에 더 많이 팔릴 것이다.</li><li>양념 vs 후라이드 vs 반반, 뼈 있는 치킨 vs 순살 치킨<ul><li>가설 : 반반을 가장 많이 선호, 뼈 있는 치킨을 선호</li></ul></li><li>봉천동 vs 신림동 중 어디서 더 많이 팔릴까?<ul><li>가설: 봉천동에서 더 많이 팔릴 것이다.</li></ul></li><li>평일 중에 하루를 쉬어야하는데 언제가 좋을까?<ul><li>가설: 평일 중 화요일이나 수요일에 쉬는 게 좋을 것이다.</li></ul></li><li>한달 중엔 언제 많이 먹을까?<ul><li>가설 : 월 초에 많이 먹을 것이다.</li></ul></li><li>2019년이 되면서 배달 앱의 비중이 커졌는데 2018년과 비교했을 때 어떤 변화가 있을까?</li></ol><blockquote><h2 id="데이터-전처리"><a href="#데이터-전처리" class="headerlink" title="데이터 전처리"></a>데이터 전처리</h2></blockquote><h1 id="2018년"><a href="#2018년" class="headerlink" title="2018년"></a>2018년</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"datas/chicken_2018.csv"</span>, parse_dates=[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> missingno <span class="keyword">as</span> msno</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msno.matrix(df)</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1c19bcc410&gt;</code></pre>{% asset_img Chicken_2018_5_1.png %}<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1 = df.drop(columns=[<span class="string">"연락처"</span>, <span class="string">"주문내역2"</span>])</span><br><span class="line">df1 = df1.dropna()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1.reset_index(drop=<span class="literal">True</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">df1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>12:06</td>      <td>봉천동</td>      <td>현금</td>      <td>양념치킨 - 1</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>12:19</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드 - 1</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>13:01</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드반양념반 - 1</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>13:48</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드 - 1</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>14:06</td>      <td>대학동</td>      <td>현금</td>      <td>B.투후라이드+양념 - 1</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>15534</td>      <td>2018-12-31</td>      <td>1:14</td>      <td>봉천동</td>      <td>카드</td>      <td>순살후라이드반양념반 - 1</td>    </tr>    <tr>      <td>15535</td>      <td>2018-12-31</td>      <td>1:16</td>      <td>봉천동</td>      <td>카드</td>      <td>순살양념 - 1</td>    </tr>    <tr>      <td>15536</td>      <td>2018-12-31</td>      <td>1:29</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드반양념반 - 1</td>    </tr>    <tr>      <td>15537</td>      <td>2018-12-31</td>      <td>1:31</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드반양념반 - 1</td>    </tr>    <tr>      <td>15538</td>      <td>2018-12-31</td>      <td>1:37</td>      <td>봉천동</td>      <td>현금</td>      <td>순살핫후라이드 - 1</td>    </tr>  </tbody></table><p>15539 rows × 5 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 판매일자를 datetime 타입으로 변경</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1[<span class="string">'판매일자'</span>] = pd.to_datetime(df1[<span class="string">'판매일자'</span>], format=<span class="string">'%Y-%m-%d'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 주소를 봉천동, 신림동, 기타로 분류</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1[<span class="string">'주소'</span>] = df1[<span class="string">'주소'</span>].apply(<span class="keyword">lambda</span> data: <span class="string">'봉천동'</span> <span class="keyword">if</span> <span class="string">'봉'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'서울대'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'청룡'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'관악경찰서'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'신림동'</span> <span class="keyword">if</span> <span class="string">'신림'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'대학'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'서림'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'서원'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'삼성'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'기타'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 판매일자 중 월만 뽑아서 새로운 컬럼 생성</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1[<span class="string">'month'</span>] = df1[<span class="string">'판매일자'</span>].dt.month</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1.dtypes</span><br></pre></td></tr></table></figure><pre><code>판매일자     datetime64[ns]시간               object주소               object결제구분             object주문내역1            objectmonth             int64dtype: object</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 판매일자 중 일만 뽑아서 새로운 컬럼 생성</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1[<span class="string">'date'</span>] = df1[<span class="string">'판매일자'</span>].dt.day</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 판매일자 중 해당되는 요일을 뽑아 새로운 컬럼 생성</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1[<span class="string">'weekday'</span>] = pd.to_datetime(df1[<span class="string">'판매일자'</span>]).dt.dayofweek</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>12:06</td>      <td>봉천동</td>      <td>현금</td>      <td>양념치킨 - 1</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>12:19</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드 - 1</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>13:01</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드반양념반 - 1</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>13:48</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드 - 1</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>14:06</td>      <td>신림동</td>      <td>현금</td>      <td>B.투후라이드+양념 - 1</td>      <td>1</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>15534</td>      <td>2018-12-31</td>      <td>1:14</td>      <td>봉천동</td>      <td>카드</td>      <td>순살후라이드반양념반 - 1</td>      <td>12</td>      <td>31</td>      <td>0</td>    </tr>    <tr>      <td>15535</td>      <td>2018-12-31</td>      <td>1:16</td>      <td>봉천동</td>      <td>카드</td>      <td>순살양념 - 1</td>      <td>12</td>      <td>31</td>      <td>0</td>    </tr>    <tr>      <td>15536</td>      <td>2018-12-31</td>      <td>1:29</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드반양념반 - 1</td>      <td>12</td>      <td>31</td>      <td>0</td>    </tr>    <tr>      <td>15537</td>      <td>2018-12-31</td>      <td>1:31</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드반양념반 - 1</td>      <td>12</td>      <td>31</td>      <td>0</td>    </tr>    <tr>      <td>15538</td>      <td>2018-12-31</td>      <td>1:37</td>      <td>봉천동</td>      <td>현금</td>      <td>순살핫후라이드 - 1</td>      <td>12</td>      <td>31</td>      <td>0</td>    </tr>  </tbody></table><p>15539 rows × 8 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 월에 따른 계절을 뽑아 새로운 컬럼 생성</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1[<span class="string">'계절'</span>] =[<span class="string">'겨울'</span> <span class="keyword">if</span> x == <span class="number">12</span> <span class="keyword">or</span> x == <span class="number">1</span> <span class="keyword">or</span> x == <span class="number">2</span> <span class="keyword">else</span> <span class="string">'봄'</span> <span class="keyword">if</span> x == <span class="number">3</span> <span class="keyword">or</span> x == <span class="number">4</span> <span class="keyword">or</span> x == <span class="number">5</span> <span class="keyword">else</span> <span class="string">'여름'</span> <span class="keyword">if</span> x == <span class="number">6</span> <span class="keyword">or</span> x == <span class="number">7</span> <span class="keyword">or</span> x == <span class="number">8</span> <span class="keyword">else</span> <span class="string">'가을'</span> <span class="keyword">if</span> x == <span class="number">9</span> <span class="keyword">or</span> x == <span class="number">10</span> <span class="keyword">or</span> x == <span class="number">11</span> <span class="keyword">else</span> <span class="string">'없음'</span> <span class="keyword">for</span> x <span class="keyword">in</span> df1[<span class="string">'month'</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1[<span class="string">'count'</span>] = <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 메뉴 전처리</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1[<span class="string">'주문내역1'</span>] = df1[<span class="string">'주문내역1'</span>].apply(<span class="keyword">lambda</span> data: <span class="string">'반반'</span> <span class="keyword">if</span> <span class="string">'후라이드반양념반'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'후라이드'</span> <span class="keyword">if</span> <span class="string">'후라이드'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'양념'</span> <span class="keyword">if</span> <span class="string">'양념'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'기타'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1[<span class="string">'순살, 뼈'</span>] = df[<span class="string">'주문내역1'</span>].apply(<span class="keyword">lambda</span> data: <span class="string">'순살'</span> <span class="keyword">if</span> <span class="string">'순살'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'뼈'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>12:06</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>12:19</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>13:01</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>13:48</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>14:06</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>15534</td>      <td>2018-12-31</td>      <td>1:14</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15535</td>      <td>2018-12-31</td>      <td>1:16</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15536</td>      <td>2018-12-31</td>      <td>1:29</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15537</td>      <td>2018-12-31</td>      <td>1:31</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15538</td>      <td>2018-12-31</td>      <td>1:37</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>15539 rows × 11 columns</p></div><h1 id="2019년"><a href="#2019년" class="headerlink" title="2019년"></a>2019년</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df3 = pd.read_csv(<span class="string">"datas/chicken_2019.csv"</span>, parse_dates=[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df3 = df3.drop(columns=[<span class="string">"연락처"</span>, <span class="string">"주문내역2"</span>])</span><br><span class="line">df3 = df3.dropna(thresh = <span class="number">1</span>, axis=<span class="number">0</span>)</span><br><span class="line">df3 = df3.dropna()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df3.reset_index(drop=<span class="literal">True</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">df3.tail(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>    </tr>  </thead>  <tbody>    <tr>      <td>15180</td>      <td>2019-12-31</td>      <td>00:42</td>      <td>봉천동</td>      <td>카드</td>      <td>순살후라이드반마늘반 - 1</td>    </tr>    <tr>      <td>15181</td>      <td>2019-12-31</td>      <td>00:48</td>      <td>봉천동</td>      <td>현금</td>      <td>양념반마늘반 - 1</td>    </tr>    <tr>      <td>15182</td>      <td>2019-12-31</td>      <td>00:51</td>      <td>봉천동</td>      <td>카드</td>      <td>날개후라이드반양념반 - 1</td>    </tr>    <tr>      <td>15183</td>      <td>2019-12-31</td>      <td>01:00</td>      <td>청룡동</td>      <td>카드</td>      <td>후라이드 - 1</td>    </tr>    <tr>      <td>15184</td>      <td>2019-12-31</td>      <td>01:01</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드반양념반 - 1</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = pd.read_csv(<span class="string">"datas/chicken_2019.csv"</span>, parse_dates=[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df2 = df2.drop(columns=[<span class="string">"연락처"</span>, <span class="string">"주문내역2"</span>])</span><br><span class="line">df2 = df2.dropna(thresh = <span class="number">1</span>, axis=<span class="number">0</span>)</span><br><span class="line">df2 = df2.dropna()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2.reset_index(drop=<span class="literal">True</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">df2.tail(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>    </tr>  </thead>  <tbody>    <tr>      <td>15180</td>      <td>2019-12-31</td>      <td>00:42</td>      <td>봉천동</td>      <td>카드</td>      <td>순살후라이드반마늘반 - 1</td>    </tr>    <tr>      <td>15181</td>      <td>2019-12-31</td>      <td>00:48</td>      <td>봉천동</td>      <td>현금</td>      <td>양념반마늘반 - 1</td>    </tr>    <tr>      <td>15182</td>      <td>2019-12-31</td>      <td>00:51</td>      <td>봉천동</td>      <td>카드</td>      <td>날개후라이드반양념반 - 1</td>    </tr>    <tr>      <td>15183</td>      <td>2019-12-31</td>      <td>01:00</td>      <td>청룡동</td>      <td>카드</td>      <td>후라이드 - 1</td>    </tr>    <tr>      <td>15184</td>      <td>2019-12-31</td>      <td>01:01</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드반양념반 - 1</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'판매일자'</span>] = pd.to_datetime(df2[<span class="string">'판매일자'</span>], format=<span class="string">'%Y-%m-%d'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'주소'</span>] = df2[<span class="string">'주소'</span>].apply(<span class="keyword">lambda</span> data: <span class="string">'봉천동'</span> <span class="keyword">if</span> <span class="string">'봉'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'서울대'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'청룡'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'관악경찰서'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'인헌동'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'신림동'</span> <span class="keyword">if</span> <span class="string">'신림'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'대학'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'서림'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'서원'</span> <span class="keyword">in</span> data <span class="keyword">or</span> <span class="string">'삼성'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'기타'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'month'</span>] = df2[<span class="string">'판매일자'</span>].dt.month</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'date'</span>] = df2[<span class="string">'판매일자'</span>].dt.day</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'weekday'</span>] = pd.to_datetime(df2[<span class="string">'판매일자'</span>]).dt.dayofweek</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'계절'</span>] =[<span class="string">'겨울'</span> <span class="keyword">if</span> x == <span class="number">12</span> <span class="keyword">or</span> x == <span class="number">1</span> <span class="keyword">or</span> x == <span class="number">2</span> <span class="keyword">else</span> <span class="string">'봄'</span> <span class="keyword">if</span> x == <span class="number">3</span> <span class="keyword">or</span> x == <span class="number">4</span> <span class="keyword">or</span> x == <span class="number">5</span> <span class="keyword">else</span> <span class="string">'여름'</span> <span class="keyword">if</span> x == <span class="number">6</span> <span class="keyword">or</span> x == <span class="number">7</span> <span class="keyword">or</span> x == <span class="number">8</span> <span class="keyword">else</span> <span class="string">'가을'</span> <span class="keyword">if</span> x == <span class="number">9</span> <span class="keyword">or</span> x == <span class="number">10</span> <span class="keyword">or</span> x == <span class="number">11</span> <span class="keyword">else</span> <span class="string">'없음'</span> <span class="keyword">for</span> x <span class="keyword">in</span> df2[<span class="string">'month'</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'count'</span>] = <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'주문내역1'</span>] = df2[<span class="string">'주문내역1'</span>].apply(<span class="keyword">lambda</span> data: <span class="string">'반반'</span> <span class="keyword">if</span> <span class="string">'후라이드반양념반'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'후라이드'</span> <span class="keyword">if</span> <span class="string">'후라이드'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'양념'</span> <span class="keyword">if</span> <span class="string">'양념'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'기타'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'순살, 뼈'</span>] = df3[<span class="string">'주문내역1'</span>].apply(<span class="keyword">lambda</span> data: <span class="string">'순살'</span> <span class="keyword">if</span> <span class="string">'순살'</span> <span class="keyword">in</span> data <span class="keyword">else</span> <span class="string">'뼈'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2019-01-01</td>      <td>12:46</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>1</td>      <td>2019-01-01</td>      <td>12:47</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2</td>      <td>2019-01-01</td>      <td>13:22</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>3</td>      <td>2019-01-01</td>      <td>13:26</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>4</td>      <td>2019-01-01</td>      <td>13:40</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>15180</td>      <td>2019-12-31</td>      <td>00:42</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>15181</td>      <td>2019-12-31</td>      <td>00:48</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15182</td>      <td>2019-12-31</td>      <td>00:51</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15183</td>      <td>2019-12-31</td>      <td>01:00</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15184</td>      <td>2019-12-31</td>      <td>01:01</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>15185 rows × 11 columns</p></div><blockquote><h3 id="2018-2019-월별-치킨-판매량"><a href="#2018-2019-월별-치킨-판매량" class="headerlink" title="2018, 2019 월별 치킨 판매량"></a>2018, 2019 월별 치킨 판매량</h3></blockquote><ul><li>12월과 1월에 가장 판매량이 높았고, 7월과 9월에 판매량이 낮았다.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2_month = df2.groupby([<span class="string">'month'</span>]) [<span class="string">'count'</span>].sum().reset_index()</span><br><span class="line">df1_month = df1.groupby([<span class="string">'month'</span>]) [<span class="string">'count'</span>].sum().reset_index()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line">ax1 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">ax2 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">sns.countplot(df1[<span class="string">'month'</span>], palette=(<span class="string">"husl"</span>), ax=ax1)</span><br><span class="line">sns.countplot(df2[<span class="string">'month'</span>], palette=sns.cubehelix_palette(<span class="number">8</span>, start=<span class="number">2</span>, rot=<span class="number">0</span>, dark=<span class="number">0</span>, light=<span class="number">.95</span>, reverse=<span class="literal">True</span>), ax=ax2)</span><br><span class="line">ax1.set_title(<span class="string">"2018년 월별 치킨 판매량"</span>)</span><br><span class="line">ax2.set_title(<span class="string">"2019년 월별 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_47_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(df2_month[<span class="string">'month'</span>], df2_month[<span class="string">'count'</span>], <span class="string">"r*:"</span>, label=<span class="string">'2019'</span>)</span><br><span class="line">plt.plot(df1_month[<span class="string">'month'</span>], df1_month[<span class="string">'count'</span>], <span class="string">"g^:"</span>, label=<span class="string">'2018'</span>)</span><br><span class="line">plt.plot(df2_month[<span class="string">'month'</span>], df2_month[<span class="string">'count'</span>] - df1_month[<span class="string">'count'</span>], <span class="string">"bo:"</span>, label=<span class="string">'차이'</span>)</span><br><span class="line">plt.title(<span class="string">"2018, 2019 비교 그래프"</span>)</span><br><span class="line">plt.legend(loc=<span class="number">0</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_48_0.png" class><blockquote><h3 id="2018-2019-계절별-치킨-판매량"><a href="#2018-2019-계절별-치킨-판매량" class="headerlink" title="2018, 2019 계절별 치킨 판매량"></a>2018, 2019 계절별 치킨 판매량</h3></blockquote><ul><li>겨울에 가장 많이 시켜먹었고, 여름에 가장 적게 시켜먹었다.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line">ax1 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">ax2 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">sns.countplot(df1[<span class="string">'계절'</span>], palette=(<span class="string">"husl"</span>), ax=ax1)</span><br><span class="line">sns.countplot(df2[<span class="string">'계절'</span>], palette=sns.cubehelix_palette(<span class="number">8</span>, start=<span class="number">2</span>, rot=<span class="number">0</span>, dark=<span class="number">0</span>, light=<span class="number">.95</span>, reverse=<span class="literal">True</span>), ax=ax2)</span><br><span class="line">ax1.set_title(<span class="string">"2018년 계절별 치킨 판매량"</span>)</span><br><span class="line">ax2.set_title(<span class="string">"2019년 계절별 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_50_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2_season = df2.groupby([<span class="string">'계절'</span>]) [<span class="string">'count'</span>].sum().reset_index()</span><br><span class="line">df1_season = df1.groupby([<span class="string">'계절'</span>]) [<span class="string">'count'</span>].sum().reset_index()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2_season = df2_season.reindex(index = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line">df1_season = df1_season.reindex(index = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(df2_season[<span class="string">'계절'</span>], df2_season[<span class="string">'count'</span>], <span class="string">"r*:"</span>, label=<span class="string">'2019'</span>)</span><br><span class="line">plt.plot(df1_season[<span class="string">'계절'</span>], df1_season[<span class="string">'count'</span>], <span class="string">"g^:"</span>, label=<span class="string">'2018'</span>)</span><br><span class="line">plt.plot(df2_season[<span class="string">'계절'</span>], df2_season[<span class="string">'count'</span>] - df1_season[<span class="string">'count'</span>], <span class="string">"bo:"</span>, label=<span class="string">'차이'</span>)</span><br><span class="line">plt.title(<span class="string">"2018, 2019 비교 그래프"</span>)</span><br><span class="line">plt.legend(loc=<span class="number">0</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_53_0.png" class><blockquote><h3 id="2018-2019-요일별-치킨-판매량"><a href="#2018-2019-요일별-치킨-판매량" class="headerlink" title="2018, 2019 요일별 치킨 판매량"></a>2018, 2019 요일별 치킨 판매량</h3></blockquote><ul><li>2018년은 목요일에 가장 판매량이 적었으며, 토요일과 일요일에 판매량이 높았다.</li><li>2019년은 화요일에 가장 판매량이 적었으며, 토요일과 일요일에 판매량이 높았다.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line">ax1 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">ax2 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">sns.countplot(df1[<span class="string">'weekday'</span>], palette=(<span class="string">"husl"</span>), ax=ax1)</span><br><span class="line">sns.countplot(df2[<span class="string">'weekday'</span>], palette=sns.cubehelix_palette(<span class="number">8</span>, start=<span class="number">2</span>, rot=<span class="number">0</span>, dark=<span class="number">0</span>, light=<span class="number">.95</span>, reverse=<span class="literal">True</span>), ax=ax2)</span><br><span class="line">ax1.set_title(<span class="string">"2018년 요일별 치킨 판매량"</span>)</span><br><span class="line">ax2.set_title(<span class="string">"2019년 요일별 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_55_0.png" class><img src="https://raw.githubusercontent.com/yangjun-ux/image/master/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202020-02-21%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%201.34.47.png"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2_week = df2.groupby([<span class="string">'weekday'</span>]) [<span class="string">'count'</span>].sum().reset_index()</span><br><span class="line">df1_week = df1.groupby([<span class="string">'weekday'</span>]) [<span class="string">'count'</span>].sum().reset_index()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(df2_week[<span class="string">'weekday'</span>], df2_week[<span class="string">'count'</span>], <span class="string">"r*:"</span>, label=<span class="string">'2019'</span>)</span><br><span class="line">plt.plot(df1_week[<span class="string">'weekday'</span>], df1_week[<span class="string">'count'</span>], <span class="string">"g^:"</span>, label=<span class="string">'2018'</span>)</span><br><span class="line">plt.plot(df2_week[<span class="string">'weekday'</span>], df2_week[<span class="string">'count'</span>] - df1_week[<span class="string">'count'</span>], <span class="string">"bo:"</span>, label=<span class="string">'차이'</span>)</span><br><span class="line">plt.title(<span class="string">"2018, 2019 비교 그래프"</span>)</span><br><span class="line">plt.legend(loc=<span class="number">0</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_58_0.png" class><blockquote><h3 id="2018년-동별-치킨-판매량"><a href="#2018년-동별-치킨-판매량" class="headerlink" title="2018년 동별 치킨 판매량"></a>2018년 동별 치킨 판매량</h3></blockquote><ul><li>봉천동이 압도적으로 높았다</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line">ax1 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">ax2 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">sns.countplot(df1[<span class="string">'주소'</span>], palette=(<span class="string">"husl"</span>), ax=ax1)</span><br><span class="line">sns.countplot(df2[<span class="string">'주소'</span>], palette=sns.cubehelix_palette(<span class="number">8</span>, start=<span class="number">2</span>, rot=<span class="number">0</span>, dark=<span class="number">0</span>, light=<span class="number">.95</span>, reverse=<span class="literal">True</span>), ax=ax2)</span><br><span class="line">ax1.set_title(<span class="string">"2018년 동별 치킨 판매량"</span>)</span><br><span class="line">ax2.set_title(<span class="string">"2019년 동별 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_60_0.png" class><blockquote><h3 id="메뉴-분석"><a href="#메뉴-분석" class="headerlink" title="메뉴 분석"></a>메뉴 분석</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line">ax1 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">ax2 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">sns.countplot(df1[<span class="string">'주문내역1'</span>], palette=(<span class="string">"husl"</span>), ax=ax1, order=df1[<span class="string">'주문내역1'</span>].value_counts().index)</span><br><span class="line">sns.countplot(df2[<span class="string">'주문내역1'</span>], palette=sns.cubehelix_palette(<span class="number">8</span>, start=<span class="number">2</span>, rot=<span class="number">0</span>, dark=<span class="number">0</span>, light=<span class="number">.95</span>, reverse=<span class="literal">True</span>), ax=ax2, order=df1[<span class="string">'주문내역1'</span>].value_counts().index)</span><br><span class="line">ax1.set_title(<span class="string">"2018년 메뉴별 판매량"</span>)</span><br><span class="line">ax2.set_title(<span class="string">"2019년 메뉴별 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_62_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2_menu = df2.groupby([<span class="string">'주문내역1'</span>]) [<span class="string">'count'</span>].sum().reset_index()</span><br><span class="line">df1_menu = df1.groupby([<span class="string">'주문내역1'</span>]) [<span class="string">'count'</span>].sum().reset_index()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(df2_menu[<span class="string">'주문내역1'</span>], df2_menu[<span class="string">'count'</span>], <span class="string">"r*:"</span>, label=<span class="string">'2019'</span>)</span><br><span class="line">plt.plot(df1_menu[<span class="string">'주문내역1'</span>], df1_menu[<span class="string">'count'</span>], <span class="string">"g^:"</span>, label=<span class="string">'2018'</span>)</span><br><span class="line">plt.plot(df2_menu[<span class="string">'주문내역1'</span>], df2_menu[<span class="string">'count'</span>] - df1_menu[<span class="string">'count'</span>], <span class="string">"bo:"</span>, label=<span class="string">'차이'</span>)</span><br><span class="line">plt.title(<span class="string">"2018, 2019 비교 그래프"</span>)</span><br><span class="line">plt.legend(loc=<span class="number">0</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_64_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">10</span>))</span><br><span class="line">ax1 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">ax2 = fig.add_subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">sns.countplot(df1[<span class="string">'순살, 뼈'</span>], palette=(<span class="string">"husl"</span>), ax=ax1, order=df1[<span class="string">'순살, 뼈'</span>].value_counts().index)</span><br><span class="line">sns.countplot(df2[<span class="string">'순살, 뼈'</span>], palette=sns.cubehelix_palette(<span class="number">8</span>, start=<span class="number">2</span>, rot=<span class="number">0</span>, dark=<span class="number">0</span>, light=<span class="number">.95</span>, reverse=<span class="literal">True</span>), ax=ax2, order=df1[<span class="string">'순살, 뼈'</span>].value_counts().index)</span><br><span class="line">ax1.set_title(<span class="string">"2018년 순살 vs 뼈 판매량"</span>)</span><br><span class="line">ax2.set_title(<span class="string">"2019년 순살 vs 뼈 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_65_0.png" class><blockquote><h3 id="2018년-월별-분석"><a href="#2018년-월별-분석" class="headerlink" title="2018년 월별 분석"></a>2018년 월별 분석</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jan = df1[df1[<span class="string">'month'</span>] == <span class="number">1</span>]</span><br><span class="line">jan</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>0</td>      <td>2018-01-01</td>      <td>12:06</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>1</td>      <td>2018-01-01</td>      <td>12:19</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2</td>      <td>2018-01-01</td>      <td>13:01</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>3</td>      <td>2018-01-01</td>      <td>13:48</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>4</td>      <td>2018-01-01</td>      <td>14:06</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>1447</td>      <td>2018-01-31</td>      <td>23:09</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>31</td>      <td>2</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>1448</td>      <td>2018-01-31</td>      <td>23:55</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>31</td>      <td>2</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>1449</td>      <td>2018-01-31</td>      <td>23:57</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>31</td>      <td>2</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>1450</td>      <td>2018-01-31</td>      <td>0:29</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>1</td>      <td>31</td>      <td>2</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>1451</td>      <td>2018-01-31</td>      <td>1:43</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>1</td>      <td>31</td>      <td>2</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>    </tr>  </tbody></table><p>1452 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(jan[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"1월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_69_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1월 데이터를 주 별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1_1 = df1.set_index(<span class="string">'판매일자'</span>)</span><br><span class="line">df1_1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-01-01</td>      <td>12:06</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>12:19</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>13:01</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>13:48</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>14:06</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:14</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:16</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:29</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:31</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:37</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>15539 rows × 10 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_1 = df1_1[<span class="string">'2018-01-01'</span>:<span class="string">'2018-01-07'</span>]</span><br><span class="line">a_1[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-01-01</td>      <td>12:06</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>12:19</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>13:01</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>13:48</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>14:06</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-01-07</td>      <td>0:18</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>7</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-07</td>      <td>0:23</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>7</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-07</td>      <td>1:22</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>7</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-07</td>      <td>1:24</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>1</td>      <td>7</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-07</td>      <td>1:32</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>1</td>      <td>7</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>336 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_1 = df1_1[<span class="string">'2018-01-08'</span>:<span class="string">'2018-01-14'</span>]</span><br><span class="line">b_1[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-01-08</td>      <td>13:27</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>8</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-01-08</td>      <td>14:50</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>8</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-01-08</td>      <td>14:58</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>1</td>      <td>8</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-01-08</td>      <td>16:43</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>1</td>      <td>8</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-01-08</td>      <td>17:42</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>8</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-01-14</td>      <td>0:36</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>14</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-01-14</td>      <td>1:20</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>1</td>      <td>14</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-01-14</td>      <td>1:35</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>14</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-01-14</td>      <td>1:46</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>14</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-01-14</td>      <td>1:48</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>14</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>  </tbody></table><p>372 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_1 = df1_1[<span class="string">'2018-01-15'</span>:<span class="string">'2018-01-21'</span>]</span><br><span class="line">c_1[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-01-15</td>      <td>12:35</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>15</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-01-15</td>      <td>12:39</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>1</td>      <td>15</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-01-15</td>      <td>12:46</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>15</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-01-15</td>      <td>16:03</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>15</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-01-15</td>      <td>16:45</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>15</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-01-21</td>      <td>23:16</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>21</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-01-21</td>      <td>23:29</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>21</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-01-21</td>      <td>0:33</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>21</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-01-21</td>      <td>0:51</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>1</td>      <td>21</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-01-21</td>      <td>1:16</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>1</td>      <td>21</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>  </tbody></table><p>299 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_1 = df1_1[<span class="string">'2018-01-22'</span>:<span class="string">'2018-01-28'</span>]</span><br><span class="line">d_1[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-01-22</td>      <td>13:50</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>22</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-22</td>      <td>15:12</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>1</td>      <td>22</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-22</td>      <td>15:58</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>1</td>      <td>22</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-22</td>      <td>17:24</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>1</td>      <td>22</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-22</td>      <td>17:42</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>1</td>      <td>22</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-01-28</td>      <td>23:32</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>28</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-28</td>      <td>23:33</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>28</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-28</td>      <td>23:53</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>28</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-28</td>      <td>0:49</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>1</td>      <td>28</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-28</td>      <td>1:33</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>28</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>382 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jan_week = pd.concat([a_1, b_1, c_1, d_1], axis=<span class="number">0</span>)</span><br><span class="line">jan_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-01-01</td>      <td>12:06</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>12:19</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>13:01</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>13:48</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>14:06</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-01-28</td>      <td>23:32</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>28</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-28</td>      <td>23:33</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>28</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-28</td>      <td>23:53</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>28</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-28</td>      <td>0:49</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>1</td>      <td>28</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-01-28</td>      <td>1:33</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>28</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>1389 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_jan = jan_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_jan</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>52.0</td>      <td>40.0</td>      <td>36.0</td>      <td>34.0</td>      <td>32.0</td>      <td>68.0</td>      <td>74.0</td>    </tr>    <tr>      <td>2주</td>      <td>39.0</td>      <td>30.0</td>      <td>46.0</td>      <td>52.0</td>      <td>59.0</td>      <td>70.0</td>      <td>76.0</td>    </tr>    <tr>      <td>3주</td>      <td>32.0</td>      <td>32.0</td>      <td>NaN</td>      <td>41.0</td>      <td>62.0</td>      <td>62.0</td>      <td>70.0</td>    </tr>    <tr>      <td>4주</td>      <td>31.0</td>      <td>45.0</td>      <td>45.0</td>      <td>53.0</td>      <td>61.0</td>      <td>76.0</td>      <td>71.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_jan, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 1월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_78_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">feb = df1[df1[<span class="string">'month'</span>] == <span class="number">2</span>]</span><br><span class="line">feb</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>1452</td>      <td>2018-02-01</td>      <td>14:21</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>2</td>      <td>1</td>      <td>3</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>1453</td>      <td>2018-02-01</td>      <td>14:44</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>2</td>      <td>1</td>      <td>3</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>1454</td>      <td>2018-02-01</td>      <td>15:10</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>1</td>      <td>3</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>1455</td>      <td>2018-02-01</td>      <td>17:40</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>1</td>      <td>3</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>1456</td>      <td>2018-02-01</td>      <td>17:55</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>2</td>      <td>1</td>      <td>3</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2728</td>      <td>2018-02-28</td>      <td>0:47</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>28</td>      <td>2</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2729</td>      <td>2018-02-28</td>      <td>1:00</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>28</td>      <td>2</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2730</td>      <td>2018-02-28</td>      <td>1:02</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>28</td>      <td>2</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2731</td>      <td>2018-02-28</td>      <td>1:03</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>28</td>      <td>2</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2732</td>      <td>2018-02-28</td>      <td>1:06</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>28</td>      <td>2</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>1281 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(feb[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"2월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_81_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2월 데이터를 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_2 = df1_1[<span class="string">'2018-01-29'</span>:<span class="string">'2018-02-04'</span>]</span><br><span class="line">a_2[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-01-30</td>      <td>15:09</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>1</td>      <td>30</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-30</td>      <td>15:34</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>30</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-30</td>      <td>16:05</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>1</td>      <td>30</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-30</td>      <td>16:50</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>30</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-30</td>      <td>17:24</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>30</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-02-04</td>      <td>22:26</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>2</td>      <td>4</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-04</td>      <td>22:38</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>4</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-04</td>      <td>22:48</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>2</td>      <td>4</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-04</td>      <td>23:13</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>4</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-04</td>      <td>23:35</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>4</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>287 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_2 = df1_1[<span class="string">'2018-02-05'</span>:<span class="string">'2018-02-11'</span>]</span><br><span class="line">b_2[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-02-05</td>      <td>17:18</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>5</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-02-05</td>      <td>17:53</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>5</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-02-05</td>      <td>17:55</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>2</td>      <td>5</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-02-05</td>      <td>18:00</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>2</td>      <td>5</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-02-05</td>      <td>18:13</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>2</td>      <td>5</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-02-11</td>      <td>23:41</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>2</td>      <td>11</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-02-11</td>      <td>0:09</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>2</td>      <td>11</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-02-11</td>      <td>0:15</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>2</td>      <td>11</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-02-11</td>      <td>1:22</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>2</td>      <td>11</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-02-11</td>      <td>1:53</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>11</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>  </tbody></table><p>332 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_2 = df1_1[<span class="string">'2018-02-12'</span>:<span class="string">'2018-02-18'</span>]</span><br><span class="line">c_2[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-02-12</td>      <td>15:39</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>12</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-02-12</td>      <td>15:40</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>2</td>      <td>12</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-02-12</td>      <td>16:28</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>12</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-02-12</td>      <td>16:59</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>2</td>      <td>12</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-02-12</td>      <td>17:25</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>2</td>      <td>12</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-02-18</td>      <td>23:11</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>18</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-02-18</td>      <td>23:20</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>2</td>      <td>18</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-02-18</td>      <td>23:41</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>18</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-02-18</td>      <td>23:42</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>18</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-02-18</td>      <td>23:46</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>2</td>      <td>18</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>  </tbody></table><p>215 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_2 = df1_1[<span class="string">'2018-02-19'</span>:<span class="string">'2018-02-25'</span>]</span><br><span class="line">d_2[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-02-19</td>      <td>15:26</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>2</td>      <td>19</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-19</td>      <td>15:43</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>19</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-19</td>      <td>16:28</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>2</td>      <td>19</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-19</td>      <td>16:55</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>2</td>      <td>19</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-19</td>      <td>17:28</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>19</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-02-25</td>      <td>23:40</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>2</td>      <td>25</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-25</td>      <td>23:48</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>2</td>      <td>25</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-25</td>      <td>23:56</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>2</td>      <td>25</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-25</td>      <td>0:56</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>25</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-25</td>      <td>1:30</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>2</td>      <td>25</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>375 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">feb_week = pd.concat([a_2, b_2, c_2, d_2], axis=<span class="number">0</span>)</span><br><span class="line">feb_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-01-30</td>      <td>15:09</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>1</td>      <td>30</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-30</td>      <td>15:34</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>30</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-30</td>      <td>16:05</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>1</td>      <td>30</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-30</td>      <td>16:50</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>30</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-30</td>      <td>17:24</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>30</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-02-25</td>      <td>23:40</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>2</td>      <td>25</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-25</td>      <td>23:48</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>2</td>      <td>25</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-25</td>      <td>23:56</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>2</td>      <td>25</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-25</td>      <td>0:56</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>25</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-02-25</td>      <td>1:30</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>2</td>      <td>25</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>1209 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_feb = feb_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_feb</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>NaN</td>      <td>24.0</td>      <td>39.0</td>      <td>47.0</td>      <td>55.0</td>      <td>57.0</td>      <td>65.0</td>    </tr>    <tr>      <td>2주</td>      <td>37.0</td>      <td>48.0</td>      <td>39.0</td>      <td>31.0</td>      <td>53.0</td>      <td>62.0</td>      <td>62.0</td>    </tr>    <tr>      <td>3주</td>      <td>38.0</td>      <td>33.0</td>      <td>40.0</td>      <td>NaN</td>      <td>NaN</td>      <td>54.0</td>      <td>50.0</td>    </tr>    <tr>      <td>4주</td>      <td>40.0</td>      <td>43.0</td>      <td>53.0</td>      <td>45.0</td>      <td>57.0</td>      <td>77.0</td>      <td>60.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_feb, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 2월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_89_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 3월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mar = df1[df1[<span class="string">'month'</span>] == <span class="number">3</span>]</span><br><span class="line">mar</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>2733</td>      <td>2018-03-01</td>      <td>12:44</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>1</td>      <td>3</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>2734</td>      <td>2018-03-01</td>      <td>12:46</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>1</td>      <td>3</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>2735</td>      <td>2018-03-01</td>      <td>14:05</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>1</td>      <td>3</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>2736</td>      <td>2018-03-01</td>      <td>14:46</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>3</td>      <td>1</td>      <td>3</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>2737</td>      <td>2018-03-01</td>      <td>14:47</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>3</td>      <td>1</td>      <td>3</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>4052</td>      <td>2018-03-31</td>      <td>23:17</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>3</td>      <td>31</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>4053</td>      <td>2018-03-31</td>      <td>23:18</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>31</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>4054</td>      <td>2018-03-31</td>      <td>23:29</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>31</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>4055</td>      <td>2018-03-31</td>      <td>0:00</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>31</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>4056</td>      <td>2018-03-31</td>      <td>1:08</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>3</td>      <td>31</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>1324 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(mar[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"3월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_92_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 3월 데이터를 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_3 = df1_1[<span class="string">'2018-02-26'</span>:<span class="string">'2018-03-04'</span>]</span><br><span class="line">a_3[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_3</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-02-26</td>      <td>14:41</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>26</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-26</td>      <td>16:12</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>26</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-26</td>      <td>16:52</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>2</td>      <td>26</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-26</td>      <td>17:11</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>26</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-26</td>      <td>17:12</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>26</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-03-04</td>      <td>23:11</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>4</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-03-04</td>      <td>23:47</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>3</td>      <td>4</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-03-04</td>      <td>1:05</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>3</td>      <td>4</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-03-04</td>      <td>1:15</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>3</td>      <td>4</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-03-04</td>      <td>1:38</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>3</td>      <td>4</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>338 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_3 = df1_1[<span class="string">'2018-03-05'</span>:<span class="string">'2018-03-11'</span>]</span><br><span class="line">b_3[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_3</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-03-05</td>      <td>15:24</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>5</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-03-05</td>      <td>18:05</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>3</td>      <td>5</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-03-05</td>      <td>18:20</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>3</td>      <td>5</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-03-05</td>      <td>18:45</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>3</td>      <td>5</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-03-05</td>      <td>18:53</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>3</td>      <td>5</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-03-11</td>      <td>0:34</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>3</td>      <td>11</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-03-11</td>      <td>0:45</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>3</td>      <td>11</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-03-11</td>      <td>1:03</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>3</td>      <td>11</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-03-11</td>      <td>1:13</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>3</td>      <td>11</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-03-11</td>      <td>1:18</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>11</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>  </tbody></table><p>336 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_3 = df1_1[<span class="string">'2018-03-12'</span>:<span class="string">'2018-03-18'</span>]</span><br><span class="line">c_3[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_3</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-03-12</td>      <td>13:24</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>3</td>      <td>12</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-03-12</td>      <td>16:19</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>3</td>      <td>12</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-03-12</td>      <td>17:15</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>3</td>      <td>12</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-03-12</td>      <td>17:49</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>3</td>      <td>12</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-03-12</td>      <td>18:25</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>12</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-03-18</td>      <td>1:04</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>3</td>      <td>18</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-03-18</td>      <td>1:11</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>3</td>      <td>18</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-03-18</td>      <td>1:15</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>3</td>      <td>18</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-03-18</td>      <td>1:43</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>18</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-03-17</td>      <td>17:43</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>17</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>  </tbody></table><p>290 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_3 = df1_1[<span class="string">'2018-03-19'</span>:<span class="string">'2018-03-25'</span>]</span><br><span class="line">d_3[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_3</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-03-19</td>      <td>15:34</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>3</td>      <td>19</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-03-19</td>      <td>17:48</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>3</td>      <td>19</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-03-19</td>      <td>18:06</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>19</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-03-19</td>      <td>18:11</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>3</td>      <td>19</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-03-19</td>      <td>18:13</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>19</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-03-25</td>      <td>23:50</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>3</td>      <td>25</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-03-25</td>      <td>0:43</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>3</td>      <td>25</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-03-25</td>      <td>0:48</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>3</td>      <td>25</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-03-25</td>      <td>1:05</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>3</td>      <td>25</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-03-25</td>      <td>1:40</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>3</td>      <td>25</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>248 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e_3 = df1_1[<span class="string">'2018-03-26'</span>:<span class="string">'2018-04-01'</span>]</span><br><span class="line">e_3[<span class="string">'week'</span>] = <span class="string">'5주'</span></span><br><span class="line">e_3</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-03-26</td>      <td>15:06</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>3</td>      <td>26</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-03-26</td>      <td>16:07</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>26</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-03-26</td>      <td>16:40</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>3</td>      <td>26</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-03-26</td>      <td>17:11</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>3</td>      <td>26</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-03-26</td>      <td>17:35</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>3</td>      <td>26</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-04-01</td>      <td>0:13</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-04-01</td>      <td>0:47</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-04-01</td>      <td>1:15</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-04-01</td>      <td>1:30</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-04-01</td>      <td>1:49</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>  </tbody></table><p>314 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mar_week = pd.concat([a_3, b_3, c_3, d_3, e_3], axis=<span class="number">0</span>)</span><br><span class="line">mar_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-02-26</td>      <td>14:41</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>26</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-26</td>      <td>16:12</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>26</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-26</td>      <td>16:52</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>2</td>      <td>26</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-26</td>      <td>17:11</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>2</td>      <td>26</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-02-26</td>      <td>17:12</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>2</td>      <td>26</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-04-01</td>      <td>0:13</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-04-01</td>      <td>0:47</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-04-01</td>      <td>1:15</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-04-01</td>      <td>1:30</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-04-01</td>      <td>1:49</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>  </tbody></table><p>1526 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_mar = mar_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_mar</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>39.0</td>      <td>41.0</td>      <td>55.0</td>      <td>48.0</td>      <td>45.0</td>      <td>55.0</td>      <td>55.0</td>    </tr>    <tr>      <td>2주</td>      <td>33.0</td>      <td>52.0</td>      <td>35.0</td>      <td>41.0</td>      <td>49.0</td>      <td>53.0</td>      <td>73.0</td>    </tr>    <tr>      <td>3주</td>      <td>36.0</td>      <td>NaN</td>      <td>42.0</td>      <td>42.0</td>      <td>61.0</td>      <td>49.0</td>      <td>60.0</td>    </tr>    <tr>      <td>4주</td>      <td>22.0</td>      <td>32.0</td>      <td>NaN</td>      <td>27.0</td>      <td>50.0</td>      <td>67.0</td>      <td>50.0</td>    </tr>    <tr>      <td>5주</td>      <td>32.0</td>      <td>43.0</td>      <td>34.0</td>      <td>28.0</td>      <td>38.0</td>      <td>72.0</td>      <td>67.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_mar, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 3월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_101_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 4월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apr = df1[df1[<span class="string">'month'</span>] == <span class="number">4</span>]</span><br><span class="line">apr</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>4057</td>      <td>2018-04-01</td>      <td>12:44</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>4058</td>      <td>2018-04-01</td>      <td>12:47</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>4059</td>      <td>2018-04-01</td>      <td>12:48</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>4060</td>      <td>2018-04-01</td>      <td>12:51</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>4061</td>      <td>2018-04-01</td>      <td>12:52</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>1</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>5280</td>      <td>2018-04-30</td>      <td>23:42</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>5281</td>      <td>2018-04-30</td>      <td>0:27</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>5282</td>      <td>2018-04-30</td>      <td>0:59</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>5283</td>      <td>2018-04-30</td>      <td>1:25</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>5284</td>      <td>2018-04-30</td>      <td>1:35</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>1228 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(apr[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"4월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_104_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 4월 데이터를 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_4 = df1_1[<span class="string">'2018-04-02'</span>:<span class="string">'2018-04-08'</span>]</span><br><span class="line">a_4[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_4</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-04-02</td>      <td>12:57</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>4</td>      <td>2</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-02</td>      <td>13:00</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>2</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-02</td>      <td>14:56</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>4</td>      <td>2</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-02</td>      <td>14:59</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>2</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-02</td>      <td>17:25</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>2</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-04-08</td>      <td>23:45</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>8</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-08</td>      <td>23:47</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>8</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-08</td>      <td>23:58</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>8</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-08</td>      <td>0:00</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>8</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-08</td>      <td>1:30</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>4</td>      <td>8</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>242 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_4 = df1_1[<span class="string">'2018-04-09'</span>:<span class="string">'2018-04-15'</span>]</span><br><span class="line">b_4[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_4</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-04-09</td>      <td>12:41</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>4</td>      <td>9</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-04-09</td>      <td>13:32</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>9</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-04-09</td>      <td>13:41</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>4</td>      <td>9</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-04-09</td>      <td>15:01</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>9</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-04-09</td>      <td>16:46</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>9</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-04-15</td>      <td>0:16</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>15</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-04-15</td>      <td>0:52</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>4</td>      <td>15</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-04-15</td>      <td>0:57</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>15</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-04-15</td>      <td>1:21</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>4</td>      <td>15</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-04-15</td>      <td>1:47</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>15</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>  </tbody></table><p>312 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_4 = df1_1[<span class="string">'2018-04-16'</span>:<span class="string">'2018-04-22'</span>]</span><br><span class="line">c_4[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_4</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-04-16</td>      <td>15:34</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>16</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-04-16</td>      <td>16:36</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>4</td>      <td>16</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-04-16</td>      <td>17:53</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>16</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-04-16</td>      <td>17:54</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>16</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-04-16</td>      <td>17:55</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>4</td>      <td>16</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-04-22</td>      <td>0:50</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>22</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-04-22</td>      <td>0:54</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>4</td>      <td>22</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-04-22</td>      <td>1:27</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>4</td>      <td>22</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-04-22</td>      <td>1:28</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>22</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-04-22</td>      <td>1:32</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>4</td>      <td>22</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>  </tbody></table><p>316 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_4 = df1_1[<span class="string">'2018-04-23'</span>:<span class="string">'2018-04-29'</span>]</span><br><span class="line">d_4[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_4</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-04-23</td>      <td>14:55</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>23</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-23</td>      <td>15:59</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>23</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-23</td>      <td>16:17</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>23</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-23</td>      <td>16:49</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>4</td>      <td>23</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-23</td>      <td>17:46</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>4</td>      <td>23</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-04-29</td>      <td>0:33</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>29</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-29</td>      <td>0:47</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>4</td>      <td>29</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-29</td>      <td>1:15</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>29</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-29</td>      <td>1:31</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>4</td>      <td>29</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-29</td>      <td>1:45</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>4</td>      <td>29</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>251 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apr_week = pd.concat([a_4, b_4, c_4, d_4], axis=<span class="number">0</span>)</span><br><span class="line">apr_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-04-02</td>      <td>12:57</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>4</td>      <td>2</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-02</td>      <td>13:00</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>2</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-02</td>      <td>14:56</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>4</td>      <td>2</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-02</td>      <td>14:59</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>2</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-02</td>      <td>17:25</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>2</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-04-29</td>      <td>0:33</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>29</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-29</td>      <td>0:47</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>4</td>      <td>29</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-29</td>      <td>1:15</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>29</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-29</td>      <td>1:31</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>4</td>      <td>29</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-04-29</td>      <td>1:45</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>4</td>      <td>29</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>1121 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_apr = apr_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_apr</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>35.0</td>      <td>30.0</td>      <td>27.0</td>      <td>42.0</td>      <td>50.0</td>      <td>NaN</td>      <td>58.0</td>    </tr>    <tr>      <td>2주</td>      <td>28.0</td>      <td>25.0</td>      <td>33.0</td>      <td>39.0</td>      <td>55.0</td>      <td>69.0</td>      <td>63.0</td>    </tr>    <tr>      <td>3주</td>      <td>35.0</td>      <td>35.0</td>      <td>34.0</td>      <td>36.0</td>      <td>43.0</td>      <td>67.0</td>      <td>66.0</td>    </tr>    <tr>      <td>4주</td>      <td>52.0</td>      <td>27.0</td>      <td>NaN</td>      <td>26.0</td>      <td>47.0</td>      <td>43.0</td>      <td>56.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_apr, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 4월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_112_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 5월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">may = df1[df1[<span class="string">'month'</span>] == <span class="number">5</span>]</span><br><span class="line">may</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>5285</td>      <td>2018-05-01</td>      <td>12:53</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>5</td>      <td>1</td>      <td>1</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>5286</td>      <td>2018-05-01</td>      <td>13:01</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>5</td>      <td>1</td>      <td>1</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>5287</td>      <td>2018-05-01</td>      <td>14:30</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>5</td>      <td>1</td>      <td>1</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>5288</td>      <td>2018-05-01</td>      <td>14:46</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>1</td>      <td>1</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>5289</td>      <td>2018-05-01</td>      <td>15:16</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>5</td>      <td>1</td>      <td>1</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>6559</td>      <td>2018-05-31</td>      <td>0:19</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>5</td>      <td>31</td>      <td>3</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>6560</td>      <td>2018-05-31</td>      <td>0:43</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>31</td>      <td>3</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>6561</td>      <td>2018-05-31</td>      <td>0:55</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>31</td>      <td>3</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>6562</td>      <td>2018-05-31</td>      <td>1:22</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>31</td>      <td>3</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>6563</td>      <td>2018-05-31</td>      <td>1:41</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>5</td>      <td>31</td>      <td>3</td>      <td>봄</td>      <td>1</td>      <td>순살</td>    </tr>  </tbody></table><p>1279 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(may[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"5월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_115_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 5월 데이터 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_5 = df1_1[<span class="string">'2018-04-30'</span>:<span class="string">'2018-05-06'</span>]</span><br><span class="line">a_5[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_5</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-04-30</td>      <td>13:43</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-30</td>      <td>16:10</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-30</td>      <td>17:14</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-30</td>      <td>17:49</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-30</td>      <td>18:00</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-05-06</td>      <td>23:21</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>5</td>      <td>6</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-05-06</td>      <td>23:45</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>5</td>      <td>6</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-05-06</td>      <td>0:07</td>      <td>기타</td>      <td>카드</td>      <td>후라이드</td>      <td>5</td>      <td>6</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-05-06</td>      <td>0:11</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>5</td>      <td>6</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-05-06</td>      <td>0:56</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>5</td>      <td>6</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>313 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_5 = df1_1[<span class="string">'2018-05-07'</span>:<span class="string">'2018-05-13'</span>]</span><br><span class="line">b_5[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_5</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-05-07</td>      <td>13:29</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>5</td>      <td>7</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-05-07</td>      <td>14:10</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>5</td>      <td>7</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-05-07</td>      <td>15:16</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>5</td>      <td>7</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-05-07</td>      <td>17:12</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>7</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-05-07</td>      <td>17:14</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>7</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-05-12</td>      <td>0:22</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>5</td>      <td>12</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-05-12</td>      <td>0:43</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>5</td>      <td>12</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-05-12</td>      <td>0:57</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>5</td>      <td>12</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-05-12</td>      <td>1:30</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>12</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-05-12</td>      <td>1:33</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>5</td>      <td>12</td>      <td>5</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>  </tbody></table><p>267 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_5 = df1_1[<span class="string">'2018-05-14'</span>:<span class="string">'2018-05-20'</span>]</span><br><span class="line">c_5[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_5</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-05-14</td>      <td>21:20</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>5</td>      <td>14</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-05-14</td>      <td>21:25</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>5</td>      <td>14</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-05-14</td>      <td>21:42</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>14</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-05-14</td>      <td>22:46</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>5</td>      <td>14</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-05-14</td>      <td>22:59</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>5</td>      <td>14</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-05-20</td>      <td>0:08</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>5</td>      <td>20</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-05-20</td>      <td>0:14</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>5</td>      <td>20</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-05-20</td>      <td>0:42</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>5</td>      <td>20</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-05-20</td>      <td>1:42</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>5</td>      <td>20</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-05-20</td>      <td>1:47</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>20</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>  </tbody></table><p>290 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_5 = df1_1[<span class="string">'2018-05-21'</span>:<span class="string">'2018-05-27'</span>]</span><br><span class="line">d_5[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_5</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-05-21</td>      <td>15:16</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>21</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-05-21</td>      <td>17:24</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>21</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-05-21</td>      <td>17:55</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>21</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-05-21</td>      <td>18:39</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>5</td>      <td>21</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-05-21</td>      <td>18:46</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>5</td>      <td>21</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-05-27</td>      <td>0:37</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>27</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-05-27</td>      <td>0:41</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>5</td>      <td>27</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-05-27</td>      <td>0:49</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>5</td>      <td>27</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-05-27</td>      <td>1:10</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>5</td>      <td>27</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-05-27</td>      <td>1:39</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>5</td>      <td>27</td>      <td>6</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>290 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e_5 = df1_1[<span class="string">'2018-05-28'</span>:<span class="string">'2018-06-03'</span>]</span><br><span class="line">e_5[<span class="string">'week'</span>] = <span class="string">'5주'</span></span><br><span class="line">e_5</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-05-28</td>      <td>16:33</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>28</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-05-28</td>      <td>16:41</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>28</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-05-28</td>      <td>17:35</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>5</td>      <td>28</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-05-28</td>      <td>17:47</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>5</td>      <td>28</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-05-28</td>      <td>18:31</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>5</td>      <td>28</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-06-03</td>      <td>22:55</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>6</td>      <td>3</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-06-03</td>      <td>23:50</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>6</td>      <td>3</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-06-03</td>      <td>23:52</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>6</td>      <td>3</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-06-03</td>      <td>23:54</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>3</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-06-03</td>      <td>23:56</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>6</td>      <td>3</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>  </tbody></table><p>304 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">may_week = pd.concat([a_5, b_5, c_5, d_5, e_5], axis=<span class="number">0</span>)</span><br><span class="line">may_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-04-30</td>      <td>13:43</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-30</td>      <td>16:10</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-30</td>      <td>17:14</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-30</td>      <td>17:49</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-04-30</td>      <td>18:00</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>4</td>      <td>30</td>      <td>0</td>      <td>봄</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-06-03</td>      <td>22:55</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>6</td>      <td>3</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-06-03</td>      <td>23:50</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>6</td>      <td>3</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-06-03</td>      <td>23:52</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>6</td>      <td>3</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-06-03</td>      <td>23:54</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>3</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-06-03</td>      <td>23:56</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>6</td>      <td>3</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>  </tbody></table><p>1464 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_may = may_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_may</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>40.0</td>      <td>43.0</td>      <td>73.0</td>      <td>31.0</td>      <td>39.0</td>      <td>47.0</td>      <td>40.0</td>    </tr>    <tr>      <td>2주</td>      <td>40.0</td>      <td>42.0</td>      <td>55.0</td>      <td>37.0</td>      <td>36.0</td>      <td>57.0</td>      <td>NaN</td>    </tr>    <tr>      <td>3주</td>      <td>6.0</td>      <td>40.0</td>      <td>74.0</td>      <td>36.0</td>      <td>39.0</td>      <td>49.0</td>      <td>46.0</td>    </tr>    <tr>      <td>4주</td>      <td>27.0</td>      <td>49.0</td>      <td>68.0</td>      <td>NaN</td>      <td>40.0</td>      <td>43.0</td>      <td>63.0</td>    </tr>    <tr>      <td>5주</td>      <td>36.0</td>      <td>38.0</td>      <td>60.0</td>      <td>25.0</td>      <td>44.0</td>      <td>63.0</td>      <td>38.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_may, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 5월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_124_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 6월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jun = df1[df1[<span class="string">'month'</span>] == <span class="number">6</span>]</span><br><span class="line">jun</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>6564</td>      <td>2018-06-01</td>      <td>14:34</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>1</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>6565</td>      <td>2018-06-01</td>      <td>14:39</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>1</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>6566</td>      <td>2018-06-01</td>      <td>16:09</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>6</td>      <td>1</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>6567</td>      <td>2018-06-01</td>      <td>17:04</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>1</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>6568</td>      <td>2018-06-01</td>      <td>18:19</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>1</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>7774</td>      <td>2018-06-30</td>      <td>23:36</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>6</td>      <td>30</td>      <td>5</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>7775</td>      <td>2018-06-30</td>      <td>23:47</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>6</td>      <td>30</td>      <td>5</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>7776</td>      <td>2018-06-30</td>      <td>23:58</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>6</td>      <td>30</td>      <td>5</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>7777</td>      <td>2018-06-30</td>      <td>0:04</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>30</td>      <td>5</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>7778</td>      <td>2018-06-30</td>      <td>0:25</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>30</td>      <td>5</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>1215 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(jun[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"6월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_127_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 6월 데이터 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_6 = df1_1[<span class="string">'2018-06-04'</span>:<span class="string">'2018-06-10'</span>]</span><br><span class="line">a_6[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_6</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-06-04</td>      <td>13:37</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>4</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-04</td>      <td>15:34</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>4</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-04</td>      <td>16:07</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>4</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-04</td>      <td>17:01</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>4</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-04</td>      <td>17:13</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>4</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-06-10</td>      <td>0:39</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>6</td>      <td>10</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-10</td>      <td>1:21</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>6</td>      <td>10</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-10</td>      <td>1:22</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>6</td>      <td>10</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-10</td>      <td>1:27</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>6</td>      <td>10</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-10</td>      <td>1:50</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>6</td>      <td>10</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>309 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_6 = df1_1[<span class="string">'2018-06-11'</span>:<span class="string">'2018-06-17'</span>]</span><br><span class="line">b_6[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_6</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-06-11</td>      <td>15:55</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>6</td>      <td>11</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-06-11</td>      <td>16:56</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>11</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-06-11</td>      <td>17:01</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>6</td>      <td>11</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-06-11</td>      <td>17:17</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>6</td>      <td>11</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-06-11</td>      <td>17:24</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>11</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-06-17</td>      <td>23:29</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>6</td>      <td>17</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-06-17</td>      <td>23:37</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>6</td>      <td>17</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-06-17</td>      <td>0:54</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>17</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-06-17</td>      <td>1:00</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>17</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-06-17</td>      <td>1:26</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>6</td>      <td>17</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>  </tbody></table><p>264 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_6 = df1_1[<span class="string">'2018-06-18'</span>:<span class="string">'2018-06-24'</span>]</span><br><span class="line">c_6[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_6</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-06-18</td>      <td>15:45</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>18</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-06-18</td>      <td>16:33</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>6</td>      <td>18</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-06-18</td>      <td>18:06</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>18</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-06-18</td>      <td>18:15</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>18</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-06-18</td>      <td>18:15</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>6</td>      <td>18</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-06-24</td>      <td>1:04</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>6</td>      <td>24</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-06-24</td>      <td>1:10</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>6</td>      <td>24</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-06-24</td>      <td>1:30</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>24</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-06-24</td>      <td>1:32</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>24</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-06-24</td>      <td>1:36</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>6</td>      <td>24</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>  </tbody></table><p>293 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_6 = df1_1[<span class="string">'2018-06-25'</span>:<span class="string">'2018-07-01'</span>]</span><br><span class="line">d_6[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_6</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-06-25</td>      <td>15:55</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>6</td>      <td>25</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-06-25</td>      <td>16:18</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>6</td>      <td>25</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-06-25</td>      <td>16:36</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>25</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-06-25</td>      <td>17:17</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>25</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-06-25</td>      <td>17:46</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>6</td>      <td>25</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-07-01</td>      <td>23:55</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-01</td>      <td>0:34</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-01</td>      <td>0:52</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-01</td>      <td>1:04</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-01</td>      <td>1:11</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>248 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jun_week = pd.concat([a_6, b_6, c_6, d_6], axis=<span class="number">0</span>)</span><br><span class="line">jun_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-06-04</td>      <td>13:37</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>4</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-04</td>      <td>15:34</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>4</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-04</td>      <td>16:07</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>4</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-04</td>      <td>17:01</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>4</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-06-04</td>      <td>17:13</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>6</td>      <td>4</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-07-01</td>      <td>23:55</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-01</td>      <td>0:34</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-01</td>      <td>0:52</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-01</td>      <td>1:04</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-01</td>      <td>1:11</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>1114 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_jun = jun_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_jun</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>33.0</td>      <td>25.0</td>      <td>91.0</td>      <td>39.0</td>      <td>39.0</td>      <td>41.0</td>      <td>41.0</td>    </tr>    <tr>      <td>2주</td>      <td>35.0</td>      <td>41.0</td>      <td>50.0</td>      <td>NaN</td>      <td>45.0</td>      <td>48.0</td>      <td>45.0</td>    </tr>    <tr>      <td>3주</td>      <td>43.0</td>      <td>34.0</td>      <td>39.0</td>      <td>30.0</td>      <td>31.0</td>      <td>74.0</td>      <td>42.0</td>    </tr>    <tr>      <td>4주</td>      <td>28.0</td>      <td>33.0</td>      <td>76.0</td>      <td>NaN</td>      <td>27.0</td>      <td>40.0</td>      <td>44.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_jun, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 6월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_135_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 7월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jul = df1[df1[<span class="string">'month'</span>] == <span class="number">7</span>]</span><br><span class="line">jul</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>7779</td>      <td>2018-07-01</td>      <td>12:15</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>7780</td>      <td>2018-07-01</td>      <td>12:16</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>7781</td>      <td>2018-07-01</td>      <td>12:53</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>7782</td>      <td>2018-07-01</td>      <td>12:54</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>7783</td>      <td>2018-07-01</td>      <td>13:01</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>7</td>      <td>1</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>8947</td>      <td>2018-07-30</td>      <td>22:03</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>8948</td>      <td>2018-07-30</td>      <td>22:12</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>8949</td>      <td>2018-07-30</td>      <td>22:36</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>8950</td>      <td>2018-07-30</td>      <td>0:48</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>8951</td>      <td>2018-07-30</td>      <td>1:02</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>1173 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(jul[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"7월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_138_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 7월 데이터 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_7 = df1_1[<span class="string">'2018-07-02'</span>:<span class="string">'2018-07-08'</span>]</span><br><span class="line">a_7[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_7</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-07-02</td>      <td>16:53</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>2</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-02</td>      <td>18:09</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>2</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-02</td>      <td>18:45</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>2</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-02</td>      <td>19:01</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>2</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-02</td>      <td>19:08</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>2</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-07-08</td>      <td>22:16</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>8</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-08</td>      <td>0:00</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>7</td>      <td>8</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-08</td>      <td>0:22</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>8</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-08</td>      <td>0:36</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>7</td>      <td>8</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-08</td>      <td>1:04</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>7</td>      <td>8</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>258 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_7 = df1_1[<span class="string">'2018-07-09'</span>:<span class="string">'2018-07-15'</span>]</span><br><span class="line">b_7[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_7</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-07-09</td>      <td>14:37</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>9</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-07-09</td>      <td>17:10</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>9</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-07-09</td>      <td>17:17</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>9</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-07-09</td>      <td>17:59</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>9</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-07-09</td>      <td>18:12</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>9</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-07-15</td>      <td>0:29</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>15</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-07-15</td>      <td>0:52</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>15</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-07-15</td>      <td>0:57</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>7</td>      <td>15</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-07-15</td>      <td>1:32</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>15</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-07-15</td>      <td>1:45</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>7</td>      <td>15</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>  </tbody></table><p>290 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_7 = df1_1[<span class="string">'2018-07-16'</span>:<span class="string">'2018-07-22'</span>]</span><br><span class="line">c_7[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_7</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-07-16</td>      <td>15:14</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>16</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-07-16</td>      <td>17:17</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>16</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-07-16</td>      <td>17:23</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>16</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-07-16</td>      <td>18:30</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>16</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-07-16</td>      <td>18:32</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>7</td>      <td>16</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-07-22</td>      <td>22:54</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>22</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-07-22</td>      <td>22:59</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>22</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-07-22</td>      <td>23:24</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>22</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-07-22</td>      <td>23:32</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>22</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-07-22</td>      <td>1:00</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>22</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>  </tbody></table><p>264 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_7 = df1_1[<span class="string">'2018-07-23'</span>:<span class="string">'2018-07-29'</span>]</span><br><span class="line">d_7[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_7</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-07-23</td>      <td>13:08</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>23</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-23</td>      <td>15:30</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>23</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-23</td>      <td>16:56</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>23</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-23</td>      <td>17:27</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>7</td>      <td>23</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-23</td>      <td>17:35</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>23</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-07-29</td>      <td>22:47</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>29</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-29</td>      <td>22:49</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>29</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-29</td>      <td>23:17</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>29</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-29</td>      <td>0:44</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>29</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-29</td>      <td>0:50</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>29</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>301 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jul_week = pd.concat([a_7, b_7, c_7, d_7], axis=<span class="number">0</span>)</span><br><span class="line">jul_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-07-02</td>      <td>16:53</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>2</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-02</td>      <td>18:09</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>2</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-02</td>      <td>18:45</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>2</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-02</td>      <td>19:01</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>2</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-02</td>      <td>19:08</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>2</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-07-29</td>      <td>22:47</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>29</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-29</td>      <td>22:49</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>29</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-29</td>      <td>23:17</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>29</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-29</td>      <td>0:44</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>29</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-07-29</td>      <td>0:50</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>7</td>      <td>29</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>1113 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_jul = jul_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_jul</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>33</td>      <td>26</td>      <td>41</td>      <td>25</td>      <td>39</td>      <td>54</td>      <td>40</td>    </tr>    <tr>      <td>2주</td>      <td>38</td>      <td>27</td>      <td>32</td>      <td>38</td>      <td>29</td>      <td>60</td>      <td>66</td>    </tr>    <tr>      <td>3주</td>      <td>28</td>      <td>57</td>      <td>35</td>      <td>22</td>      <td>32</td>      <td>45</td>      <td>45</td>    </tr>    <tr>      <td>4주</td>      <td>36</td>      <td>30</td>      <td>52</td>      <td>37</td>      <td>55</td>      <td>41</td>      <td>50</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_jul, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 7월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_146_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 8월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aug = df1[df1[<span class="string">'month'</span>] == <span class="number">8</span>]</span><br><span class="line">aug</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>8952</td>      <td>2018-08-03</td>      <td>14:53</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>3</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>8953</td>      <td>2018-08-03</td>      <td>16:30</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>8</td>      <td>3</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>8954</td>      <td>2018-08-03</td>      <td>16:38</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>3</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>8955</td>      <td>2018-08-03</td>      <td>17:49</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>3</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>8956</td>      <td>2018-08-03</td>      <td>17:55</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>8</td>      <td>3</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>10269</td>      <td>2018-08-31</td>      <td>0:42</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>31</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>10270</td>      <td>2018-08-31</td>      <td>0:47</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>31</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>10271</td>      <td>2018-08-31</td>      <td>1:06</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>8</td>      <td>31</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>10272</td>      <td>2018-08-31</td>      <td>1:12</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>31</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>10273</td>      <td>2018-08-31</td>      <td>1:37</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>8</td>      <td>31</td>      <td>4</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>1322 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(aug[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"8월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_149_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 8월 데이터 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_8 = df1_1[<span class="string">'2018-07-30'</span>:<span class="string">'2018-08-05'</span>]</span><br><span class="line">a_8[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_8</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-07-30</td>      <td>17:38</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-30</td>      <td>18:21</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-30</td>      <td>18:53</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-30</td>      <td>18:54</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-30</td>      <td>19:01</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-08-05</td>      <td>0:47</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>5</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-08-05</td>      <td>1:00</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>5</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-08-05</td>      <td>1:01</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>5</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-08-05</td>      <td>1:02</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>5</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-08-05</td>      <td>1:30</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>8</td>      <td>5</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>185 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_8 = df1_1[<span class="string">'2018-08-06'</span>:<span class="string">'2018-08-12'</span>]</span><br><span class="line">b_8[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_8</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-08-06</td>      <td>13:39</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>6</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-08-06</td>      <td>14:53</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>6</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-08-06</td>      <td>15:51</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>8</td>      <td>6</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-08-06</td>      <td>16:49</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>6</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-08-06</td>      <td>17:00</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>6</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-08-12</td>      <td>0:35</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>12</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-08-12</td>      <td>0:37</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>12</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-08-12</td>      <td>1:23</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>8</td>      <td>12</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-08-12</td>      <td>1:46</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>8</td>      <td>12</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-08-12</td>      <td>1:55</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>12</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>  </tbody></table><p>340 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_8 = df1_1[<span class="string">'2018-08-13'</span>:<span class="string">'2018-08-19'</span>]</span><br><span class="line">c_8[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_8</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-08-13</td>      <td>12:38</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>8</td>      <td>13</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-08-13</td>      <td>13:31</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>8</td>      <td>13</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-08-13</td>      <td>14:05</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>8</td>      <td>13</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-08-13</td>      <td>14:06</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>13</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-08-13</td>      <td>14:07</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>13</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-08-19</td>      <td>0:22</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>8</td>      <td>19</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-08-19</td>      <td>0:26</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>8</td>      <td>19</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-08-19</td>      <td>1:14</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>19</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-08-19</td>      <td>1:29</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>19</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-08-19</td>      <td>1:30</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>8</td>      <td>19</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>  </tbody></table><p>301 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_8 = df1_1[<span class="string">'2018-08-20'</span>:<span class="string">'2018-08-26'</span>]</span><br><span class="line">d_8[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_8</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-08-20</td>      <td>16:51</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>8</td>      <td>20</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-08-20</td>      <td>17:30</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>8</td>      <td>20</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-08-20</td>      <td>17:44</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>20</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-08-20</td>      <td>17:52</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>20</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-08-20</td>      <td>18:10</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>8</td>      <td>20</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-08-26</td>      <td>0:47</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>26</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-08-26</td>      <td>1:11</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>8</td>      <td>26</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-08-26</td>      <td>1:33</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>26</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-08-26</td>      <td>1:35</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>8</td>      <td>26</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-08-26</td>      <td>1:43</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>8</td>      <td>26</td>      <td>6</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>284 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e_8 = df1_1[<span class="string">'2018-08-27'</span>:<span class="string">'2018-09-02'</span>]</span><br><span class="line">e_8[<span class="string">'week'</span>] = <span class="string">'5주'</span></span><br><span class="line">e_8</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-08-27</td>      <td>12:55</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>8</td>      <td>27</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-08-27</td>      <td>15:28</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>8</td>      <td>27</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-08-27</td>      <td>16:28</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>27</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-08-27</td>      <td>16:51</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>8</td>      <td>27</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-08-27</td>      <td>16:56</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>8</td>      <td>27</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-09-02</td>      <td>0:31</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>2</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-09-02</td>      <td>0:36</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>2</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-09-02</td>      <td>0:50</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>9</td>      <td>2</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-09-02</td>      <td>0:55</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>9</td>      <td>2</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-09-02</td>      <td>1:12</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>9</td>      <td>2</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>  </tbody></table><p>328 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aug_week = pd.concat([a_8, b_8, c_8, d_8, e_8], axis=<span class="number">0</span>)</span><br><span class="line">aug_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-07-30</td>      <td>17:38</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-30</td>      <td>18:21</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-30</td>      <td>18:53</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-30</td>      <td>18:54</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-07-30</td>      <td>19:01</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>7</td>      <td>30</td>      <td>0</td>      <td>여름</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-09-02</td>      <td>0:31</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>2</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-09-02</td>      <td>0:36</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>2</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-09-02</td>      <td>0:50</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>9</td>      <td>2</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-09-02</td>      <td>0:55</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>9</td>      <td>2</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-09-02</td>      <td>1:12</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>9</td>      <td>2</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>  </tbody></table><p>1438 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_aug = aug_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_aug</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>16.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>46.0</td>      <td>64.0</td>      <td>59.0</td>    </tr>    <tr>      <td>2주</td>      <td>44.0</td>      <td>32.0</td>      <td>61.0</td>      <td>39.0</td>      <td>43.0</td>      <td>56.0</td>      <td>65.0</td>    </tr>    <tr>      <td>3주</td>      <td>34.0</td>      <td>36.0</td>      <td>82.0</td>      <td>38.0</td>      <td>35.0</td>      <td>39.0</td>      <td>37.0</td>    </tr>    <tr>      <td>4주</td>      <td>30.0</td>      <td>41.0</td>      <td>45.0</td>      <td>NaN</td>      <td>54.0</td>      <td>44.0</td>      <td>70.0</td>    </tr>    <tr>      <td>5주</td>      <td>34.0</td>      <td>63.0</td>      <td>58.0</td>      <td>31.0</td>      <td>42.0</td>      <td>58.0</td>      <td>42.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_aug, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 8월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_158_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 9월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sep = df1[df1[<span class="string">'month'</span>] == <span class="number">9</span>]</span><br><span class="line">sep</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>10274</td>      <td>2018-09-01</td>      <td>13:27</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>1</td>      <td>5</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>10275</td>      <td>2018-09-01</td>      <td>15:37</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>1</td>      <td>5</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>10276</td>      <td>2018-09-01</td>      <td>15:48</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>1</td>      <td>5</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>10277</td>      <td>2018-09-01</td>      <td>16:17</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>1</td>      <td>5</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>10278</td>      <td>2018-09-01</td>      <td>17:24</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>1</td>      <td>5</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>11430</td>      <td>2018-09-30</td>      <td>23:30</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>11431</td>      <td>2018-09-30</td>      <td>23:32</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>11432</td>      <td>2018-09-30</td>      <td>0:12</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>11433</td>      <td>2018-09-30</td>      <td>0:33</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>11434</td>      <td>2018-09-30</td>      <td>1:46</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>1161 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(sep[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"9월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_161_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 9월 데이터 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_9 = df1_1[<span class="string">'2018-09-03'</span>:<span class="string">'2018-09-09'</span>]</span><br><span class="line">a_9[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_9</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-09-03</td>      <td>15:20</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>3</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-03</td>      <td>15:21</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>9</td>      <td>3</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-03</td>      <td>16:24</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>3</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-03</td>      <td>16:26</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>3</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-03</td>      <td>17:23</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>3</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-09-09</td>      <td>0:11</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>9</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-09</td>      <td>0:27</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>9</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-09</td>      <td>0:45</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>9</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-09</td>      <td>1:25</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>9</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-09</td>      <td>1:45</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>9</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>299 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_9 = df1_1[<span class="string">'2018-09-10'</span>:<span class="string">'2018-09-16'</span>]</span><br><span class="line">b_9[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_9</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-09-10</td>      <td>16:04</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>10</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-09-10</td>      <td>16:08</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>10</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-09-10</td>      <td>18:24</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>10</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-09-10</td>      <td>18:27</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>10</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-09-10</td>      <td>18:44</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>10</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-09-16</td>      <td>22:56</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>9</td>      <td>16</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-09-16</td>      <td>23:27</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>16</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-09-16</td>      <td>23:38</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>16</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-09-16</td>      <td>1:51</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>16</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-09-16</td>      <td>1:52</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>16</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>  </tbody></table><p>228 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_9 = df1_1[<span class="string">'2018-09-17'</span>:<span class="string">'2018-09-23'</span>]</span><br><span class="line">c_9[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_9</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-09-17</td>      <td>17:52</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>17</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-09-17</td>      <td>17:55</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>17</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-09-17</td>      <td>18:04</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>9</td>      <td>17</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-09-17</td>      <td>18:49</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>9</td>      <td>17</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-09-17</td>      <td>18:58</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>9</td>      <td>17</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-09-22</td>      <td>23:36</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>9</td>      <td>22</td>      <td>5</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-09-22</td>      <td>23:44</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>9</td>      <td>22</td>      <td>5</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-09-22</td>      <td>0:21</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>9</td>      <td>22</td>      <td>5</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-09-22</td>      <td>0:31</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>9</td>      <td>22</td>      <td>5</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-09-22</td>      <td>0:57</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>22</td>      <td>5</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>  </tbody></table><p>212 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_9 = df1_1[<span class="string">'2018-09-24'</span>:<span class="string">'2018-09-30'</span>]</span><br><span class="line">d_9[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_9</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-09-25</td>      <td>12:26</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>25</td>      <td>1</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-25</td>      <td>12:52</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>25</td>      <td>1</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-25</td>      <td>13:04</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>25</td>      <td>1</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-25</td>      <td>13:13</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>25</td>      <td>1</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-25</td>      <td>13:28</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>25</td>      <td>1</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-09-30</td>      <td>23:30</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-30</td>      <td>23:32</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-30</td>      <td>0:12</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-30</td>      <td>0:33</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-30</td>      <td>1:46</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>322 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sep_week = pd.concat([a_9, b_9, c_9, d_9], axis=<span class="number">0</span>)</span><br><span class="line">sep_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-09-03</td>      <td>15:20</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>3</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-03</td>      <td>15:21</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>9</td>      <td>3</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-03</td>      <td>16:24</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>3</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-03</td>      <td>16:26</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>3</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-09-03</td>      <td>17:23</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>9</td>      <td>3</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-09-30</td>      <td>23:30</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-30</td>      <td>23:32</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-30</td>      <td>0:12</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-30</td>      <td>0:33</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-09-30</td>      <td>1:46</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>9</td>      <td>30</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>1061 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_sep = sep_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_sep</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>38.0</td>      <td>28.0</td>      <td>35.0</td>      <td>25.0</td>      <td>51.0</td>      <td>64.0</td>      <td>58.0</td>    </tr>    <tr>      <td>2주</td>      <td>32.0</td>      <td>26.0</td>      <td>34.0</td>      <td>NaN</td>      <td>46.0</td>      <td>49.0</td>      <td>41.0</td>    </tr>    <tr>      <td>3주</td>      <td>31.0</td>      <td>26.0</td>      <td>42.0</td>      <td>32.0</td>      <td>47.0</td>      <td>34.0</td>      <td>NaN</td>    </tr>    <tr>      <td>4주</td>      <td>NaN</td>      <td>63.0</td>      <td>70.0</td>      <td>33.0</td>      <td>45.0</td>      <td>58.0</td>      <td>53.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_sep, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 9월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_169_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 10월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">octo = df1[df1[<span class="string">'month'</span>] == <span class="number">10</span>]</span><br><span class="line">octo</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>11435</td>      <td>2018-10-01</td>      <td>15:17</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>11436</td>      <td>2018-10-01</td>      <td>16:42</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>11437</td>      <td>2018-10-01</td>      <td>17:12</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>11438</td>      <td>2018-10-01</td>      <td>18:00</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>11439</td>      <td>2018-10-01</td>      <td>18:06</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>12842</td>      <td>2018-10-31</td>      <td>0:16</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>10</td>      <td>31</td>      <td>2</td>      <td>가을</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>12843</td>      <td>2018-10-31</td>      <td>0:29</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>31</td>      <td>2</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>12844</td>      <td>2018-10-31</td>      <td>0:57</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>31</td>      <td>2</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>12845</td>      <td>2018-10-31</td>      <td>1:21</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>31</td>      <td>2</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>12846</td>      <td>2018-10-31</td>      <td>1:26</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>31</td>      <td>2</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>1412 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(octo[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"10월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_172_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 10월 데이터 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_10 = df1_1[<span class="string">'2018-10-01'</span>:<span class="string">'2018-10-07'</span>]</span><br><span class="line">a_10[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_10</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-10-01</td>      <td>15:17</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-01</td>      <td>16:42</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-01</td>      <td>17:12</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-01</td>      <td>18:00</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-01</td>      <td>18:06</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-10-07</td>      <td>0:11</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>10</td>      <td>7</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-07</td>      <td>0:31</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>7</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-07</td>      <td>0:37</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>10</td>      <td>7</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-07</td>      <td>0:40</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>7</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-07</td>      <td>1:51</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>7</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>355 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_10 = df1_1[<span class="string">'2018-10-08'</span>:<span class="string">'2018-10-14'</span>]</span><br><span class="line">b_10[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_10</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-10-08</td>      <td>15:08</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>8</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-10-08</td>      <td>17:48</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>10</td>      <td>8</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-10-08</td>      <td>17:55</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>10</td>      <td>8</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-10-08</td>      <td>18:30</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>10</td>      <td>8</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-10-08</td>      <td>18:36</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>8</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-10-14</td>      <td>0:23</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>14</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-10-14</td>      <td>0:38</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>10</td>      <td>14</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-10-14</td>      <td>1:21</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>14</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-10-14</td>      <td>1:48</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>10</td>      <td>14</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-10-14</td>      <td>1:53</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>14</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>  </tbody></table><p>310 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_10 = df1_1[<span class="string">'2018-10-15'</span>:<span class="string">'2018-10-21'</span>]</span><br><span class="line">c_10[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_10</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-10-15</td>      <td>15:14</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>10</td>      <td>15</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-10-15</td>      <td>15:30</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>15</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-10-15</td>      <td>17:20</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>10</td>      <td>15</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-10-15</td>      <td>17:23</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>10</td>      <td>15</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-10-15</td>      <td>18:13</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>10</td>      <td>15</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-10-21</td>      <td>23:01</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>10</td>      <td>21</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-10-21</td>      <td>23:08</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>10</td>      <td>21</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-10-21</td>      <td>23:43</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>21</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-10-21</td>      <td>1:09</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>10</td>      <td>21</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-10-21</td>      <td>1:19</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>10</td>      <td>21</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>  </tbody></table><p>314 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_10 = df1_1[<span class="string">'2018-10-22'</span>:<span class="string">'2018-10-28'</span>]</span><br><span class="line">d_10[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_10</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-10-22</td>      <td>14:57</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>22</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-22</td>      <td>16:32</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>10</td>      <td>22</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-22</td>      <td>17:45</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>10</td>      <td>22</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-22</td>      <td>18:04</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>22</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-22</td>      <td>18:09</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>22</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-10-28</td>      <td>0:34</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>28</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-28</td>      <td>0:39</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>10</td>      <td>28</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-28</td>      <td>1:10</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>10</td>      <td>28</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-28</td>      <td>1:11</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>28</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-28</td>      <td>1:12</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>28</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>  </tbody></table><p>297 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">octo_week = pd.concat([a_10, b_10, c_10, d_10], axis=<span class="number">0</span>)</span><br><span class="line">octo_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-10-01</td>      <td>15:17</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-01</td>      <td>16:42</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-01</td>      <td>17:12</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-01</td>      <td>18:00</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-01</td>      <td>18:06</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>10</td>      <td>1</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-10-28</td>      <td>0:34</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>28</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-28</td>      <td>0:39</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>10</td>      <td>28</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-28</td>      <td>1:10</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>10</td>      <td>28</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-28</td>      <td>1:11</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>28</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-10-28</td>      <td>1:12</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>28</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>  </tbody></table><p>1276 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_octo = octo_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_octo</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>28.0</td>      <td>41.0</td>      <td>75.0</td>      <td>23.0</td>      <td>68.0</td>      <td>56.0</td>      <td>64.0</td>    </tr>    <tr>      <td>2주</td>      <td>30.0</td>      <td>54.0</td>      <td>59.0</td>      <td>NaN</td>      <td>49.0</td>      <td>62.0</td>      <td>56.0</td>    </tr>    <tr>      <td>3주</td>      <td>35.0</td>      <td>37.0</td>      <td>50.0</td>      <td>40.0</td>      <td>40.0</td>      <td>69.0</td>      <td>43.0</td>    </tr>    <tr>      <td>4주</td>      <td>22.0</td>      <td>NaN</td>      <td>77.0</td>      <td>36.0</td>      <td>36.0</td>      <td>62.0</td>      <td>64.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_octo, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 10월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_180_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 11월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nov = df1[df1[<span class="string">'month'</span>] == <span class="number">11</span>]</span><br><span class="line">nov</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>12847</td>      <td>2018-11-01</td>      <td>15:05</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>11</td>      <td>1</td>      <td>3</td>      <td>가을</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>12848</td>      <td>2018-11-01</td>      <td>16:43</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>1</td>      <td>3</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>12849</td>      <td>2018-11-01</td>      <td>16:44</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>1</td>      <td>3</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>12850</td>      <td>2018-11-01</td>      <td>17:02</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>1</td>      <td>3</td>      <td>가을</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>12851</td>      <td>2018-11-01</td>      <td>17:10</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>1</td>      <td>3</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>14071</td>      <td>2018-11-30</td>      <td>23:46</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>11</td>      <td>30</td>      <td>4</td>      <td>가을</td>      <td>1</td>      <td>순살</td>    </tr>    <tr>      <td>14072</td>      <td>2018-11-30</td>      <td>23:54</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>11</td>      <td>30</td>      <td>4</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>14073</td>      <td>2018-11-30</td>      <td>0:42</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>30</td>      <td>4</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>14074</td>      <td>2018-11-30</td>      <td>0:51</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>11</td>      <td>30</td>      <td>4</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>14075</td>      <td>2018-11-30</td>      <td>0:59</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>30</td>      <td>4</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>1229 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(nov[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"11월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_183_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 11월 데이터 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_11 = df1_1[<span class="string">'2018-10-29'</span>:<span class="string">'2018-11-04'</span>]</span><br><span class="line">a_11[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_11</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-10-29</td>      <td>14:36</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>29</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-29</td>      <td>15:00</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>10</td>      <td>29</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-29</td>      <td>17:22</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>10</td>      <td>29</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-29</td>      <td>17:36</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>29</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-29</td>      <td>18:05</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>29</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-11-04</td>      <td>0:45</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>4</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-11-04</td>      <td>1:00</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>4</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-11-04</td>      <td>1:04</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>4</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-11-04</td>      <td>1:14</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>4</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-11-04</td>      <td>1:47</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>11</td>      <td>4</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>  </tbody></table><p>340 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_11 = df1_1[<span class="string">'2018-11-05'</span>:<span class="string">'2018-11-11'</span>]</span><br><span class="line">b_11[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_11</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-11-05</td>      <td>14:31</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>5</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-11-05</td>      <td>15:26</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>5</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-11-05</td>      <td>15:34</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>5</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-11-05</td>      <td>16:36</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>5</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-11-05</td>      <td>16:58</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>5</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-11-11</td>      <td>1:12</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>11</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-11-11</td>      <td>1:29</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>11</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-11-11</td>      <td>1:33</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>11</td>      <td>11</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-11-11</td>      <td>1:46</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>11</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-11-11</td>      <td>1:56</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>11</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>  </tbody></table><p>268 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_11 = df1_1[<span class="string">'2018-11-12'</span>:<span class="string">'2018-11-18'</span>]</span><br><span class="line">c_11[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_11</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-11-12</td>      <td>16:04</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>12</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-11-12</td>      <td>17:27</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>12</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-11-12</td>      <td>18:19</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>12</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-11-12</td>      <td>18:20</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>11</td>      <td>12</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-11-12</td>      <td>18:45</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>11</td>      <td>12</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-11-18</td>      <td>23:41</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>18</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-11-18</td>      <td>23:46</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>18</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-11-18</td>      <td>0:31</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>18</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-11-18</td>      <td>0:44</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>18</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-11-18</td>      <td>1:18</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>11</td>      <td>18</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>  </tbody></table><p>310 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_11 = df1_1[<span class="string">'2018-11-19'</span>:<span class="string">'2018-11-25'</span>]</span><br><span class="line">d_11[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_11</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-11-19</td>      <td>13:57</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>19</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-11-19</td>      <td>14:23</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>11</td>      <td>19</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-11-19</td>      <td>16:07</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>19</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-11-19</td>      <td>16:09</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>19</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-11-19</td>      <td>17:37</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>19</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-11-25</td>      <td>0:21</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>25</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-11-25</td>      <td>0:46</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>25</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-11-25</td>      <td>0:48</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>25</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-11-25</td>      <td>1:23</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>25</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-11-25</td>      <td>1:51</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>11</td>      <td>25</td>      <td>6</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>  </tbody></table><p>264 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e_11 = df1_1[<span class="string">'2018-11-26'</span>:<span class="string">'2018-12-02'</span>]</span><br><span class="line">e_11[<span class="string">'week'</span>] = <span class="string">'5주'</span></span><br><span class="line">e_11</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-11-26</td>      <td>15:30</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>26</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-11-26</td>      <td>15:56</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>11</td>      <td>26</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-11-26</td>      <td>16:24</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>11</td>      <td>26</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-11-26</td>      <td>17:28</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>11</td>      <td>26</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-11-26</td>      <td>17:41</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>11</td>      <td>26</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-12-02</td>      <td>23:45</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>2</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-02</td>      <td>23:47</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>2</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-02</td>      <td>1:01</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>2</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-02</td>      <td>1:10</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>2</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-02</td>      <td>1:55</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>2</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>  </tbody></table><p>300 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nov_week = pd.concat([a_11, b_11, c_11, d_11, e_11], axis=<span class="number">0</span>)</span><br><span class="line">nov_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-10-29</td>      <td>14:36</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>29</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-29</td>      <td>15:00</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>10</td>      <td>29</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-29</td>      <td>17:22</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>10</td>      <td>29</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-29</td>      <td>17:36</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>10</td>      <td>29</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-10-29</td>      <td>18:05</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>10</td>      <td>29</td>      <td>0</td>      <td>가을</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-12-02</td>      <td>23:45</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>2</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-02</td>      <td>23:47</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>2</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-02</td>      <td>1:01</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>2</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-02</td>      <td>1:10</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>2</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-02</td>      <td>1:55</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>2</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>  </tbody></table><p>1482 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_nov = nov_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_nov</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>47.0</td>      <td>34.0</td>      <td>55.0</td>      <td>38.0</td>      <td>46.0</td>      <td>57.0</td>      <td>63.0</td>    </tr>    <tr>      <td>2주</td>      <td>39.0</td>      <td>42.0</td>      <td>57.0</td>      <td>NaN</td>      <td>46.0</td>      <td>45.0</td>      <td>39.0</td>    </tr>    <tr>      <td>3주</td>      <td>27.0</td>      <td>39.0</td>      <td>46.0</td>      <td>44.0</td>      <td>57.0</td>      <td>48.0</td>      <td>49.0</td>    </tr>    <tr>      <td>4주</td>      <td>25.0</td>      <td>49.0</td>      <td>39.0</td>      <td>NaN</td>      <td>45.0</td>      <td>39.0</td>      <td>67.0</td>    </tr>    <tr>      <td>5주</td>      <td>35.0</td>      <td>35.0</td>      <td>46.0</td>      <td>27.0</td>      <td>40.0</td>      <td>54.0</td>      <td>63.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_nov, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 11월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_192_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 12월 데이터</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dec = df1[df1[<span class="string">'month'</span>] == <span class="number">12</span>]</span><br><span class="line">dec</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>판매일자</th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>    </tr>  </thead>  <tbody>    <tr>      <td>14076</td>      <td>2018-12-01</td>      <td>12:13</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>1</td>      <td>5</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>14077</td>      <td>2018-12-01</td>      <td>12:18</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>1</td>      <td>5</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>14078</td>      <td>2018-12-01</td>      <td>12:53</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>1</td>      <td>5</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>14079</td>      <td>2018-12-01</td>      <td>13:59</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>1</td>      <td>5</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>14080</td>      <td>2018-12-01</td>      <td>14:24</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>1</td>      <td>5</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>15534</td>      <td>2018-12-31</td>      <td>1:14</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15535</td>      <td>2018-12-31</td>      <td>1:16</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15536</td>      <td>2018-12-31</td>      <td>1:29</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15537</td>      <td>2018-12-31</td>      <td>1:31</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>    <tr>      <td>15538</td>      <td>2018-12-31</td>      <td>1:37</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>    </tr>  </tbody></table><p>1463 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(dec[<span class="string">'date'</span>])</span><br><span class="line">plt.title(<span class="string">"12월 치킨 판매량"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_195_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 12월 데이터 주별로 나누기</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_12 = df1_1[<span class="string">'2018-12-03'</span>:<span class="string">'2018-12-09'</span>]</span><br><span class="line">a_12[<span class="string">'week'</span>] = <span class="string">'1주'</span></span><br><span class="line">a_12</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-12-03</td>      <td>15:36</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>3</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-03</td>      <td>15:49</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>3</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-03</td>      <td>17:23</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>12</td>      <td>3</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-03</td>      <td>17:27</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>12</td>      <td>3</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-03</td>      <td>17:41</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>3</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-12-09</td>      <td>0:29</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>9</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-09</td>      <td>0:44</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>12</td>      <td>9</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-09</td>      <td>0:47</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>9</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-09</td>      <td>1:23</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>9</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-09</td>      <td>1:49</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>9</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>1주</td>    </tr>  </tbody></table><p>340 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b_12 = df1_1[<span class="string">'2018-12-10'</span>:<span class="string">'2018-12-16'</span>]</span><br><span class="line">b_12[<span class="string">'week'</span>] = <span class="string">'2주'</span></span><br><span class="line">b_12</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-12-11</td>      <td>16:10</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>11</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-12-11</td>      <td>16:30</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>11</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-12-11</td>      <td>16:49</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>11</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-12-11</td>      <td>17:16</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>11</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-12-11</td>      <td>17:20</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>11</td>      <td>1</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-12-16</td>      <td>23:33</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>16</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>2주</td>    </tr>    <tr>      <td>2018-12-16</td>      <td>0:40</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>16</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-12-16</td>      <td>1:20</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>16</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-12-16</td>      <td>1:44</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>16</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>    <tr>      <td>2018-12-16</td>      <td>1:46</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>16</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>2주</td>    </tr>  </tbody></table><p>330 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c_12 = df1_1[<span class="string">'2018-12-17'</span>:<span class="string">'2018-12-23'</span>]</span><br><span class="line">c_12[<span class="string">'week'</span>] = <span class="string">'3주'</span></span><br><span class="line">c_12</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-12-17</td>      <td>17:15</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>17</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-12-17</td>      <td>17:45</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>17</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-12-17</td>      <td>18:04</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>17</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-12-17</td>      <td>18:23</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>17</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>    <tr>      <td>2018-12-17</td>      <td>18:30</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>12</td>      <td>17</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-12-23</td>      <td>23:12</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>23</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-12-23</td>      <td>23:18</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>23</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-12-23</td>      <td>23:42</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>23</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-12-23</td>      <td>0:32</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>23</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>3주</td>    </tr>    <tr>      <td>2018-12-23</td>      <td>0:51</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>23</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>3주</td>    </tr>  </tbody></table><p>302 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d_12 = df1_1[<span class="string">'2018-12-24'</span>:<span class="string">'2018-12-30'</span>]</span><br><span class="line">d_12[<span class="string">'week'</span>] = <span class="string">'4주'</span></span><br><span class="line">d_12</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-12-24</td>      <td>14:59</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>24</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-12-24</td>      <td>16:58</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>24</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-12-24</td>      <td>17:18</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>12</td>      <td>24</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-12-24</td>      <td>17:24</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>24</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-12-24</td>      <td>17:26</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>24</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-12-30</td>      <td>0:45</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>30</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-12-30</td>      <td>0:59</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>30</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-12-30</td>      <td>1:05</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>30</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>4주</td>    </tr>    <tr>      <td>2018-12-30</td>      <td>1:09</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>12</td>      <td>30</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>    <tr>      <td>2018-12-30</td>      <td>1:32</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>12</td>      <td>30</td>      <td>6</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>4주</td>    </tr>  </tbody></table><p>315 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e_12 = df1_1[<span class="string">'2018-12-31'</span>]</span><br><span class="line">e_12[<span class="string">'week'</span>] = <span class="string">'5주'</span></span><br><span class="line">e_12</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-12-31</td>      <td>14:59</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>15:12</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>15:47</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>16:40</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>17:11</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>17:23</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>17:37</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>17:45</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:04</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:08</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:15</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:19</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:22</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:27</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:33</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:34</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:55</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:55</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>18:55</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>19:15</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>19:19</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>19:22</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>19:31</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>19:36</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>19:42</td>      <td>신림동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>19:46</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>19:57</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>20:16</td>      <td>신림동</td>      <td>카드</td>      <td>기타</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>20:33</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>20:34</td>      <td>신림동</td>      <td>현금</td>      <td>기타</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>20:35</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>20:42</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>20:52</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>21:13</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>21:35</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>21:36</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>21:37</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>21:42</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>21:51</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>21:53</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>21:54</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>22:10</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>22:16</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>22:28</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>22:42</td>      <td>신림동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>22:56</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>23:08</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>23:18</td>      <td>봉천동</td>      <td>현금</td>      <td>기타</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>23:47</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>23:57</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>0:15</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>순살</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>0:55</td>      <td>신림동</td>      <td>카드</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>0:58</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:09</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:14</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:16</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:29</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:31</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:37</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dec_week = pd.concat([a_12, b_12, c_12, d_12, e_12], axis=<span class="number">0</span>)</span><br><span class="line">dec_week</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-12-03</td>      <td>15:36</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>3</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-03</td>      <td>15:49</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>3</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-03</td>      <td>17:23</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>12</td>      <td>3</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-03</td>      <td>17:27</td>      <td>봉천동</td>      <td>카드</td>      <td>기타</td>      <td>12</td>      <td>3</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-12-03</td>      <td>17:41</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>3</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:14</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:16</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:29</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:31</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:37</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>  </tbody></table><p>1346 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_dec = dec_week.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_dec</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>42.0</td>      <td>45.0</td>      <td>59.0</td>      <td>24.0</td>      <td>55.0</td>      <td>58.0</td>      <td>57.0</td>    </tr>    <tr>      <td>2주</td>      <td>NaN</td>      <td>46.0</td>      <td>58.0</td>      <td>49.0</td>      <td>52.0</td>      <td>56.0</td>      <td>69.0</td>    </tr>    <tr>      <td>3주</td>      <td>29.0</td>      <td>35.0</td>      <td>51.0</td>      <td>32.0</td>      <td>32.0</td>      <td>62.0</td>      <td>61.0</td>    </tr>    <tr>      <td>4주</td>      <td>59.0</td>      <td>63.0</td>      <td>35.0</td>      <td>NaN</td>      <td>38.0</td>      <td>61.0</td>      <td>59.0</td>    </tr>    <tr>      <td>5주</td>      <td>59.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_dec, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 12월 치킨 판매 데이터 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_204_0.png" class><blockquote><h3 id="연간-치킨-판매-분석"><a href="#연간-치킨-판매-분석" class="headerlink" title="연간 치킨 판매 분석"></a>연간 치킨 판매 분석</h3></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">week_2018 = pd.concat([jan_week, feb_week, mar_week, apr_week, may_week, jun_week, jul_week, aug_week, sep_week, nov_week, dec_week], axis=<span class="number">0</span>)</span><br><span class="line">week_2018</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>시간</th>      <th>주소</th>      <th>결제구분</th>      <th>주문내역1</th>      <th>month</th>      <th>date</th>      <th>weekday</th>      <th>계절</th>      <th>count</th>      <th>순살, 뼈</th>      <th>week</th>    </tr>    <tr>      <th>판매일자</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>2018-01-01</td>      <td>12:06</td>      <td>봉천동</td>      <td>현금</td>      <td>양념</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>12:19</td>      <td>봉천동</td>      <td>카드</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>13:01</td>      <td>신림동</td>      <td>카드</td>      <td>반반</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>13:48</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>2018-01-01</td>      <td>14:06</td>      <td>신림동</td>      <td>현금</td>      <td>후라이드</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>1주</td>    </tr>    <tr>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:14</td>      <td>봉천동</td>      <td>카드</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:16</td>      <td>봉천동</td>      <td>카드</td>      <td>양념</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:29</td>      <td>신림동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:31</td>      <td>봉천동</td>      <td>현금</td>      <td>반반</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>    <tr>      <td>2018-12-31</td>      <td>1:37</td>      <td>봉천동</td>      <td>현금</td>      <td>후라이드</td>      <td>12</td>      <td>31</td>      <td>0</td>      <td>겨울</td>      <td>1</td>      <td>뼈</td>      <td>5주</td>    </tr>  </tbody></table><p>14263 rows × 11 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table_2018 = week_2018.pivot_table(index=[<span class="string">'week'</span>], columns=[<span class="string">'weekday'</span>], aggfunc=<span class="string">'size'</span>)</span><br><span class="line">table_2018</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>375</td>      <td>336</td>      <td>511</td>      <td>353</td>      <td>497</td>      <td>565</td>      <td>610</td>    </tr>    <tr>      <td>2주</td>      <td>365</td>      <td>411</td>      <td>500</td>      <td>326</td>      <td>513</td>      <td>625</td>      <td>599</td>    </tr>    <tr>      <td>3주</td>      <td>339</td>      <td>367</td>      <td>485</td>      <td>353</td>      <td>439</td>      <td>583</td>      <td>526</td>    </tr>    <tr>      <td>4주</td>      <td>350</td>      <td>475</td>      <td>483</td>      <td>221</td>      <td>519</td>      <td>589</td>      <td>643</td>    </tr>    <tr>      <td>5주</td>      <td>196</td>      <td>179</td>      <td>198</td>      <td>111</td>      <td>164</td>      <td>247</td>      <td>210</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_2018, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>, fmt=<span class="string">'d'</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 주별 치킨 판매 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_208_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 5주차 제거</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table_2018_2 = table_2018.drop(<span class="string">'5주'</span>, axis=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_2018_2, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>, fmt=<span class="string">'d'</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 주별 치킨 판매 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_211_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table_total = table_2018.copy()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table_total[<span class="string">'total'</span>] = table_2018[<span class="number">0</span>] + table_2018[<span class="number">1</span>] + table_2018[<span class="number">2</span>] + table_2018[<span class="number">3</span>] + table_2018[<span class="number">4</span>] + table_2018[<span class="number">5</span>] + table_2018[<span class="number">6</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table_total</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>      <th>total</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>375</td>      <td>336</td>      <td>511</td>      <td>353</td>      <td>497</td>      <td>565</td>      <td>610</td>      <td>3247</td>    </tr>    <tr>      <td>2주</td>      <td>365</td>      <td>411</td>      <td>500</td>      <td>326</td>      <td>513</td>      <td>625</td>      <td>599</td>      <td>3339</td>    </tr>    <tr>      <td>3주</td>      <td>339</td>      <td>367</td>      <td>485</td>      <td>353</td>      <td>439</td>      <td>583</td>      <td>526</td>      <td>3092</td>    </tr>    <tr>      <td>4주</td>      <td>350</td>      <td>475</td>      <td>483</td>      <td>221</td>      <td>519</td>      <td>589</td>      <td>643</td>      <td>3280</td>    </tr>    <tr>      <td>5주</td>      <td>196</td>      <td>179</td>      <td>198</td>      <td>111</td>      <td>164</td>      <td>247</td>      <td>210</td>      <td>1305</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table_total.drop([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], axis=<span class="number">1</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table_total.drop(<span class="string">'5주'</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">5</span>, <span class="number">4</span>))</span><br><span class="line">sns.heatmap(table_total, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>, fmt=<span class="string">'d'</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 주별 치킨 판매 합계'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_217_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_2018_3, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>, fmt=<span class="string">'d'</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 주별 치킨 판매 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_218_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table_2018_weekday = table_2018.drop([<span class="number">5</span>, <span class="number">6</span>], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table_2018_weekday.drop(<span class="string">'5주'</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table_2018_weekday</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><p></style><p></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>weekday</th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>    <tr>      <th>week</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <td>1주</td>      <td>375</td>      <td>336</td>      <td>511</td>      <td>353</td>      <td>497</td>    </tr>    <tr>      <td>2주</td>      <td>365</td>      <td>411</td>      <td>500</td>      <td>326</td>      <td>513</td>    </tr>    <tr>      <td>3주</td>      <td>339</td>      <td>367</td>      <td>485</td>      <td>353</td>      <td>439</td>    </tr>    <tr>      <td>4주</td>      <td>350</td>      <td>475</td>      <td>483</td>      <td>221</td>      <td>519</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(table_2018_weekday, annot=<span class="literal">True</span>, cmap=sns.cubehelix_palette(<span class="number">8</span>), linewidth=<span class="number">.5</span>, cbar=<span class="literal">True</span>, square=<span class="literal">True</span>, fmt=<span class="string">'d'</span>)</span><br><span class="line">plt.yticks(rotation=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">'2018년 평일 치킨 판매 분석'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><img src="/2020/02/26/Chicken_2018/Chicken_2018_222_0.png" class><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/02/26/Chicken_2018/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - 자릿수 더하기</title>
      <link>https://yangjun-ux.github.io/2020/02/26/sum_ciphers/</link>
      <guid>https://yangjun-ux.github.io/2020/02/26/sum_ciphers/</guid>
      <pubDate>Wed, 26 Feb 2020 10:07:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습-레벨1&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습-레벨1&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습 - 레벨1&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습 - 레벨1&lt;/h3&gt;&lt;h4 id=&quot;자릿수-더하기&quot;&gt;&lt;a href=&quot;#자릿수-더하기&quot; class=&quot;headerlink&quot; title=&quot;자릿수 더하기&quot;&gt;&lt;/a&gt;자릿수 더하기&lt;/h4&gt;&lt;p&gt;숫자를 입력받아 각 자리수를 다 더해 출력&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습-레벨1"><a href="#Programmers-코딩테스트-연습-레벨1" class="headerlink" title="Programmers  코딩테스트 연습 - 레벨1"></a>Programmers  코딩테스트 연습 - 레벨1</h3><h4 id="자릿수-더하기"><a href="#자릿수-더하기" class="headerlink" title="자릿수 더하기"></a>자릿수 더하기</h4><p>숫자를 입력받아 각 자리수를 다 더해 출력</p><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><blockquote><h3 id="자릿수-더하기-1"><a href="#자릿수-더하기-1" class="headerlink" title="자릿수 더하기"></a>자릿수 더하기</h3></blockquote><p>자연수 N이 주어지면, N의 각 자릿수의 합을 구해서 출력하는 함수만들기<br>N = 123이면, 1 + 2 + 3을 리턴</p><blockquote><h4 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h4><table><thead><tr><th>N</th><th>answer</th></tr></thead><tbody><tr><td>123</td><td>6</td></tr><tr><td>987</td><td>24</td></tr></tbody></table></blockquote><blockquote><h3 id="코드-설명"><a href="#코드-설명" class="headerlink" title="코드 설명"></a>코드 설명</h3></blockquote><p>입력받은 숫자를 문자열로 바꾸고, for 문을 이용해 하나씩 뺴내 다시 정수타입으로 변환한다.<br>그리고 각 숫자를 더해서 출력한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(n)</span>:</span></span><br><span class="line">    n = str(n)</span><br><span class="line">    b = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(len(n)):</span><br><span class="line">        a = n[x]</span><br><span class="line">        a = int(a)</span><br><span class="line">        b += a</span><br><span class="line">    answer = b</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">345</span>)</span><br></pre></td></tr></table></figure><pre><code>12</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/02/26/sum_ciphers/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - 문자열 내림차순으로 배치하기</title>
      <link>https://yangjun-ux.github.io/2020/02/26/string_DESC/</link>
      <guid>https://yangjun-ux.github.io/2020/02/26/string_DESC/</guid>
      <pubDate>Wed, 26 Feb 2020 09:11:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습-레벨1&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습-레벨1&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습 - 레벨1&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습 - 레벨1&lt;/h3&gt;&lt;h4 id=&quot;문자열-내림차순으로-배치하기&quot;&gt;&lt;a href=&quot;#문자열-내림차순으로-배치하기&quot; class=&quot;headerlink&quot; title=&quot;문자열 내림차순으로 배치하기&quot;&gt;&lt;/a&gt;문자열 내림차순으로 배치하기&lt;/h4&gt;&lt;p&gt;소문자와 대문자가 섞인 문자열을 입력받아, 소문자를 큰 것부터 작은 순으로, 대문자를 큰 것부터 작은 순으로&lt;br&gt;정렬하는 문제입니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습-레벨1"><a href="#Programmers-코딩테스트-연습-레벨1" class="headerlink" title="Programmers  코딩테스트 연습 - 레벨1"></a>Programmers  코딩테스트 연습 - 레벨1</h3><h4 id="문자열-내림차순으로-배치하기"><a href="#문자열-내림차순으로-배치하기" class="headerlink" title="문자열 내림차순으로 배치하기"></a>문자열 내림차순으로 배치하기</h4><p>소문자와 대문자가 섞인 문자열을 입력받아, 소문자를 큰 것부터 작은 순으로, 대문자를 큰 것부터 작은 순으로<br>정렬하는 문제입니다.</p><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><blockquote><h3 id="문자열-내림차순으로-배치하기-1"><a href="#문자열-내림차순으로-배치하기-1" class="headerlink" title="문자열 내림차순으로 배치하기"></a>문자열 내림차순으로 배치하기</h3></blockquote><h4 id="문자열에-나타나는-문자를-큰것부터-작은-순으로-정렬해서-새로운-문자열을-리턴하는-함수만들기"><a href="#문자열에-나타나는-문자를-큰것부터-작은-순으로-정렬해서-새로운-문자열을-리턴하는-함수만들기" class="headerlink" title="문자열에 나타나는 문자를 큰것부터 작은 순으로 정렬해서 새로운 문자열을 리턴하는 함수만들기"></a>문자열에 나타나는 문자를 큰것부터 작은 순으로 정렬해서 새로운 문자열을 리턴하는 함수만들기</h4><h4 id="s는-영어-대소문자로만-구성되어-있고-대문자는-소문자보다-작은-것으로-간주합니다"><a href="#s는-영어-대소문자로만-구성되어-있고-대문자는-소문자보다-작은-것으로-간주합니다" class="headerlink" title="s는 영어 대소문자로만 구성되어 있고, 대문자는 소문자보다 작은 것으로 간주합니다."></a>s는 영어 대소문자로만 구성되어 있고, 대문자는 소문자보다 작은 것으로 간주합니다.</h4><h4 id="입출력-예시"><a href="#입출력-예시" class="headerlink" title="입출력 예시"></a>입출력 예시</h4><table><thead><tr><th>s</th><th>answer</th></tr></thead><tbody><tr><td>“Zbcdefg”</td><td>“gfedcbZ”</td></tr></tbody></table><blockquote><h3 id="코드설명"><a href="#코드설명" class="headerlink" title="코드설명"></a>코드설명</h3></blockquote><ol><li>두 개의 빈 리스트를 만듭니다.</li><li>문자열을 리스트로 변환하여 a에 저장합니다.</li><li>for 문을 이용해 리스트로 변환된 문자열을 하나씩 받아 대문자인 경우 ls에 저장, 소문자인 경우 ls_1에 저장합니다.</li><li>문자를 큰 것부터 작은 순으로 정렬 (reverse)를 해주고, 소문자가 대문자보다 큰 값이므로 ls_1에 ls를 더해줍니다.</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(s)</span>:</span></span><br><span class="line">    ls = []</span><br><span class="line">    ls_1 = []</span><br><span class="line">    a = list(s)</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> list(s):</span><br><span class="line">        <span class="keyword">if</span> x.upper() == x:</span><br><span class="line">            ls.append(x)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ls_1.append(x)</span><br><span class="line">    ls.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">    ls_1.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">    ls_2 = ls_1 + ls</span><br><span class="line">    answer = <span class="string">""</span>.join(ls_2)</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="string">"Zbcdefg"</span>)</span><br></pre></td></tr></table></figure><pre><code>&apos;gfedcbZ&apos;</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/02/26/string_DESC/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - 제일 작은 수 제거하기</title>
      <link>https://yangjun-ux.github.io/2020/02/26/delete_mini_num/</link>
      <guid>https://yangjun-ux.github.io/2020/02/26/delete_mini_num/</guid>
      <pubDate>Wed, 26 Feb 2020 09:01:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습-레벨1&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습-레벨1&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습 - 레벨1&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습 - 레벨1&lt;/h3&gt;&lt;h4 id=&quot;제일-작은-수를-제거한-후-배열을-리턴&quot;&gt;&lt;a href=&quot;#제일-작은-수를-제거한-후-배열을-리턴&quot; class=&quot;headerlink&quot; title=&quot;제일 작은 수를 제거한 후 배열을 리턴&quot;&gt;&lt;/a&gt;제일 작은 수를 제거한 후 배열을 리턴&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습-레벨1"><a href="#Programmers-코딩테스트-연습-레벨1" class="headerlink" title="Programmers  코딩테스트 연습 - 레벨1"></a>Programmers  코딩테스트 연습 - 레벨1</h3><h4 id="제일-작은-수를-제거한-후-배열을-리턴"><a href="#제일-작은-수를-제거한-후-배열을-리턴" class="headerlink" title="제일 작은 수를 제거한 후 배열을 리턴"></a>제일 작은 수를 제거한 후 배열을 리턴</h4><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><blockquote><h3 id="가장-작은-수-빼고-나머지-배열하기"><a href="#가장-작은-수-빼고-나머지-배열하기" class="headerlink" title="가장 작은 수 빼고 나머지 배열하기"></a>가장 작은 수 빼고 나머지 배열하기</h3></blockquote><h4 id="정수를-저장한-배열-arr-에서-가장-작은-수를-제거한-배열을-리턴하는-함수-solution을-완성해주세요"><a href="#정수를-저장한-배열-arr-에서-가장-작은-수를-제거한-배열을-리턴하는-함수-solution을-완성해주세요" class="headerlink" title="정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요."></a>정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요.</h4><h4 id="단-리턴하려는-배열이-빈-배열인-경우엔-배열에-1을-채워-리턴하세요"><a href="#단-리턴하려는-배열이-빈-배열인-경우엔-배열에-1을-채워-리턴하세요" class="headerlink" title="단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요."></a>단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요.</h4><h4 id="예를들어-arr이-4-3-2-1-인-경우는-4-3-2-를-리턴-하고-10-면-1-을-리턴-합니다"><a href="#예를들어-arr이-4-3-2-1-인-경우는-4-3-2-를-리턴-하고-10-면-1-을-리턴-합니다" class="headerlink" title="예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다."></a>예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.</h4><blockquote><h3 id="코드설명"><a href="#코드설명" class="headerlink" title="코드설명"></a>코드설명</h3></blockquote><ol><li>숫자가 하나인 경우는 -1로 처리</li><li>나머지 경우엔, 주어진 배열을 copy하고 sort 한 후 가장 작은 수를 찾아 원래 배열에서 제거한다.</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(arr)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(arr) == <span class="number">1</span>:</span><br><span class="line">        arr = [<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        arr_1 = arr.copy()</span><br><span class="line">        arr_1.sort()</span><br><span class="line">        arr.remove(arr_1[<span class="number">0</span>])</span><br><span class="line">    answer = arr</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution([<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">16</span>, <span class="number">9</span>])</span><br></pre></td></tr></table></figure><pre><code>[4, 5, 16, 9]</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/02/26/delete_mini_num/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - x만큼 간격이 있는 n개의 숫자</title>
      <link>https://yangjun-ux.github.io/2020/02/26/spaced_x_n/</link>
      <guid>https://yangjun-ux.github.io/2020/02/26/spaced_x_n/</guid>
      <pubDate>Wed, 26 Feb 2020 08:51:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습-레벨1&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습-레벨1&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습 - 레벨1&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습 - 레벨1&lt;/h3&gt;&lt;h4 id=&quot;X만큼-간격이-있는-n개의-숫자&quot;&gt;&lt;a href=&quot;#X만큼-간격이-있는-n개의-숫자&quot; class=&quot;headerlink&quot; title=&quot;X만큼 간격이 있는 n개의 숫자&quot;&gt;&lt;/a&gt;X만큼 간격이 있는 n개의 숫자&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습-레벨1"><a href="#Programmers-코딩테스트-연습-레벨1" class="headerlink" title="Programmers  코딩테스트 연습 - 레벨1"></a>Programmers  코딩테스트 연습 - 레벨1</h3><h4 id="X만큼-간격이-있는-n개의-숫자"><a href="#X만큼-간격이-있는-n개의-숫자" class="headerlink" title="X만큼 간격이 있는 n개의 숫자"></a>X만큼 간격이 있는 n개의 숫자</h4><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><blockquote><h3 id="X-만큼-간격이-있는-n개의-숫자"><a href="#X-만큼-간격이-있는-n개의-숫자" class="headerlink" title="X 만큼 간격이 있는 n개의 숫자"></a>X 만큼 간격이 있는 n개의 숫자</h3></blockquote><h4 id="함수-solution은-정수-x와-자연수-n을-입력-받아-x부터-시작해-x씩-증가하는-숫자를-n개-지니는-리스트를-리턴해야-합니다"><a href="#함수-solution은-정수-x와-자연수-n을-입력-받아-x부터-시작해-x씩-증가하는-숫자를-n개-지니는-리스트를-리턴해야-합니다" class="headerlink" title="함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다."></a>함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다.</h4><h4 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h4><table><thead><tr><th>x</th><th>n</th><th>answer</th></tr></thead><tbody><tr><td>2</td><td>5</td><td>[2,4,6,8,10]</td></tr><tr><td>4</td><td>3</td><td>[4,8,12]</td></tr><tr><td>-4</td><td>2</td><td>[-4, -8]</td></tr></tbody></table><h3 id="코드설명"><a href="#코드설명" class="headerlink" title="코드설명"></a>코드설명</h3><h4 id="x의-n까지의-배수를-모두-뽑아서-리스트로-반환"><a href="#x의-n까지의-배수를-모두-뽑아서-리스트로-반환" class="headerlink" title="x의 n까지의 배수를 모두 뽑아서 리스트로 반환"></a>x의 n까지의 배수를 모두 뽑아서 리스트로 반환</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(x, n)</span>:</span></span><br><span class="line">    answer = []</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> range(<span class="number">0</span>, n):</span><br><span class="line">        data_1 = x + x*data</span><br><span class="line">        answer.append(data_1)</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">-2</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><pre><code>[-2, -4, -6, -8, -10]</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/02/26/spaced_x_n/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Programmers 문제풀이연습  - 2016년 달력</title>
      <link>https://yangjun-ux.github.io/2020/02/25/2016/</link>
      <guid>https://yangjun-ux.github.io/2020/02/25/2016/</guid>
      <pubDate>Tue, 25 Feb 2020 14:55:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;Programmers-코딩테스트-연습-레벨1&quot;&gt;&lt;a href=&quot;#Programmers-코딩테스트-연습-레벨1&quot; class=&quot;headerlink&quot; title=&quot;Programmers  코딩테스트 연습 - 레벨1&quot;&gt;&lt;/a&gt;Programmers  코딩테스트 연습 - 레벨1&lt;/h3&gt;&lt;h4 id=&quot;2016년-달력&quot;&gt;&lt;a href=&quot;#2016년-달력&quot; class=&quot;headerlink&quot; title=&quot;2016년 달력&quot;&gt;&lt;/a&gt;2016년 달력&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;이 게시물은 연습이 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Programmers-코딩테스트-연습-레벨1"><a href="#Programmers-코딩테스트-연습-레벨1" class="headerlink" title="Programmers  코딩테스트 연습 - 레벨1"></a>Programmers  코딩테스트 연습 - 레벨1</h3><h4 id="2016년-달력"><a href="#2016년-달력" class="headerlink" title="2016년 달력"></a>2016년 달력</h4><p><strong>이 게시물은 연습이 목적입니다.</strong></p><a id="more"></a><blockquote><h1 id="2016년-달력-1"><a href="#2016년-달력-1" class="headerlink" title="2016년 달력"></a>2016년 달력</h1></blockquote><h3 id="Programmers-코딩테스트-연습-“2016년”"><a href="#Programmers-코딩테스트-연습-“2016년”" class="headerlink" title="Programmers 코딩테스트 연습 - “2016년”"></a>Programmers 코딩테스트 연습 - “2016년”</h3><h4 id="2016년-1월-1일은-금요일입니다-2016년-a월-b일은-무슨-요일일까요-두-수-a-b를-입력받아-2016년-a월-b일이-무슨-요일인지-리턴하는-함수-solution을-완성하세요"><a href="#2016년-1월-1일은-금요일입니다-2016년-a월-b일은-무슨-요일일까요-두-수-a-b를-입력받아-2016년-a월-b일이-무슨-요일인지-리턴하는-함수-solution을-완성하세요" class="headerlink" title="2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요? 두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요."></a>2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요? 두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요.</h4><h4 id="요일의-이름은-일요일부터-토요일까지-각각-SUN-MON-TUE-WED-THU-FRI-SAT입니다-예를-들어-a-5-b-24라면-5월-24일은-화요일이므로-문자열-TUE를-반환하세요"><a href="#요일의-이름은-일요일부터-토요일까지-각각-SUN-MON-TUE-WED-THU-FRI-SAT입니다-예를-들어-a-5-b-24라면-5월-24일은-화요일이므로-문자열-TUE를-반환하세요" class="headerlink" title="요일의 이름은 일요일부터 토요일까지 각각 SUN,MON,TUE,WED,THU,FRI,SAT입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로 문자열 TUE를 반환하세요."></a>요일의 이름은 일요일부터 토요일까지 각각 SUN,MON,TUE,WED,THU,FRI,SAT입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로 문자열 TUE를 반환하세요.</h4><blockquote><h3 id="월-a-일-b-를-입력하면-요일을-출력합니다"><a href="#월-a-일-b-를-입력하면-요일을-출력합니다" class="headerlink" title="월(a), 일(b)를 입력하면 요일을 출력합니다."></a>월(a), 일(b)를 입력하면 요일을 출력합니다.</h3><h3 id="코드-설명"><a href="#코드-설명" class="headerlink" title="코드 설명"></a>코드 설명</h3></blockquote><h4 id="매달-1일의-요일을-파악하여-idx-값을-맞추고-나머지-일들은-7로-나눈-나머지를-이용한-인덱싱을-통해-요일을-출력한다"><a href="#매달-1일의-요일을-파악하여-idx-값을-맞추고-나머지-일들은-7로-나눈-나머지를-이용한-인덱싱을-통해-요일을-출력한다" class="headerlink" title="매달 1일의 요일을 파악하여 idx 값을 맞추고, 나머지 일들은 7로 나눈 나머지를 이용한 인덱싱을 통해 요일을 출력한다."></a>매달 1일의 요일을 파악하여 idx 값을 맞추고, 나머지 일들은 7로 나눈 나머지를 이용한 인덱싱을 통해 요일을 출력한다.</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    ls = [<span class="string">"SUN"</span>, <span class="string">"MON"</span>, <span class="string">"TUE"</span>, <span class="string">"WED"</span>, <span class="string">"THU"</span>, <span class="string">"FRI"</span>, <span class="string">"SAT"</span>]</span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">        idx = <span class="number">5</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">2</span>:</span><br><span class="line">        idx = <span class="number">1</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">3</span>:</span><br><span class="line">        idx = <span class="number">2</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">4</span>:</span><br><span class="line">        idx = <span class="number">5</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">5</span>:</span><br><span class="line">        idx = <span class="number">0</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">6</span>:</span><br><span class="line">        idx = <span class="number">3</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">7</span>:</span><br><span class="line">        idx = <span class="number">5</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">8</span>:</span><br><span class="line">        idx = <span class="number">1</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">9</span>:</span><br><span class="line">        idx = <span class="number">4</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">10</span>:</span><br><span class="line">        idx = <span class="number">6</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">11</span>:</span><br><span class="line">        idx = <span class="number">2</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        idx = <span class="number">4</span></span><br><span class="line">        num = b % <span class="number">7</span></span><br><span class="line">        answer = ls[(idx + num - <span class="number">1</span>) % <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><blockquote><h4 id="실행-예시"><a href="#실행-예시" class="headerlink" title="실행 예시"></a>실행 예시</h4></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution(<span class="number">10</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><pre><code>&apos;TUE&apos;</code></pre>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/02/25/2016/#disqus_thread</comments>
    </item>
    
    <item>
      <title>글쓰기 테스트</title>
      <link>https://yangjun-ux.github.io/2020/02/06/%EA%B8%80%EC%93%B0%EA%B8%B0-%ED%85%8C%EC%8A%A4%ED%8A%B8/</link>
      <guid>https://yangjun-ux.github.io/2020/02/06/%EA%B8%80%EC%93%B0%EA%B8%B0-%ED%85%8C%EC%8A%A4%ED%8A%B8/</guid>
      <pubDate>Thu, 06 Feb 2020 10:55:02 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;두-번째-글&quot;&gt;&lt;a href=&quot;#두-번째-글&quot; class=&quot;headerlink&quot; title=&quot;두 번째 글&quot;&gt;&lt;/a&gt;두 번째 글&lt;/h2&gt;&lt;p&gt;hexo 블로그 글쓰기 연습을 하기로 했다. 아직은 익숙치가 않다.&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="두-번째-글"><a href="#두-번째-글" class="headerlink" title="두 번째 글"></a>두 번째 글</h2><p>hexo 블로그 글쓰기 연습을 하기로 했다. 아직은 익숙치가 않다.</p><a id="more"></a><h1 id="1-Blog-Open"><a href="#1-Blog-Open" class="headerlink" title="1. Blog Open"></a>1. Blog Open</h1><p>hexo 블로그를 만든지 2주 정도 되었는데 아직도 사용법이 익숙치가 않다.<br>매주 한 개씩 업로드할 예정인데 더 노력해야겠다<br>이미지 삽입도 테스트 해봐야겠다.</p><img src="/2020/02/06/%EA%B8%80%EC%93%B0%EA%B8%B0-%ED%85%8C%EC%8A%A4%ED%8A%B8/start.png" class><h1 id="2-향후-계획"><a href="#2-향후-계획" class="headerlink" title="2 향후 계획"></a>2 향후 계획</h1><ol><li>매주 1개씩 포스트 업로드</li><li>꾸미는 법 더 익히기</li><li>마크다운 문법 익히기</li><li>카테고리는 크게 MathMatics, Code, Project 등으로 나누어 업로드 할 예정이다.</li></ol>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/02/06/%EA%B8%80%EC%93%B0%EA%B8%B0-%ED%85%8C%EC%8A%A4%ED%8A%B8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>My first blog post with hexo</title>
      <link>https://yangjun-ux.github.io/2020/01/28/My-first-blog-post-with-hexo/</link>
      <guid>https://yangjun-ux.github.io/2020/01/28/My-first-blog-post-with-hexo/</guid>
      <pubDate>Tue, 28 Jan 2020 08:40:55 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;나의-첫번째-hexo-포스트&quot;&gt;&lt;a href=&quot;#나의-첫번째-hexo-포스트&quot; class=&quot;headerlink&quot; title=&quot;나의 첫번째 hexo 포스트&quot;&gt;&lt;/a&gt;나의 첫번째 hexo 포스트&lt;/h1&gt;&lt;p&gt;마크다운 문법으로 포스트를 작성하
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="나의-첫번째-hexo-포스트"><a href="#나의-첫번째-hexo-포스트" class="headerlink" title="나의 첫번째 hexo 포스트"></a>나의 첫번째 hexo 포스트</h1><p>마크다운 문법으로 포스트를 작성하고 hexo generate를 수행하면 html로 변환합니다.</p>]]></content:encoded>
      
      <comments>https://yangjun-ux.github.io/2020/01/28/My-first-blog-post-with-hexo/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
